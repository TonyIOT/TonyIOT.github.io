<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ESP8266物联网开发笔记06—ESP8266驱动OLED屏</title>
      <link href="/posts/290a.html"/>
      <url>/posts/290a.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/ESP8266-06-07.jpg" alt=""></p><p>在进行后续的ESP8266学习前，我们先来对OLED屏进行驱动，为后续学习提供直观的信息显示。</p><h2 id="1-安装驱动库"><a href="#1-安装驱动库" class="headerlink" title="1. 安装驱动库"></a>1. 安装驱动库</h2><p>在之前的Arduino系列教程中，也有对OLED进行驱动的示例。这里我们依然使用「Adafruit_SSD1306」驱动库。</p><p>在Arduino IDE中点击「项目」—「加载库」—「管理库」，查找选择最新版本，点击安装，然后在弹出的对话框中选择Install all，安装全部的关联库。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/ESP8266-06-02.jpg" alt="安装驱动库"></p><h2 id="2-硬件连接"><a href="#2-硬件连接" class="headerlink" title="2.硬件连接"></a>2.硬件连接</h2><p>这里使用IIC驱动屏，在IOT Kit开发板上，ESP8266的GPIO4和GPIO5分别通过跳线帽连接到OLED屏的SDA和SCL引脚。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/ESP8266-06-03.jpg" alt="IOT Kit连接"></p><h2 id="3-编程下载"><a href="#3-编程下载" class="headerlink" title="3.编程下载"></a>3.编程下载</h2><p>在Arduino IDE中新建sketch，拷贝如下代码并保存。</p><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * oled * ESP8266驱动OLED屏 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span>Adafruit_SSD1306 <span class="token function">oled</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  oled<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span><span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体大小  </span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-TonyCode-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置字体大小  </span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"OLED TEST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p>电脑连接开发板，在「工具」—「开发板」—「端口」中选择正确的端口号，点击上传，程序编译并上传。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/ESP8266-06-06.jpg" alt="程序下载"></p><p>上传完成后，可以看到OLED可以显示了。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/ESP8266-06-05.jpg" alt="实验现象"></p><h2 id="4-显示WiFi信息"><a href="#4-显示WiFi信息" class="headerlink" title="4. 显示WiFi信息"></a>4. 显示WiFi信息</h2><p>在完成对OLED屏的驱动后，结合前篇连接网络的例程，我们就可以在OLED屏上查看连网信息了。</p><p>拷贝如下程序编译上传，之前在串口显示的连网信息就可以在OLED屏上显示了。</p><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * oled_infor * OLED显示连网信息 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ESP8266WiFi.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> ssid     <span class="token operator">=</span> <span class="token string">"your-ssid"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//连接WIFI名(SSID)</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> password <span class="token operator">=</span> <span class="token string">"your-password"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//WIFI密码</span>Adafruit_SSD1306 <span class="token function">oled</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  oled<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span><span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体大小  </span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"WiFi Information"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  WiFi<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>ssid<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//启动网络连接</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span>WiFi<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> WL_CONNECTED<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//检测网络是否连接成功</span>  <span class="token punctuation">{</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>    oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>  <span class="token punctuation">}</span>  oled<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置字体大小  </span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Connected,IP address:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>WiFi<span class="token punctuation">.</span><span class="token function">localIP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/ESP8266-06-07.jpg" alt="实验现象"></p><hr><p>关注公众号「TonyCode」。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ESP8266 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266物联网开发笔记05—ESP8266连接网络</title>
      <link href="/posts/2fa2.html"/>
      <url>/posts/2fa2.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-03-01.jpg" alt=""></p><p>ESP8266既可以作为一个无线终端(STA模式)，像手机一样连接路由器，也可以作为热点(AP模式)，像路由器一样让手机、电脑来连接。本篇介绍ESP8266作为无线终端连接网络。</p><h2 id="1-连接网络"><a href="#1-连接网络" class="headerlink" title="1. 连接网络"></a>1. 连接网络</h2><p>打开Arduino IDE，新建sketch，拷贝如下代码并保存。</p><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * connect01 * ESP8266连接网络 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ESP8266WiFi.h></span></span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> ssid     <span class="token operator">=</span> <span class="token string">"your-ssid"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//连接WIFI名(SSID)</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> password <span class="token operator">=</span> <span class="token string">"your-password"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//WIFI密码</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  WiFi<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>ssid<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//启动网络连接</span>  Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Begin to Connect %s\r\n"</span><span class="token punctuation">,</span> ssid<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span>WiFi<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> WL_CONNECTED<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//检测网络是否连接成功</span>  <span class="token punctuation">{</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Connected, IP address: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>WiFi<span class="token punctuation">.</span><span class="token function">localIP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//返回ESP8266的IP地址</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p>电脑连接开发板，在工具—开发板—端口中选择正确的端口号，点击上传，程序编译并上传。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/ESP8266-05-01.jpg" alt="程序下载"></p><p>上传完成后打开串口监视器，波特率设置115200，可以看到串口打印联网信息如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/ESP8266-05-02.jpg" alt="打印信息"></p><p>当成功连接网络后，ESP8266将获取到IP地址，在同一局域网下的电脑端，打开命令提示符，通过ping命令测试通讯正常。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/ESP8266-05-03.jpg" alt="网络测试"></p><h2 id="2-扫描多个热点连接"><a href="#2-扫描多个热点连接" class="headerlink" title="2. 扫描多个热点连接"></a>2. 扫描多个热点连接</h2><p>在ESP8266WiFiMulti库中，为我们提供了往ESP8266添加多个热点存储功能，ESP8266会在添加的多个热点中，自动搜索信号最强的那个连接，当开发板需要在多个地方使用时，可以非常方便的自动连接当前环境的热点。</p><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * connect02 * ESP8266在多个热点中寻找信号最强的进行连接 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ESP8266WiFi.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;ESP8266WiFiMulti.h></span></span>ESP8266WiFiMulti wifis<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//建立ESP8266WiFiMulti对象</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//添加多个热点信息</span>  wifis<span class="token punctuation">.</span><span class="token function">addAP</span><span class="token punctuation">(</span><span class="token string">"TonyCode"</span><span class="token punctuation">,</span> <span class="token string">"12345678"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  wifis<span class="token punctuation">.</span><span class="token function">addAP</span><span class="token punctuation">(</span><span class="token string">"TonyCode1"</span><span class="token punctuation">,</span><span class="token string">"12123455"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  wifis<span class="token punctuation">.</span><span class="token function">addAP</span><span class="token punctuation">(</span><span class="token string">"TonyCode2"</span><span class="token punctuation">,</span><span class="token string">"88888888"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  wifis<span class="token punctuation">.</span><span class="token function">addAP</span><span class="token punctuation">(</span><span class="token string">"TonyCode3"</span><span class="token punctuation">,</span><span class="token string">"66666666"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Begin to Connect"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span>wifis<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> WL_CONNECTED<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//检测网络是否连接成功</span>  <span class="token punctuation">{</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Connected %s, IP address: "</span><span class="token punctuation">,</span> WiFi<span class="token punctuation">.</span><span class="token function">SSID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>WiFi<span class="token punctuation">.</span><span class="token function">localIP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//返回ESP8266的IP地址</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p>通过addAP()函数，添加需要存储的热点SSID和密码，run()函数在当前环境中搜索存储的热点，寻找信号最强的进行连接。</p><hr><p>关注公众号「TonyCode」。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ESP8266 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266物联网开发笔记04—ESP8266程序下载</title>
      <link href="/posts/c5e7.html"/>
      <url>/posts/c5e7.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-03-01.jpg" alt=""></p><p>在搭建好开发环境，准备好ESP8266硬件后，我们就可以开始编写下载程序了。本篇介绍ESP8266程序下载，通过ESP8266特殊API打印输出模块基本信息。</p><h2 id="1-安装驱动"><a href="#1-安装驱动" class="headerlink" title="1. 安装驱动"></a>1. 安装驱动</h2><p>通过数据线将ESP8266开发板连接到电脑，打开设备管理器，在端口中查看端口号。下图中电脑同时连接了NodeMCU开发板和IOT Kit开发板，它们的驱动芯片分别为CP2102和CH340，对应端口号为COM6和COM31。不同电脑显示端口号不尽相同，以实际为准。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-04-01.jpg" alt="查看端口号"></p><p>如果你的电脑之前没有安装过这两款芯片的驱动程序，则设备无法识别，需要安装对应的驱动程序。百度对应芯片下载驱动，然后按照步骤安装即可，这里不做详细介绍，笔者已将驱动打包下载，文末可获取链接。</p><h2 id="2-程序下载"><a href="#2-程序下载" class="headerlink" title="2. 程序下载"></a>2. 程序下载</h2><p>启动Arduino IDE，点击工具—开发板—ESP8266 Boards，选择NodeMCU1.0。端口号选择电脑设备浏览器中识别的端口号。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-04-02.jpg" alt="开发板类型"></p><p>根据自己开发板的类型，在ESP8266 Boards选择对应的种类，每种开发板都涉及到一些闪存相关配置，如连接模式、容量配置、波特率等等。一般情况我们设置好对应端口号，其他保持默认即可。</p><p>点击文件—示例—ESP8266—Blink，打开闪灯示例程序。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-04-03.jpg" alt="Blink示例"></p><p>点击上传，消息栏将显示相关编译上传信息，上传成功后，按板载复位键，ESP8266模块自带的LED灯按照程序延时时间亮灭。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-04-04.jpg" alt="程序下载"></p><h2 id="3-ESP8266特殊API介绍"><a href="#3-ESP8266特殊API介绍" class="headerlink" title="3. ESP8266特殊API介绍"></a>3. ESP8266特殊API介绍</h2><p>在IDE中点击文件—新建，拷贝如下代码并保存。</p><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * Demo01 * 打印ESP8266模块信息 */</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// put your setup code here, to run once:</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The Chip ID:0x%X\r\n"</span><span class="token punctuation">,</span> ESP<span class="token punctuation">.</span><span class="token function">getChipId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取芯片ID</span>  Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The Core Version:%s\r\n"</span><span class="token punctuation">,</span> ESP<span class="token punctuation">.</span><span class="token function">getCoreVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取核心库版本</span>  Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The SDK Version:%s\r\n"</span><span class="token punctuation">,</span> ESP<span class="token punctuation">.</span><span class="token function">getSdkVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取SDK版本</span>  Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The CPU Freq:%d MHz\r\n"</span><span class="token punctuation">,</span> ESP<span class="token punctuation">.</span><span class="token function">getCpuFreqMHz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取CPU运行频率</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The Flash Chip ID:0x%X\r\n"</span><span class="token punctuation">,</span> ESP<span class="token punctuation">.</span><span class="token function">getFlashChipId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取闪存ID</span>  Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The Flash Real Size:%d KBytes\r\n"</span><span class="token punctuation">,</span> ESP<span class="token punctuation">.</span><span class="token function">getFlashChipRealSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取闪存容量</span>  Serial<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The Flash Chip Speed:%d MHz\r\n"</span><span class="token punctuation">,</span> ESP<span class="token punctuation">.</span><span class="token function">getFlashChipSpeed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取闪存芯片运行频率</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// put your main code here, to run repeatedly:</span><span class="token punctuation">}</span></code></pre><p>点击上传，程序编译上传成功后，打开串口监视器，波特率设置115200，按板载复位按键进行硬件复位，可看到串口监视器打印相关信息。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-04-05.jpg" alt="模块信息"></p><p>ESP8266提供了一些特殊的API，可以获取模块相关信息，<a href="https://arduino-esp8266.readthedocs.io/en/latest/libraries.html#esp-specific-apis" target="_blank" rel="noopener">官方文档</a>给出了相关说明。这里简要列举几个：</p><ul><li>ESP.getChipId()：获取ESP8266 ID</li><li>ESP.getCoreVersion()：获取核心库版本</li><li>ESP.getCpuFreqMHz()：获取CPU运行频率</li><li>ESP.getFlashChipRealSize()：获取闪存容量</li><li>ESP.getFlashChipSpeed()：获取闪存运行频率</li></ul><p>在文件—示例中有丰富的例程可供学习，动手尝试下吧。</p><hr><p>关注公众号「TonyCode」。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ESP8266 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266物联网开发笔记03—ESP8266硬件介绍</title>
      <link href="/posts/9da6.html"/>
      <url>/posts/9da6.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-03-01.jpg" alt=""></p><p>在搭建好开发环境后，下一步就要选择合适的ESP8266硬件了。当下可以买到的ESP8266开发板有很多种，大多都基于ESP8266模组进行外围电路搭建，集成了串口自动下载功能，使得程序下载非常方便。</p><h2 id="1-ESP8266模组"><a href="#1-ESP8266模组" class="headerlink" title="1. ESP8266模组"></a>1. ESP8266模组</h2><p>大多数ESP8266开发板都是基于模组的，所以直接使用模组，配合串口下载模块，即可进行程序下载。常用的ESP-12模块，下载对应管脚图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-03-02.jpg" alt="引脚接线"></p><p>ESP8266的下载模式是通过指定引脚高低电平来配置的，下载模式和运行模式引脚配置如下：</p><table><thead><tr><th>模式</th><th>GPIO15</th><th>GPIO0</th><th>GPIO2</th></tr></thead><tbody><tr><td>UART下载模式</td><td>低</td><td>低</td><td>高</td></tr><tr><td>Flash Boot(程序运行)模式</td><td>低</td><td>高</td><td>高</td></tr></tbody></table><h2 id="2-D1-开发板"><a href="#2-D1-开发板" class="headerlink" title="2. D1 开发板"></a>2. D1 开发板</h2><p>D1 WiFi开发板在外形上兼容了Arduino UNO R3开发板，具有11个IO引脚，外形如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-03-03.jpg" alt="D1开发板"></p><p>还有更小尺寸的Mini版本，也集成了串口自动下载电路。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-03-04.jpg" alt="Mini开发板"></p><h2 id="3-NodeMcu开发板"><a href="#3-NodeMcu开发板" class="headerlink" title="3. NodeMcu开发板"></a>3. NodeMcu开发板</h2><p>NodeMcu开发板是最常见的ESP8266开发板，集成了串口自动下载电路，ESP8266模组的引脚通过双列直插的排针引出，配合面包板可以很方便的搭建各种电路。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-03-05.jpg" alt="NodeMcu开发板"></p><p>常见的有两种，它们使用的串口下载芯片有所不同，上图中左侧窄一点的使用的是CP2102芯片，右侧宽一点的使用了CH340芯片，对应安装驱动即可使用。</p><p>在使用NodeMcu开发板时，需要注意引脚定义，开发板上引脚丝印与模组GPIO管脚对应如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-03-06.jpg" alt="引脚定义"></p><h2 id="4-DIY-开发板"><a href="#4-DIY-开发板" class="headerlink" title="4. DIY 开发板"></a>4. DIY 开发板</h2><p>在了解了各种开发板的特点后，可以根据需要自己DIY。对于ESP8266的学习而言，一块NodeMcu外加面包板配件足够了，就像笔者之前的Arduino相关教程中那样灵活的搭建电路，完成设计。</p><p>而这次，笔者DIY了一块开发板，基于ESP8266-12模组，支持串口自动下载，搭载了一些必要的外设模块，如OLED显示屏、DHT11温湿度、继电器、电机、RGB灯、光敏等。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-03-07.jpg" alt="IOT Kit"></p><p>模组的引脚通过排针引出，为了更加灵活，板载外设控制引脚与模组引脚通过跳线帽短接，也可自行组合。后续会以此作为硬件平台，学习ESP8266物联网相关的知识。</p><p>搭建好软件环境，准备好硬件开发板，之后就可以开始ESP8266学习了。</p><hr><p>关注公众号「TonyCode」。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ESP8266 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266物联网开发笔记02—Arduino IDE搭建ESP8266开发环境</title>
      <link href="/posts/72f3.html"/>
      <url>/posts/72f3.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-02-01.jpg" alt=""></p><p>在ESP8266的众多开发方式中，Arduino开发方式深受玩家喜爱，强大的Arduino生态为ESP8266的开发提供了便利。工欲善其事，必先利其器，本篇介绍Arduino IDE搭建ESP8266开发环境。</p><h2 id="1-Arduino-IDE安装"><a href="#1-Arduino-IDE安装" class="headerlink" title="1. Arduino IDE安装"></a>1. Arduino IDE安装</h2><p>arduino<a href="https://www.arduino.cc/en/software" target="_blank" rel="noopener">官网</a>提供了不同平台的Arduino IDE安装包，当前最新版本1.8.16，对应自己的电脑系统进行下载即可。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-02-02.jpg" alt="Arduino IDE"></p><p>下载后，双击可执行文件，按照安装步骤安装好Arduino IDE。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-02-05.jpg" alt="启动IDE"></p><h2 id="2-安装ESP8266支持"><a href="#2-安装ESP8266支持" class="headerlink" title="2. 安装ESP8266支持"></a>2. 安装ESP8266支持</h2><p>点击文件—首选项，打开首选项对话框，在“附加到开发板管理网址”中，输入以下网址：</p><pre class=" language-html"><code class="language-html">http://arduino.esp8266.com/stable/package_esp8266com_index.json</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-02-03.jpg" alt="设置首选项"></p><p>重启IDE，点击工具—开发板—开发板管理器，在搜索栏中输入“esp8266”，找到ESP8266插件。在下拉选项中选择最新版本进行安装，安装过程受网络环境影响。若反复安装失败，可百度相关的一键安装文件。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-02-04.jpg" alt="安装插件"></p><h2 id="3-选择ESP8266开发板"><a href="#3-选择ESP8266开发板" class="headerlink" title="3. 选择ESP8266开发板"></a>3. 选择ESP8266开发板</h2><p>ESP8266插件安装完成后，点击工具—开发板，可以看到在Arduino AVR Boards外，新增加了ESP8266 Boards，里面包含了众多ESP8266开发板支持。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-02-06.jpg" alt="Esp8266 Boards"></p><p>至此，ESP8266的Arduino开发环境就安装完成了，后续就可以连接开发板编写程序使用ESP8266了。</p><hr><p>关注公众号「TonyCode」。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ESP8266 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP8266物联网开发笔记01—ESP8266开发方式知多少</title>
      <link href="/posts/5f07.html"/>
      <url>/posts/5f07.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-01.jpg" alt="ESP8266"></p><p>说起国内物联网行业，ESP8266的地位不可小觑。作为万物互联的IOT基础，它以绝对亲民的价格席卷整个行业，深受开发者的热捧。通过厂商、组织及爱好者的努力，多种固件、多种开发方式应运而生，本文汇总ESP8266常见的开发方式。</p><h2 id="1-ESP8266简介"><a href="#1-ESP8266简介" class="headerlink" title="1. ESP8266简介"></a>1. ESP8266简介</h2><p>ESP8266是<a href="https://www.espressif.com/zh-hans" target="_blank" rel="noopener">乐鑫</a>推出的面向物联网应用的高性价比、高度集成的Wi-Fi MCU，内置32-bit MCU和2.4GHz的Wi-Fi芯片。</p><ul><li>单核CPU时钟频率高达160MHz。</li><li>高度集成，外围电路少，降低PCB占用空间。</li><li>+19.5dBm天线端输出功率，信号覆盖范围广。</li><li>低功耗，睡眠电流小。</li><li>外设包括UART、GPIO、I2S、I2C、SDIO、PWM、ADC和SPI。</li></ul><p>ESP8266是QFN封装的芯片，而我们常见的是基于芯片封装的各种型号的ESP8266模组，除了乐鑫外，也有很多厂商推出了自己的ESP8266模组，如安信可科技等。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-02.jpg" alt="ESP8266模组"></p><h2 id="2-SDK开发方式"><a href="#2-SDK开发方式" class="headerlink" title="2.SDK开发方式"></a>2.SDK开发方式</h2><p>ESP8266 Software Development Kit (SDK) 是乐鑫为开发者提供的物联⽹ (IoT) 应⽤开发平台，包括基础平台以及上层应⽤开发示例，如智能灯、智能开关等。</p><p>SDK可分为：non-OS 和 RTOS 两种版本。</p><ul><li>Non-OS SDK 是不基于操作系统的 SDK，提供 IOT_Demo 和 AT 的编译。</li><li>RTOS SDK 基于 FreeRTOS。</li></ul><p>可通过<a href="https://github.com/espressif/ESP8266_RTOS_SDK" target="_blank" rel="noopener">GitHub</a>获取SDK，在<a href="https://www.espressif.com/zh-hans/products/socs/esp8266" target="_blank" rel="noopener">乐鑫官网</a>可找到编程指南等技术文档。乐鑫提供的SDK开发环境是基于Linux平台的，对Linux平台不熟悉的朋友可以使用安信可基于Window平台的开发环境。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-03.jpg" alt="开发资源"></p><h2 id="3-AT指令开发方式"><a href="#3-AT指令开发方式" class="headerlink" title="3. AT指令开发方式"></a>3. AT指令开发方式</h2><p>作为IOT芯片，AT指令开发也是必不可少的。主控制器通过串口通讯，使用AT命令来控制ESP8266，完成网络通讯。官方提供了AT指令集以及使用示例帮助用户完成开发。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-04.jpg" alt="AT指令集"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-05.jpg" alt="AT控制"></p><h2 id="4-Arduino开发方式"><a href="#4-Arduino开发方式" class="headerlink" title="4.Arduino开发方式"></a>4.Arduino开发方式</h2><p>ESP8266也被移植到了Arduino平台，相对于SDK开发，这大大降低了开发门槛，开发者可以像使用Arduino一样非常轻松的使用ESP8266，Arduino强大的生态也为ESP8266提供了更多的可能。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-07.jpg" alt="Arduino IDE"></p><p>可以从<a href="https://github.com/esp8266/Arduino" target="_blank" rel="noopener">GitHub</a>上获取ESP8266 Arduino Core库。通过<a href="https://arduino-esp8266.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">开发文档</a>，可以帮助开发者快速上手。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-06.jpg" alt="在线文档"></p><h2 id="5-MicroPython开发方式"><a href="#5-MicroPython开发方式" class="headerlink" title="5. MicroPython开发方式"></a>5. MicroPython开发方式</h2><p>MicroPython即Python for Microcontroller，意为运行在单片机上的Python。<a href="http://micropython.org/" target="_blank" rel="noopener">MicroPython</a>开发了自己的Python实现，可以使用Python语言来开发MCU。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-08.jpg" alt="MicroPython"></p><p>随着MicroPython社区的迅速发展，MicroPython被移植到越来越多的MCU平台，其中包括ESP8266，可以使用简单的Python脚本语言轻松驱动<a href="http://docs.micropython.org/en/latest/esp8266/quickref.html" target="_blank" rel="noopener">ESP8266</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-09.jpg" alt="MicroPython for ESP8266"></p><h2 id="6-LUA开发方式"><a href="#6-LUA开发方式" class="headerlink" title="6. LUA开发方式"></a>6. LUA开发方式</h2><p><a href="http://www.nodemcu.com/index_cn.html" target="_blank" rel="noopener">NodeMCU</a>是一个开源的物联网平台，包括基于乐鑫ESP8266的固件和开发板，用几行简单的Lua脚本就能开发物联网应用。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-10.jpg" alt="NodeMCU"></p><p>可以从<a href="https://github.com/nodemcu/nodemcu-firmware" target="_blank" rel="noopener">GitHub</a>上获取NodeMCU开源库，官方也对开发示例做了展示。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-11.jpg" alt="Lua示例"></p><h2 id="7-JavaScript开发方式"><a href="#7-JavaScript开发方式" class="headerlink" title="7. JavaScript开发方式"></a>7. JavaScript开发方式</h2><p><a href="http://www.espruino.com/" target="_blank" rel="noopener">Espruino</a> 是英国Gordon Williams开发的基于微处理器的JavaScript解释器。烧入Espruino固件的MCU可以通过JavaScript语言进行开发。初期的Espruino开发板采用的STM32系列控制器，随后也推出了ESP8266版本，可以从<a href="https://github.com/espruino" target="_blank" rel="noopener">GitHub</a>上获取到固件库、基于浏览器的开发环境以及开发文档。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/esp8266-01-12.jpg" alt="Espruino"></p><p>基于ESP8266的SDK以及丰富的开源库，很多厂商、平台、组织、爱好者也推出了不同功能的固件，选择合适自己的方式来玩转ESP8266吧。</p><hr><p>关注公众号「TonyCode」。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ESP8266 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面包板自平衡机器人</title>
      <link href="/posts/95cc.html"/>
      <url>/posts/95cc.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/18.jpg" alt=""></p><p>自平衡机器人并不是什么新鲜事物，今天介绍的与其他平衡机器人的不同之处在于紧凑设计和模块化制作，只需要插入各种模块即可制作机器人，并可以在几分钟内组装完成。</p><h3 id="1-设计思路"><a href="#1-设计思路" class="headerlink" title="1. 设计思路"></a>1. 设计思路</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/2.png" alt=""></p><ul><li><strong>面包板</strong></li></ul><p>PCB 通常用于将电子元件连接在一起，但由于考虑到本次制作的模块化且易于组装，因此最好的方法是使用面包板。将使用 2 个迷你面包板来连接所有电子器件。</p><ul><li><strong>微控制器</strong></li></ul><p>这里使用Arduino Nano来作为微控制器板，用于控制电机、感测倾斜角度和实现 PID 算法。</p><ul><li><strong>运动追踪装置</strong></li></ul><p>为了测量倾斜角，我们将使用 MPU6050 运动跟踪设备，它具有 3 轴加速度计和 3 轴陀螺仪，并使用互补滤波器，将来自加速度计和陀螺仪的测量值结合起来，以获得无噪声和稳定的角度值。</p><ul><li><strong>电机</strong></li></ul><p>本次使用的电机是 12V 300RPM N20 微型齿轮电机，带有兼容的轮子和安装支架。</p><ul><li><strong>电机驱动</strong></li></ul><p>为了驱动电机，将使用 L293d 电机驱动器。该驱动器在单个 DIP 封装中具有两个全 H 桥驱动器，非常适合本次应用。</p><ul><li><strong>其他</strong></li></ul><p>使用3D 打印的支架将所有东西固定在一起，而跨接线将用来连接所有电子器件。</p><h3 id="2-所需组件"><a href="#2-所需组件" class="headerlink" title="2. 所需组件"></a>2. 所需组件</h3><p><strong>电子元件</strong></p><ul><li>迷你面包板-2个</li><li>Arduino Nano-1个</li><li>MPU6050-1个</li><li>L293D电机驱动器(DIP封装)-1个</li><li>N20 微型齿轮电机(12V 300RPM)-2个</li><li>兼容 N20 电机的车轮-2个</li><li>9V电池-2个</li></ul><p><strong>耗材</strong></p><ul><li>彩色单股线</li><li>3D打印</li><li>公头排针</li><li>电池卡口连接器</li><li>扎线带</li><li>12V电源</li><li>直流连接端子</li><li>橡皮筋</li></ul><p><strong>工具</strong></p><ul><li>烙铁</li><li>焊锡丝</li><li>钳子</li></ul><h3 id="3-相关理论"><a href="#3-相关理论" class="headerlink" title="3. 相关理论"></a>3. 相关理论</h3><p><strong>机器人工作原理</strong></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/4.jpg" alt=""></p><p>自平衡机器人试图通过某种方式来抵消作用在其质心上的重力来平衡自己。使用电机来产生反作用力。你可以想象，当我们试图平衡手掌上的一根棍子时，我们会移动放在我们手掌上的棍子底部来平衡它。机器人也是如此，它使用电机轮移动其底座。</p><p><strong>什么是PID?</strong></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/5.jpg" alt=""></p><p>PID指的是比例、积分、微分，它是一种控制循环机制，主要作用是持续监控机器人倾斜角度并控制电机速度以达到平衡。</p><p><strong>什么是互补滤波器？</strong></p><p>可以通过两种方法使用 MPU6050 测量倾斜角，使用其加速度计或使用陀螺仪。这两者的问题是，加速度计容易受到噪声和陀螺仪测量值随时间从实际值漂移的影响。因此，为了避免这些，我们将两个值结合起来，并使用互补滤波器过滤掉错误。</p><h3 id="4-准备Arduino-Nano连接"><a href="#4-准备Arduino-Nano连接" class="headerlink" title="4. 准备Arduino Nano连接"></a>4. 准备Arduino Nano连接</h3><p>Arduino Nano 有很多 GPIO 可供使用，我们也不会全部使用它们。我们将只焊接那些正在使用的引脚，而不是焊接所有的排针。这样我们就有足够的空间让跳线绕面包板走线。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/robot-6.jpg" alt=""></p><ul><li>VIN</li><li>GND</li><li>5V</li><li>A4—SDA</li><li>A5—SCL</li><li>D5—M1power</li><li>D6—M2power</li><li>D8—M1enable</li><li>D9—M2enable</li><li>D10—M2方向</li><li>D11—M1方向</li><li>D2,D3,D7—供以后使用</li></ul><h3 id="5-准备MPU6050连接"><a href="#5-准备MPU6050连接" class="headerlink" title="5. 准备MPU6050连接"></a>5. 准备MPU6050连接</h3><p>MPU6050 使用 I2C 通信将测量数据传输到 Arduino Nano。将排针焊接到 VCC、GND、SCL、SDA 引脚。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/robot-7.jpg" alt=""></p><p>将 MPU 放在第二个面包板上连接：</p><table><thead><tr><th>MPU6050</th><th>Arduino Nano</th></tr></thead><tbody><tr><td>VCC</td><td>5V</td></tr><tr><td>GND</td><td>GND</td></tr><tr><td>SCL</td><td>A5</td></tr><tr><td>SDA</td><td>A4</td></tr></tbody></table><h3 id="6-程序及所需库"><a href="#6-程序及所需库" class="headerlink" title="6. 程序及所需库"></a>6. 程序及所需库</h3><p>MPU6050用的是Jeff Rowberg<a href="https://github.com/jrowberg/i2cdevlib" target="_blank" rel="noopener">开发的库</a>。下载后解压压缩包文件，将i2cdevlib-master\Arduino下的MPU6050和i2cdev两个文件夹，复制到Arduino IDE外部库文件夹中，重启IDE可看到安装好的库。</p><p>为了实现 PID 控制器，我们将使用 Brett Beauregard 的库。它可以从 Arduino IDE 本身的库管理器安装。</p><p>完整的程序代码可在文末获取。</p><h3 id="7-电路连接"><a href="#7-电路连接" class="headerlink" title="7. 电路连接"></a>7. 电路连接</h3><p>按照原理图连接所有电子器件。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/robot-20.png" alt=""></p><h3 id="8-3D打印及组装"><a href="#8-3D打印及组装" class="headerlink" title="8. 3D打印及组装"></a>8. 3D打印及组装</h3><p>本次设计使用fusion 360设计了底座和支架，3D文件可在文末获取。将电机和支架通过螺栓固定到底座，并将面包板和电池插入底座。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/robot-15.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/robot-16.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/robot-17.jpg" alt=""></p><h3 id="9-连接电机完成组装"><a href="#9-连接电机完成组装" class="headerlink" title="9. 连接电机完成组装"></a>9. 连接电机完成组装</h3><p>按照原理图，将电线焊接到电机。最后安装轮子完成组装。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/robot-19.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/robot-18.jpg" alt=""></p><h3 id="10-问题及改进"><a href="#10-问题及改进" class="headerlink" title="10.问题及改进"></a>10.问题及改进</h3><p>本次设计没有考虑电池是否能够为电机正常工作提供最大电流。虽然直流电机可以在明显低于额定电压的电压水平下运行，但 9V 电池无法为电机提供足够的电流来工作，最后使用了外接12V直流电源。后续可对电源部分进行改进升级。</p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arduino </tag>
            
            <tag> Robot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4G Cat.1模组ML302使用MQTT协议接入OneNet平台</title>
      <link href="/posts/2843.html"/>
      <url>/posts/2843.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/0.jpg" alt=""></p><p>拿到中移物联网的4G通用开发板许久了，上面搭载的是中移最新推出的LTE Cat.1模组ML302，本文通过AT命令操作ML302模组接入OneNet平台，使用MQTT协议进行数据收发，将整个流程摸索测试一遍，为后续程序开发做准备。</p><h3 id="1-ML302及开发板硬件介绍"><a href="#1-ML302及开发板硬件介绍" class="headerlink" title="1. ML302及开发板硬件介绍"></a>1. ML302及开发板硬件介绍</h3><p>ML302是LTE Cat.1模组，内部集成了丰富的网络协议和行业标准接口及功能，外设接口也蛮丰富，具体的软硬件资料可以从<a href="http://onemo10086.com/#/product/detail/21" target="_blank" rel="noopener">官网下载</a>。</p><p>4G通用开发板上的功能模块如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/1.jpg" alt=""></p><p>在开发板上电之前，需要使用跳线帽短接一下相关的插针进行配置：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/2.jpg" alt=""></p><p>将J1、J2处排针短接，J3根据使用的USB转串口模块电平进行选择。串口模块连接J4的UART0_TX、UART0_RX和GND，安装主天线，安装4G SIM卡，连接Micro USB接口给开发板供电。所有配置如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/3.jpg" alt=""></p><h3 id="2-模组上电初始化流程"><a href="#2-模组上电初始化流程" class="headerlink" title="2.模组上电初始化流程"></a>2.模组上电初始化流程</h3><p>打开串口助手，选择对应端口号，串口配置115200-N-8-1，打开板载电源开关，会看到串口调试助手有数据返回：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/4.jpg" alt=""></p><p>ML302开机默认手动PDP激活方式，上电初始化流程如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/5.jpg" alt=""></p><p>更多AT指令参考官方资料。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/6.jpg" alt=""></p><p>当模块初始化完成，就可以配置TCP/UDP跟服务器进行通讯了。模组内部集成了AT扩展指令集，支持MQTT协议通讯，包括MQTT参数设置、MQTT连接、订阅、发布、消息接收等。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/7.jpg" alt=""></p><p>具体请参考「ML302_MQTT用户手册」。</p><h3 id="3-OneNet平台添加设备"><a href="#3-OneNet平台添加设备" class="headerlink" title="3. OneNet平台添加设备"></a>3. OneNet平台添加设备</h3><p>登录注册好的OneNet平台，进入开发者中心，点击全部产品，选择基础服务中的MQTT物联网套件:</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/8.jpg" alt=""></p><p>点击添加产品，根据实际填写信息，设备接入协议选择MQTTS：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/9.jpg" alt=""></p><p>接着点击添加设备，给设备取个名字：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/10.jpg" alt=""></p><p>现在平台设备已经创建好了，后面就可以配置模组上线，进行数据收发了。不过在此之前，需要下载token生成工具，根据产品id等信息生成token，这在后续设备进行MQTT配置时需要用到。</p><p>在<a href="https://open.iot.10086.cn/doc/mqtt/book/manual/auth/tool.html" target="_blank" rel="noopener">开发文档</a>中下载软件到PC机，根据实际填写对应参数，然后点击Generate生成token：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/11.jpg" alt=""></p><p>产品ID可以在平台的产品概况中找到，access_key需要点击查看，然后平台会给注册手机发送验证码，填写验证码后可获取到key。这里的离线时间戳，表示设备经过多长时间会被平台强制下线。这里通过在线<a href="https://tool.lu/timestamp/" target="_blank" rel="noopener">转换工具</a>设置一年时间：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/12.jpg" alt=""></p><h3 id="4-MQTT数据收发"><a href="#4-MQTT数据收发" class="headerlink" title="4.MQTT数据收发"></a>4.MQTT数据收发</h3><h4 id="1-配置MQTT参数"><a href="#1-配置MQTT参数" class="headerlink" title="1. 配置MQTT参数"></a>1. 配置MQTT参数</h4><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/13.jpg" alt=""></p><p>平台的MQTT服务器IP为183.230.40.96，端口号为1883，id字段填写设备名称ML302，用户名和密码分别是产品id和前面根据产品id生成的token，如下为测试时发送的数据，返回OK，配置信息已经存储到模组：</p><pre class=" language-c"><code class="language-c">AT<span class="token operator">+</span>MQTTCFG<span class="token operator">=</span><span class="token string">"183.230.40.96"</span><span class="token punctuation">,</span><span class="token number">1883</span><span class="token punctuation">,</span><span class="token string">"ML302"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token string">"364992"</span><span class="token punctuation">,</span><span class="token string">"version=2018-10-31&amp;res=products%2F364992&amp;et=1628214414&amp;method=md5&amp;sign=eQlNK67QznJA0Grs5HhQ5A%3D%3D"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token number">0</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/14.jpg" alt=""></p><h4 id="2-连接服务器"><a href="#2-连接服务器" class="headerlink" title="2.连接服务器"></a>2.连接服务器</h4><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/15.jpg" alt=""></p><p>模组返回”+MQTTOPEN:OK”，表示连接成功，这时候平台显示设备在线状态。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/16.jpg" alt=""></p><p>我们可以看到，模组每间隔1分钟会收到心跳包，这里跟前面配置的「keepAlive」字段一致。</p><h4 id="3-订阅主题"><a href="#3-订阅主题" class="headerlink" title="3.订阅主题"></a>3.订阅主题</h4><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/17.jpg" alt=""></p><p>OneNet平台定义了系统topic簇，包括数据点、设备命令、设备镜像，都以“$sys/{pid}/{device-name}”开头，其中参数为产品id和设备名称。</p><p>通过「$sys/364992/ML302/#」来订阅所有系统topic，后续就可以接收系统所有topic相关信息：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/18.jpg" alt=""></p><h4 id="4-发布消息到平台"><a href="#4-发布消息到平台" class="headerlink" title="4. 发布消息到平台"></a>4. 发布消息到平台</h4><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/19.jpg" alt=""></p><p>平台定义的数据点topic如下所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/20.jpg" alt=""></p><p>其中数据内容仅支持json格式，并且规定了相关参数名称，具体可查阅<a href="https://open.iot.10086.cn/doc/mqtt/book/device-develop/topics/dp-topics.html" target="_blank" rel="noopener">开发文档</a>。</p><p>如下为测试时发送的数据：</p><pre class=" language-c"><code class="language-c">AT<span class="token operator">+</span>MQTTPUB<span class="token operator">=</span><span class="token string">"$sys/364992/ML302/dp/post/json"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"{\"id\":123,\"dp\":{\"temperatrue\":[{\"v\":28.5}]}}"</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/21.jpg" alt=""></p><p>在平台的设备列表中，点击设备后面的数据流，可看到数据已经上传，打开实时刷新，每发送一次，数据都会自动显示出来。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/22.jpg" alt=""></p><h4 id="5-平台下发数据"><a href="#5-平台下发数据" class="headerlink" title="5. 平台下发数据"></a>5. 平台下发数据</h4><p>点击设备后面的更多操作，然后点击下发命令：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/23.jpg" alt=""></p><p>填写命令内容及超时时间，点击发送，这时候模组会收到平台发送的消息，由于模组没有应答，超时后平台显示超时错误：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/24.jpg" alt=""></p><p>平台定义的设备命令相关topic如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/25.jpg" alt=""></p><p>设备在回复命令应答时，需要将平台下发的cmid字段作为应答消息的一部分发回平台。这里将超时时间设置为最长的30秒，以便有时间拷贝出cmid字段进行发送:</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/26.jpg" alt=""></p><p>设备在应答中可以携带数据，平台可以收到，如上图中的“test”。</p><h4 id="6-断开连接"><a href="#6-断开连接" class="headerlink" title="6. 断开连接"></a>6. 断开连接</h4><p>虽然使用MQTT必然是想保持长连接的，但也少不了主动断开连接和销毁参数配置的操作。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/27.jpg" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/28.jpg" alt=""></p><p>ML302接入OneNet平台通过MQTT收发数据的整个流程还是挺顺畅的，后面可以通过MCU进行程序控制来完成整个通讯流程，当然更期待ML302的OpenCPU版本及资料。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IOT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cat.1 </tag>
            
            <tag> ML302 </tag>
            
            <tag> MQTT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇26—贪吃蛇游戏</title>
      <link href="/posts/869c.html"/>
      <url>/posts/869c.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/%E9%A6%96%E5%9B%BE.jpg" alt=""></p><p>之前文章<a href="https://tonycode.top/posts/edd1.html">Processing笔记05—贪吃蛇小游戏</a>分享过如何使用Processing来实现贪吃蛇游戏，很多小伙伴问可不可以来个Arduino版本的，那么本篇就通过Arduino，配合摇杆按键和OLED显示屏来实现贪吃蛇游戏。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>双轴按键摇杆模块</li><li>OLED显示屏</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>OLED屏的VCC、GND分别连接开发板的3.3V、GND，OLED屏的SDA和SCL分别连接开发板的A4和A5。双轴按键摇杆模块的VCC、GND分别连接开发板的5V、GND，模块的X轴输出、Y轴输出分别连接开发板的模拟引脚A0、A1。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/%E5%AE%9E%E9%AA%8C%E5%8E%9F%E7%90%86%E5%9B%BE.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/%E5%AE%9E%E7%89%A9%E8%BF%9E%E6%8E%A5%E5%9B%BE.jpg" alt="实物连接图"></p><h3 id="2-由于代码部分较长，这里截取部分展示。完整代码可在文末获取。"><a href="#2-由于代码部分较长，这里截取部分展示。完整代码可在文末获取。" class="headerlink" title="2. 由于代码部分较长，这里截取部分展示。完整代码可在文末获取。"></a>2. 由于代码部分较长，这里截取部分展示。完整代码可在文末获取。</h3><pre class=" language-c"><code class="language-c"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">void</span> <span class="token function">snake_move</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>snake_dir<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> RIGHT<span class="token punctuation">:</span>      snake_head_x <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> UP<span class="token punctuation">:</span>      snake_head_y <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> LEFT<span class="token punctuation">:</span>      snake_head_x <span class="token operator">-</span><span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> DOWN<span class="token punctuation">:</span>      snake_head_y <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>snake_head_x <span class="token operator">==</span> food_x<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>snake_head_y <span class="token operator">==</span> food_y<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    food_eaten <span class="token operator">=</span> true<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//可重新生成食物</span>    snake_len<span class="token operator">++</span><span class="token punctuation">;</span>    score<span class="token operator">++</span><span class="token punctuation">;</span>    level <span class="token operator">=</span> score <span class="token operator">/</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    snake_speed <span class="token operator">-</span><span class="token operator">=</span> level<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> snake_len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    y<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> y<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> snake_head_x<span class="token punctuation">;</span>  y<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> snake_head_y<span class="token punctuation">;</span>  <span class="token function">check_snake_die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/%E7%A8%8B%E5%BA%8F%E4%B8%8B%E8%BD%BD.jpg" alt="程序下载"></p><h2 id="3-程序分析"><a href="#3-程序分析" class="headerlink" title="3. 程序分析"></a>3. 程序分析</h2><h3 id="1-蛇身的绘制"><a href="#1-蛇身的绘制" class="headerlink" title="1. 蛇身的绘制"></a>1. 蛇身的绘制</h3><p>贪吃蛇中最主要的部分就是绘制蛇身，实验中使用数组来保存蛇身每个方块的坐标值，使用<strong>drawBitmap()</strong>函数来绘制一个4X4的矩形表示蛇身方块。</p><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">draw_snake</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span>  oled<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> block<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>每当蛇头位置发生变化，从蛇尾往前遍历整个坐标数组，将每个方块位置往前移动，蛇头坐标为新位置的坐标，然后重新绘制整个蛇身。</p><h3 id="2-食物的产生"><a href="#2-食物的产生" class="headerlink" title="2. 食物的产生"></a>2. 食物的产生</h3><p>在这里使用了随机函数产生规定区域内的食物坐标。首先在<strong>setup()</strong>中初始化随机种子：</p><pre class=" language-c"><code class="language-c"><span class="token function">randomSeed</span><span class="token punctuation">(</span><span class="token function">analogRead</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化随机种子</span></code></pre><p>然后就可以使用<strong>random()</strong>生成坐标数据，这里除了需要指定区域外，还需要考虑排除掉生成在蛇身中的食物。</p><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">draw_food</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> food_out <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//判断食物是否在蛇体内</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>food_eaten<span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>food_out <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      food_out <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>      food_x <span class="token operator">=</span> <span class="token punctuation">(</span>uint8_t<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>      food_y <span class="token operator">=</span> <span class="token punctuation">(</span>uint8_t<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> snake_len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//遍历整个蛇身方块，若食物在蛇身内则重新生成</span>      <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>food_x <span class="token operator">==</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> food_y <span class="token operator">==</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>          food_out <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  food_eaten <span class="token operator">=</span> false<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-方向控制"><a href="#3-方向控制" class="headerlink" title="3. 方向控制"></a>3. 方向控制</h3><p>本篇使用的是摇杆模块，通过采集到的模拟量来识别出上下左右的不同操作，然后对应改变蛇头的坐标，当重新对蛇身进行绘制的时候，整个蛇就进行了一次移动。</p><h3 id="4-判断游戏结束"><a href="#4-判断游戏结束" class="headerlink" title="4. 判断游戏结束"></a>4. 判断游戏结束</h3><p>当蛇头坐标超过显示区域，即蛇撞墙，或蛇头位置坐标与蛇身其他方块坐标相同，即自己吃了自己，都会导致游戏结束。</p><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">check_snake_die</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//撞墙</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>snake_head_x <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token operator">||</span> snake_head_x <span class="token operator">></span> <span class="token number">96</span> <span class="token operator">||</span> snake_head_y <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> snake_head_y <span class="token operator">></span> <span class="token number">56</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    game_over <span class="token operator">=</span> true<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//自己吃自己</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>snake_len <span class="token operator">></span> <span class="token number">4</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> snake_len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>snake_head_x <span class="token operator">==</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> snake_head_y <span class="token operator">==</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span>        game_over <span class="token operator">=</span> true<span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="5-问题及改进"><a href="#5-问题及改进" class="headerlink" title="5. 问题及改进"></a>5. 问题及改进</h3><p>由于按键的判断和屏幕的刷新都放在了<strong>loop()</strong>中，游戏的速度通过改变<strong>delay()</strong>函数即改变延时时间来实现，所以当游戏速度过慢时，按键操作就变得不灵敏。可以试着使用定时器来刷新屏幕，通过改变定时时间来改变游戏速度。</p><p>另外在撞墙的条件判断中，边界值需要实际调试，没有移动到边界或者移动超出边界都不应结束游戏。</p><h2 id="大结局"><a href="#大结局" class="headerlink" title="大结局"></a>大结局</h2><p>陆陆续续分享了很多Arduino的教程，包括基础版33篇和提高版26篇，在这个过程中也帮助到了一些小伙伴，其实笔者玩Arduino都是业余兴趣，教程中的很多东西也是通过网络不断学习汇总的。</p><p>由于教程配套了实物套件，不得不与套件中的器件进行配套，其实这并不是件容易的事情，需要从一开始就要考虑后面的好几篇内容，完全不能随心所欲的分享。终于，Arduino系列教程到此就结束了，后面分享Arduino会多一些创客DIY之类的。兴趣是最好的老师，希望小伙伴们除了应对课程设计之类的，也能喜欢上Arduino。愿你所有的坚持，都来自心中的那份热爱。</p><hr><p>关注公众号「TonyCode」，后台回复“驱动”，获取文中驱动程序。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 摇杆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇25—手势识别</title>
      <link href="/posts/4410.html"/>
      <url>/posts/4410.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/%E6%89%8B%E5%8A%BF%E8%AF%86%E5%88%AB.jpg" alt=""></p><p>随着科技的发展，人机交互也发生了翻天覆地的变化，从最开始的手动控制，到后来的遥控，再到语音识别以及图像识别。一切都是为了解放人类，毕竟能吵吵就不会动手对不对，现在都懒得吵吵了，图像识别分析就好。本篇我们来介绍高大尚的手势识别，用手比划就能进行控制了。</p><h2 id="1-APDS-9960模块介绍"><a href="#1-APDS-9960模块介绍" class="headerlink" title="1. APDS-9960模块介绍"></a>1. APDS-9960模块介绍</h2><p>APDS-9960是一个体积非常小的传感器，它集成了非接触手势检测、接近检测、数字环境亮度测量和色彩检测等诸多功能。很多手机上也采用了该传感器，例如三星的Galaxy S5。</p><p>本篇我们使用搭载了APDS-9960传感器的模块，模块提供了APDS-9960传感器的外部工作电路，同时将管脚引出，方便接线使用，其实物图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/9660%E6%A8%A1%E5%9D%97.jpg" alt="手势识别模块"></p><p>模块特点：</p><ul><li>工作电压：3.3V</li><li>环境光及RGB色彩感应</li><li>接近检测</li><li>手势检测</li><li>测量范围:10-20cm</li><li>通信接口:IIC通讯</li><li>IIC地址:0x39</li></ul><p>管脚定义：</p><ul><li>VL：如果PS跳线断开，则IR LED的可选电源。必须为3.0-4.5V</li><li>GND：接地</li><li>VCC：用于为APDS-9960传感器供电。必须为2.4-3.6V</li><li>SDA：IIC数据引脚</li><li>SCL：IIC时钟引脚</li><li>INT：外部中断引脚。中断事件时为低电平有效</li></ul><h2 id="2-安装驱动库"><a href="#2-安装驱动库" class="headerlink" title="2. 安装驱动库"></a>2. 安装驱动库</h2><p>本篇我们需要安装「Adafruit_APDS9960」驱动库。在Arduino IDE中，点击「项目」—「加载库」—「管理库」，搜索选择最新版本进行安装即可。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/%E5%AE%89%E8%A3%85%E5%BA%93.jpg" alt="安装库"></p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>OLED显示屏</li><li>APDS-9960模块</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>OLED屏和手势识别模块都使用了IIC通讯方式。将两个模块的VCC、GND分别连接开发板的3.3V、GND，两个模块的SDA、SCL分别连接开发板的A4、A5。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/%E5%AE%9E%E9%AA%8C%E5%8E%9F%E7%90%86%E5%9B%BE.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/%E5%AE%9E%E7%89%A9%E8%BF%9E%E6%8E%A5%E5%9B%BE.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"Adafruit_APDS9960.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span>Adafruit_APDS9960 apds<span class="token punctuation">;</span>Adafruit_SSD1306 <span class="token function">oled</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  oled<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体大小</span>  apds<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  apds<span class="token punctuation">.</span><span class="token function">enableProximity</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>  apds<span class="token punctuation">.</span><span class="token function">enableGesture</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  uint8_t gesture <span class="token operator">=</span> apds<span class="token punctuation">.</span><span class="token function">readGesture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"APDS-9960"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>gesture<span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">case</span> APDS9960_UP<span class="token punctuation">:</span> oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[ Up ]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> APDS9960_DOWN<span class="token punctuation">:</span> oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[Down]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> APDS9960_LEFT<span class="token punctuation">:</span> oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[Left]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> APDS9960_RIGHT<span class="token punctuation">:</span> oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[Right]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token punctuation">:</span> oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[----]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/%E7%A8%8B%E5%BA%8F%E4%B8%8B%E8%BD%BD.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>我们从不同方向移动手进入传感器检测范围，然后慢慢移出，模块会对应识别出移动方向。当然识别结果也会受环境光影响，但大概率识别还是很准确的。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/%E5%AE%9E%E9%AA%8C%E7%8E%B0%E8%B1%A1.gif" alt="实验现象"></p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 手势识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Processing笔记06—Processing控制Arduino点灯</title>
      <link href="/posts/f983.html"/>
      <url>/posts/f983.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/%E9%A6%96%E5%9B%BE.jpg" alt=""></p><p>通过前面几篇学习笔记，我们已经对Processing有了一定的了解，可以绘制一些简单图形，以及响应鼠标键盘的输入。</p><p>笔者最初学习Processing的目的就是为了了解如何与Arduino进行交互，即通过Processing来控制Arduino，以及将Arduino的数据进行更加直观的可视化展示，一般这些是通过串口通讯来实现的。本篇我们来学习如何通过Processing下发命令，控制Arduino板载LED灯亮灭。</p><h2 id="1-Arduino部分"><a href="#1-Arduino部分" class="headerlink" title="1. Arduino部分"></a>1. Arduino部分</h2><p>这里使用Arduino Uno R3开发板，你也可以使用Arduino其他的开发板，一般都有板载LED灯。程序如下所示：</p><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> ledPin <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">;</span><span class="token keyword">char</span> val<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>Serial<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//串口接收到数据</span>  <span class="token punctuation">{</span>    val <span class="token operator">=</span> Serial<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取串口接收到的数据</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">==</span> <span class="token string">'H'</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token operator">==</span> <span class="token string">'L'</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>程序部分非常简单，初始化串口，然后在loop()循环中不断的监听串口，当串口收到数据后，读取并根据自己定义的识别命令来判断开关LED灯。</p><p>选择对应开发板型号和端口号进行程序下载，这个端口号非常重要，后面的Processing中要设定相同的端口号才能通讯正常，这里的是COM18。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/Arduino%E7%A8%8B%E5%BA%8F%E4%B8%8B%E8%BD%BD.jpg" alt="Arduino程序下载"></p><h2 id="2-Processing部分"><a href="#2-Processing部分" class="headerlink" title="2. Processing部分"></a>2. Processing部分</h2><p>在Processing端，我们画了一个矩形，然后通过鼠标位置与矩形坐标及长宽的关系来判断当前鼠标是否位于矩形之上，然后对应通过串口发送不同的命令。程序如下所示：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> processing<span class="token punctuation">.</span>serial<span class="token punctuation">.</span>*<span class="token punctuation">;</span>Serial port<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">background</span><span class="token punctuation">(</span><span class="token number">244</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">noStroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">textSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//printArray(Serial.list());//打印串口列表</span>  <span class="token comment" spellcheck="true">//String portName = Serial.list()[0];//修改数组下标得到串口列表中连接Arduino的</span>  String portName <span class="token operator">=</span> <span class="token string">"COM18"</span><span class="token punctuation">;</span>  port <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Serial</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> portName<span class="token punctuation">,</span> <span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">text</span><span class="token punctuation">(</span><span class="token string">"Key"</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">mouseOverRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    port<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'H'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    port<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//鼠标是否位于矩形之上</span><span class="token keyword">boolean</span> <span class="token function">mouseOverRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mouseX<span class="token operator">>=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>mouseX<span class="token operator">&lt;=</span><span class="token number">160</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>mouseY<span class="token operator">>=</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>mouseY<span class="token operator">&lt;=</span><span class="token number">110</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>其中在第一行，通过import导入Processing的串口库。要想与Arduino通过串口进行通讯，就需要设置相同的波特率以及端口号。</p><p>通常我们可以通过Serial.list()来获取当前电脑所有的串口设备端口号列表：</p><pre class=" language-java"><code class="language-java"><span class="token function">printArray</span><span class="token punctuation">(</span>Serial<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//打印串口列表</span>String portName <span class="token operator">=</span> Serial<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//修改数组下标得到串口列表中连接Arduino的</span></code></pre><p>一般情况下Serial.list()接收的第一个端口号就是与你Arduino连接的，但当有多个端口号时，要根据实际情况，修改数组下标得到串口端口号列表中连接Arduino的那一个。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/%E7%AB%AF%E5%8F%A3%E5%8F%B7%E8%8E%B7%E5%8F%96.jpg" alt="端口号获取"></p><p>当然，最简单的还是直接定义就好了：</p><pre class=" language-java"><code class="language-java">String portName <span class="token operator">=</span> <span class="token string">"COM18"</span><span class="token punctuation">;</span></code></pre><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>当鼠标移动到矩形上时，Arduino板载LED灯点亮，当鼠标移到矩形之外后，LED灯熄灭。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/%E5%AE%9E%E9%AA%8C%E7%8E%B0%E8%B1%A1.gif" alt="实验现象"></p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arduino </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇24—摇杆调节时钟时间</title>
      <link href="/posts/7453.html"/>
      <url>/posts/7453.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200521135131.jpg" alt=""></p><p>对于电子时钟而言，虽然我们可以在程序中对RTC芯片写入初始时间数据，但按键调时功能也是必不可少的，它可以让我们更加灵活的进行时间调节校准。本篇我们使用摇杆按键来调节时间数据，采用多级菜单的思路进行设计，关于多级菜单的介绍可以参考之前的文章<a href="https://tonycode.top/posts/6264.html">Arduino提高篇15—摇杆操作OLED多级菜单</a>。</p><h2 id="1-菜单显示结构"><a href="#1-菜单显示结构" class="headerlink" title="1. 菜单显示结构"></a>1. 菜单显示结构</h2><p>本实验中显示菜单结构如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200521140712.jpg" alt="菜单结构"></p><p>其中menu00是首页正常的时间日期显示界面，然后通过摇杆按键切换页面，进行日期调节和时间调节选择，然后对应跳转年月日和时分秒的调节页面。</p><p>根据结构图，结合多级菜单思路，很容易得到摇杆按键与界面对应的相关数据。</p><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">//定义按键操作数据</span>KEY_TABLE table<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu00<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu11<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu12<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu21<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu22<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu23<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu24<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu25<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu26<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>公对母杜邦线</li><li>面包板及配套连接线</li><li>OLED显示屏</li><li>DS1302模块</li><li>双轴按键摇杆模块</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>DS1302模块的VCC和GND连接Uno开发板的3.3V和GND。DS1302模块的CLK、DAT、RST对应连接Uno开发板的4、3、2引脚。OLED的VCC和GND分别连接开发板的3.3V和GND，OLED的SDA、SCL分别连接开发板的A4、A5引脚。双轴按键摇杆模块的VCC、GND分别连接开发板的5V、GND，模块的X轴输出、Y轴输出分别连接开发板的模拟引脚A0、A1。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200521141350.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200521141357.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;DS1302.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span>Adafruit_SSD1306 <span class="token function">oled</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>DS1302 <span class="token function">rtc</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//对应DS1302的RST,DAT,CLK</span><span class="token comment" spellcheck="true">//摇杆相关变量</span><span class="token macro property">#<span class="token directive keyword">define</span> pinX  A0</span><span class="token macro property">#<span class="token directive keyword">define</span> pinY  A1</span><span class="token keyword">int</span> valueX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> valueY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> keyValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> menu <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> sec_temp<span class="token punctuation">;</span>Time <span class="token function">set_temp</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用于存储正在修改的时间数据</span><span class="token comment" spellcheck="true">//多级菜单相关变量</span><span class="token comment" spellcheck="true">//定义按键结构体</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span><span class="token punctuation">{</span>  <span class="token keyword">unsigned</span> <span class="token keyword">char</span> index<span class="token punctuation">;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">char</span> up<span class="token punctuation">;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">char</span> down<span class="token punctuation">;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">char</span> left<span class="token punctuation">;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">char</span> right<span class="token punctuation">;</span>  <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>operation<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> KEY_TABLE<span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> funIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>current<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">menu00</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">menu11</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">menu12</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">menu21</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">menu22</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">menu23</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">menu24</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">menu25</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">menu26</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义按键操作数据</span>KEY_TABLE table<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu00<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu11<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu12<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu21<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu22<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu23<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu24<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu25<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu26<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">menu00</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>menu <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//从调时界面退出后将调节后的时间数据写入DS1302</span>  <span class="token punctuation">{</span>    <span class="token function">initRTCTime</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">)</span><span class="token punctuation">;</span>    menu <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">updatTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">menu11</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  menu <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//进入调时界面</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-Set Dat-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"->1.Dat"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"  2.Tim"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">menu12</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-Set Tim-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"  1.Dat"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"->2.Tim"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">menu21</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  set_temp<span class="token punctuation">.</span>yr<span class="token operator">++</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"->Yer:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>yr<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Mon: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>mon<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Day: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>yr <span class="token operator">>=</span> <span class="token number">2030</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    set_temp<span class="token punctuation">.</span>yr <span class="token operator">=</span> <span class="token number">2019</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">menu22</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  set_temp<span class="token punctuation">.</span>mon<span class="token operator">++</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Yer:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>yr<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"->Mon: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>mon<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Day: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>mon <span class="token operator">>=</span> <span class="token number">12</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    set_temp<span class="token punctuation">.</span>mon <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">menu23</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  set_temp<span class="token punctuation">.</span>date<span class="token operator">++</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Yer:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>yr<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Mon: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>mon<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"->Day: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>date <span class="token operator">>=</span> <span class="token number">31</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    set_temp<span class="token punctuation">.</span>date <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">menu24</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  set_temp<span class="token punctuation">.</span>hr<span class="token operator">++</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"->Hor: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>hr<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Min: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Sec: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>sec<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>hr <span class="token operator">>=</span> <span class="token number">24</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    set_temp<span class="token punctuation">.</span>hr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">menu25</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  set_temp<span class="token punctuation">.</span>min<span class="token operator">++</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Hor: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>hr<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"->Min: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Sec: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>sec<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>min <span class="token operator">>=</span> <span class="token number">60</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    set_temp<span class="token punctuation">.</span>min <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">menu26</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  set_temp<span class="token punctuation">.</span>sec<span class="token operator">++</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Hor: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>hr<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"  Min: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"->Sec: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>sec<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>set_temp<span class="token punctuation">.</span>sec <span class="token operator">>=</span> <span class="token number">60</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    set_temp<span class="token punctuation">.</span>sec <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//按键扫描函数</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token function">keyScan</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> keyUp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  valueX <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>pinX<span class="token punctuation">)</span><span class="token punctuation">;</span>  valueY <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>pinY<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>keyUp <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>valueX <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>valueX <span class="token operator">>=</span> <span class="token number">1010</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>valueY <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>valueY <span class="token operator">>=</span> <span class="token number">1010</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    keyUp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>valueX <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>valueX <span class="token operator">>=</span> <span class="token number">1010</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>valueY <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>valueY <span class="token operator">>=</span> <span class="token number">1010</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>valueX <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>valueX <span class="token operator">&lt;</span> <span class="token number">1010</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>valueY <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>valueY <span class="token operator">&lt;</span> <span class="token number">1010</span><span class="token punctuation">)</span><span class="token punctuation">)</span>keyUp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">initRTCTime</span><span class="token punctuation">(</span>Time t<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//初始化RTC时钟</span><span class="token punctuation">{</span>  rtc<span class="token punctuation">.</span><span class="token function">writeProtect</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//关闭写保护</span>  rtc<span class="token punctuation">.</span><span class="token function">halt</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//清除时钟停止标志</span>  rtc<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向DS1302设置时间数据</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">show_time</span><span class="token punctuation">(</span>Time tim<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">char</span> date<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">char</span> timer<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token function">snprintf</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"%04d-%02d-%02d"</span><span class="token punctuation">,</span>           tim<span class="token punctuation">.</span>yr<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>mon<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">snprintf</span><span class="token punctuation">(</span>timer<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"%02d:%02d:%02d"</span><span class="token punctuation">,</span>           tim<span class="token punctuation">.</span>hr<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>min<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>sec<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--CLOCK--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">updatTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//更新时间数据</span><span class="token punctuation">{</span>  Time tim <span class="token operator">=</span> rtc<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//从DS1302获取时间数据</span>  set_temp <span class="token operator">=</span> tim<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取时间数据已备调节</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>tim<span class="token punctuation">.</span>sec <span class="token operator">!=</span> sec_temp<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//一秒刷新一次</span>    <span class="token function">show_time</span><span class="token punctuation">(</span>tim<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  sec_temp <span class="token operator">=</span> tim<span class="token punctuation">.</span>sec<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  oled<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体大小</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  keyValue <span class="token operator">=</span> <span class="token function">keyScan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>keyValue <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//每发生一次有效按键就根据按键功能获取对应函数并执行</span>  <span class="token punctuation">{</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>keyValue<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//获取按键对应序号</span>    <span class="token punctuation">{</span>      <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span> funIndex <span class="token operator">=</span> table<span class="token punctuation">[</span>funIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span> funIndex <span class="token operator">=</span> table<span class="token punctuation">[</span>funIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>left<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span> funIndex <span class="token operator">=</span> table<span class="token punctuation">[</span>funIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>down<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span> funIndex <span class="token operator">=</span> table<span class="token punctuation">[</span>funIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>up<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    current <span class="token operator">=</span> table<span class="token punctuation">[</span>funIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>operation<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//根据需要获取对应需要执行的函数</span>    <span class="token punctuation">(</span><span class="token operator">*</span>current<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//执行获取到的函数</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>menu <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//只有在首页才进行时间刷新</span>  <span class="token punctuation">{</span>    <span class="token function">updatTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200521150439.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>摇杆操作调节时间，效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200521142349.gif" alt="实验现象"></p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 摇杆 </tag>
            
            <tag> DS1302 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇23—OLED电子时钟</title>
      <link href="/posts/dce1.html"/>
      <url>/posts/dce1.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200518233241.jpg" alt=""></p><p>在前篇文章中，我们通过库函数驱动DS1302获取到时间数据并且通过串口输出，而串口只是方便调试，要制作电子时钟，我们需要使用显示模块，本篇结合OLED对时间数据进行展示。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>公对母杜邦线</li><li>面包板及配套连接线</li><li>OLED显示屏</li><li>DS1302模块</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>在前篇基础上添加了OLED模块连接。DS1302模块的VCC和GND连接Uno开发板的3.3V和GND。DS1302模块的CLK、DAT、RST对应连接Uno开发板的4、3、2引脚。OLED的VCC和GND分别连接开发板的3.3V和GND，OLED的SDA、SCL分别连接开发板的A4、A5引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200518233251.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200518233257.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;DS1302.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> OLED_RESET     4</span>Adafruit_SSD1306 <span class="token function">oled</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span> OLED_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>DS1302 <span class="token function">rtc</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//对应DS1302的RST,DAT,CLK</span><span class="token keyword">int</span> sec_temp<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">initRTCTime</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//初始化RTC时钟</span><span class="token punctuation">{</span>  rtc<span class="token punctuation">.</span><span class="token function">writeProtect</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//关闭写保护</span>  rtc<span class="token punctuation">.</span><span class="token function">halt</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//清除时钟停止标志</span>  Time <span class="token function">t</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//新建时间对象 最后参数位星期数据，周日为1，周一为2以此类推</span>  rtc<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向DS1302设置时间数据</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">updatTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//打印时间数据</span><span class="token punctuation">{</span>  Time tim <span class="token operator">=</span> rtc<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//从DS1302获取时间数据</span>  <span class="token keyword">char</span> date<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">char</span> timer<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token function">snprintf</span><span class="token punctuation">(</span>date<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"%04d-%02d-%02d"</span><span class="token punctuation">,</span>           tim<span class="token punctuation">.</span>yr<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>mon<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">snprintf</span><span class="token punctuation">(</span>timer<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"%02d:%02d:%02d"</span><span class="token punctuation">,</span>           tim<span class="token punctuation">.</span>hr<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>min<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>sec<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>tim<span class="token punctuation">.</span>sec <span class="token operator">!=</span> sec_temp<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//一秒刷新一次</span>    oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>    oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>    oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--CLOCK--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>    oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>    oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>    oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>    oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>  <span class="token punctuation">}</span>  sec_temp <span class="token operator">=</span> tim<span class="token punctuation">.</span>sec<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  oled<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体大小</span>  <span class="token comment" spellcheck="true">//新模块上电需要设置一次当前时间，</span>  <span class="token comment" spellcheck="true">//下载完成后需屏蔽此函数再次下载，否则每次上电都会初始化时间数据</span>  <span class="token comment" spellcheck="true">//  initRTCTime();</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">updatTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200518233303.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>OLED显示效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200518233315.gif" alt="实验现象"></p><h2 id="4-程序说明"><a href="#4-程序说明" class="headerlink" title="4. 程序说明"></a>4. 程序说明</h2><p>在DS1302的各种电子时钟制作中，我们经常会遇到时钟走时不准的情况。除了DS1302芯片本身问题，大部分是由晶振精度及匹配电容造成的。对于要求不高的应用，我们可以大概测量每天的误差范围，大概率是走时过快的，然后在程序中加入每天自动校准的操作。</p><p>另外会发现秒数变化不均匀，时快时慢，这跟屏幕的刷新频率有关。我们可以使用定时器，一秒获取一次DS1302数据进行刷新。而本篇程序中通过对比前后两次获取到的时间数据中秒的值，当秒数改变后进行一次刷新。</p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> DS1302 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino Nano 驱动OLED滚动显示</title>
      <link href="/posts/270.html"/>
      <url>/posts/270.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200512224944.jpg" alt=""></p><p>尽管Uno R3开发板是Arduino家族中入门级别的首选，但无奈它的体积实在有些大，我们实际中很多设计都需要考虑外形结构，小巧便捷而又功能齐全的Arduino Nano开发板就脱颖而出了。本篇我们使用Arduino Nano开发板来驱动0.91寸OLED滚动显示。</p><h2 id="1-Arduino-Nano开发板"><a href="#1-Arduino-Nano开发板" class="headerlink" title="1. Arduino Nano开发板"></a>1. Arduino Nano开发板</h2><p>Arduino Nano开发板是基于ATmega328的小巧且完整的Arduino系列开发板，兼容Arduino程序，你可以在<a href="https://store.arduino.cc/usa/arduino-nano" target="_blank" rel="noopener">官网</a>找到它的详细资料。</p><p>它的主要特点如下：</p><ul><li>微控制器：ATmega328</li><li>工作电压：5V</li><li>Flash：32KB，其中2KB用于引导程序</li><li>SRAM：2KB</li><li>时钟速度：16M</li><li>模拟输入引脚：8个</li><li>EEPROM：1KB</li><li>IO引脚电流：40mA</li><li>数字IO：22个(其中6个是PWM)</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200512230310.jpg" alt="Arduino Nano"></p><h2 id="2-0-91寸OLED"><a href="#2-0-91寸OLED" class="headerlink" title="2. 0.91寸OLED"></a>2. 0.91寸OLED</h2><p>前面的章节中已经对0.96寸OLED进行了讲解，本篇我们使用0.91寸OLED屏，也是IIC通讯方式。其驱动芯片跟0.96寸OLED屏一样，都是SSD1306，区别在于0.96寸OLED为128x64个像素点，而0.91寸OLED则有128x32个像素点。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200512230257.jpg" alt="0.91寸OLED"></p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Naon开发板</li><li>配套USB数据线</li><li>0.91寸OLED屏</li><li>杜邦线</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>OLED屏的VCC、GND分别连接Nano开发板的3.3V、GND。OLED屏的SDA、SCL分别连接开发板的A4、A5引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200512230402.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200512230408.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   0.91OLED滚动显示*/</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> OLED_RESET     4</span>Adafruit_SSD1306 <span class="token function">display</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span> OLED_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  display<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  display<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体大小</span>  display<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  display<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"TonyCode"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  display<span class="token punctuation">.</span><span class="token function">startscrollright</span><span class="token punctuation">(</span><span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">stopscroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">startscrollleft</span><span class="token punctuation">(</span><span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">stopscroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200512230605.jpg" alt="程序下载"></p><p>值得注意的是，某宝买到的Nano开发板，开发板及处理器按下图选择，起码我手中的是这样的，我试着将处理器选择ATmage328P，结果未能成功下载，而选择带有Old Bootloader的则正常下载。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200512232906.jpg" alt="类型"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>程序中使用了OLED驱动库的左移和右移函数，开启移动后进行延时操作，显示内容进行滚动，直到调用停止滚动函数。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200512231803.gif" alt="实验现象"></p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OLED </tag>
            
            <tag> Nano </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Processing笔记05—贪吃蛇小游戏</title>
      <link href="/posts/edd1.html"/>
      <url>/posts/edd1.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200506232558.png" alt=""></p><p>贪吃蛇是非常经典的小游戏，大家肯定接触过，它在当年只能打电话发短信的诺基亚手机中是唯一的娱乐项目了。它的操作非常简单，很多编程语言都可以来实现它。我们已经学习了Processing中基本图形的绘制以及鼠标键盘的识别响应，本篇我们使用Processing来编程实现贪吃蛇小游戏。</p><h3 id="1-蛇身的绘制"><a href="#1-蛇身的绘制" class="headerlink" title="1. 蛇身的绘制"></a>1. 蛇身的绘制</h3><p>这应该是贪吃蛇游戏中最主要的部分了，在程序中使用数组来保存组成蛇身的每个方块的坐标值。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 保存组成蛇身的每个方格位置</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>snake_length_max<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> y <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>snake_length_max<span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p>当蛇头位置改变以后,我们从尾部开始遍历数组，将每个方块坐标位置向后移动，然后将新的蛇头位置赋值到数组第一元素，然后重新绘制所有方块。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">draw_snake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//从尾部开始更新蛇身方块坐标</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>snake_length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    y<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> y<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 设置蛇头新的坐标</span>  x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> snake_head_x<span class="token punctuation">;</span>  y<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> snake_head_y<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 设置蛇身填充颜色</span>  <span class="token function">fill</span><span class="token punctuation">(</span>#3874F6<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 开始画蛇</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>snake_length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">rect</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> grid<span class="token punctuation">,</span> grid<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="2-食物的产生"><a href="#2-食物的产生" class="headerlink" title="2. 食物的产生"></a>2. 食物的产生</h3><p>当食物被吃掉以后，我们需要在指定长宽的区域内随机生成食物的坐标数据，这里使用了<strong>random()</strong>函数，用来生成坐标值，这个坐标值需要是方块边长的整数倍。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">draw_food</span><span class="token punctuation">(</span><span class="token keyword">int</span> max_width<span class="token punctuation">,</span> <span class="token keyword">int</span> max_high<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//食物填充颜色</span>  <span class="token function">fill</span><span class="token punctuation">(</span>#F71E1E<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//如果食物被吃掉，则随机生成一个</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>food_eaten<span class="token punctuation">)</span>  <span class="token punctuation">{</span>    food_x <span class="token operator">=</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> max_width<span class="token punctuation">)</span> <span class="token operator">/</span> grid<span class="token punctuation">)</span> <span class="token operator">*</span> grid<span class="token punctuation">;</span>    food_y <span class="token operator">=</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> max_high<span class="token punctuation">)</span> <span class="token operator">/</span> grid<span class="token punctuation">)</span> <span class="token operator">*</span> grid<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">rect</span><span class="token punctuation">(</span>food_x<span class="token punctuation">,</span> food_y<span class="token punctuation">,</span> grid<span class="token punctuation">,</span> grid<span class="token punctuation">)</span><span class="token punctuation">;</span>  food_eaten <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-方向控制"><a href="#3-方向控制" class="headerlink" title="3. 方向控制"></a>3. 方向控制</h3><p>这里使用前篇介绍的按键识别操作。对方向按键进行判断，然后对应改变蛇的运动方向。</p><pre class=" language-java"><code class="language-java"> <span class="token keyword">if</span> <span class="token punctuation">(</span>snake_direction <span class="token operator">!=</span> <span class="token string">'P'</span><span class="token operator">&amp;&amp;</span> keyPressed <span class="token operator">&amp;&amp;</span> key <span class="token operator">==</span> CODED<span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">switch</span><span class="token punctuation">(</span>keyCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> LEFT<span class="token operator">:</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>snake_direction <span class="token operator">!=</span> <span class="token string">'R'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        snake_direction <span class="token operator">=</span> <span class="token string">'L'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> RIGHT<span class="token operator">:</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>snake_direction <span class="token operator">!=</span> <span class="token string">'L'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        snake_direction <span class="token operator">=</span> <span class="token string">'R'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> DOWN<span class="token operator">:</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>snake_direction <span class="token operator">!=</span> <span class="token string">'U'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        snake_direction <span class="token operator">=</span> <span class="token string">'D'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> UP<span class="token operator">:</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>snake_direction <span class="token operator">!=</span> <span class="token string">'D'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        snake_direction <span class="token operator">=</span> <span class="token string">'U'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>在刷新显示的时候，会根据移动方向的不同，对蛇头的坐标进行改变，当重新对蛇身进行绘制的时候，整个蛇就进行了一次移动。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//移动方向选择</span><span class="token keyword">switch</span><span class="token punctuation">(</span>snake_direction<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">case</span> <span class="token string">'L'</span><span class="token operator">:</span>        snake_head_x <span class="token operator">-=</span> grid<span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'R'</span><span class="token operator">:</span>        snake_head_x <span class="token operator">+=</span> grid<span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'D'</span><span class="token operator">:</span>        snake_head_y <span class="token operator">+=</span> grid<span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string">'U'</span><span class="token operator">:</span>        snake_head_y <span class="token operator">-=</span> grid<span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>此外，增加了暂停键“P”或“p”，以及运行键“R”或“r”的判断。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">'p'</span> <span class="token operator">||</span> key <span class="token operator">==</span> <span class="token string">'P'</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    game_pause<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>game_pause<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      snake_direction_temp <span class="token operator">=</span> snake_direction<span class="token punctuation">;</span>      snake_direction <span class="token operator">=</span> <span class="token string">'P'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      snake_direction <span class="token operator">=</span> snake_direction_temp<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">if</span> <span class="token punctuation">(</span>keyPressed <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token string">'r'</span> <span class="token operator">||</span> key <span class="token operator">==</span> <span class="token string">'R'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">}</span></code></pre><p>值得注意的是，这些对于按键的监听，没有放在<strong>draw()</strong>函数中，而是使用了键盘事件函数<strong>keyPressed()</strong>，每当按下一个键，其中的代码就会运行一次，使用这种方式监听按键更加方便灵活。</p><h3 id="4-判断游戏结束"><a href="#4-判断游戏结束" class="headerlink" title="4. 判断游戏结束"></a>4. 判断游戏结束</h3><p>当蛇头坐标超过显示区域，即蛇撞墙，或蛇头位置坐标与蛇身其他方块坐标相同，即自己吃了自己，都会导致游戏结束。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">boolean</span> <span class="token function">check_snake_die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 撞墙了</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> snake_head_x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> snake_head_x <span class="token operator">>=</span> width <span class="token operator">||</span> snake_head_y <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> snake_head_y <span class="token operator">>=</span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">show_game_over</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 自己吃自己</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> snake_length <span class="token operator">></span> <span class="token number">2</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>snake_length<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span> snake_head_x <span class="token operator">==</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> snake_head_y <span class="token operator">==</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">show_game_over</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="5-移动速度"><a href="#5-移动速度" class="headerlink" title="5. 移动速度"></a>5. 移动速度</h3><p>程序中使用<strong>millis()</strong>函数来获取自程序开始到当前的时间。每当<strong>draw()</strong>中代码运行一次，我们都重新获取一次当前时间，然后减掉之前的时间来计算出经过的时间，然后与移动间隔时间进行比较，当大于间隔时间时，说明需要刷新移动蛇身一次，然后重新获取一次时间，为后续比较做准备。</p><pre class=" language-java"><code class="language-java"> time_passed <span class="token operator">=</span> <span class="token function">millis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> time_start<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//计算出经过的时间</span> time_interval <span class="token operator">=</span> <span class="token number">1000</span> <span class="token operator">/</span> speed<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//计算移动间隔时间</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>time_passed <span class="token operator">></span> time_interval <span class="token operator">&amp;&amp;</span> snake_direction <span class="token operator">!=</span> <span class="token string">'P'</span> <span class="token operator">&amp;&amp;</span> game_start<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//游戏刷新条件</span>  <span class="token punctuation">{</span>     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    time_start <span class="token operator">=</span> <span class="token function">millis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//重新获取时间</span>  <span class="token punctuation">}</span></code></pre><h3 id="6-吃到食物"><a href="#6-吃到食物" class="headerlink" title="6. 吃到食物"></a>6. 吃到食物</h3><p>当蛇头坐标移动到与食物坐标相同时，就代表食物被吃到，这时蛇身长度要加1，重新生成食物。程序中每吃掉5个食物，移动速度就会增加1。</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//蛇吃到食物</span><span class="token keyword">if</span> <span class="token punctuation">(</span>snake_head_x <span class="token operator">==</span> food_x <span class="token operator">&amp;&amp;</span> snake_head_y <span class="token operator">==</span> food_y<span class="token punctuation">)</span><span class="token punctuation">{</span>    food_eaten <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//可重新生成食物</span>    snake_length<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> snake_length<span class="token operator">%</span><span class="token number">5</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    speed<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    speed <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> speed<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//控制最大速度</span><span class="token punctuation">}</span></code></pre><h3 id="7-实现效果"><a href="#7-实现效果" class="headerlink" title="7. 实现效果"></a>7. 实现效果</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200506232644.gif" alt="snake"></p><p>贪吃蛇的实现还是非常简单的，当然代码还有很多需要优化的地方，比如说我们在随机生成食物坐标的时候，需要排除蛇身中方块的坐标，即食物不能直接出现在蛇身中，你可以试着来优化下。我们还可以直接将代码导出成exe可执行文件，你也来试一试吧。</p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Processing笔记04—鼠标键盘识别</title>
      <link href="/posts/8b85.html"/>
      <url>/posts/8b85.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200429215718.bmp" alt=""></p><p>前面我们学习了Processing中基本图形的绘制，本篇来介绍Processing中对于鼠标键盘输入设备的识别，有了输入设备，我们就可以更加灵活的进行控制了。</p><h3 id="1-鼠标坐标"><a href="#1-鼠标坐标" class="headerlink" title="1. 鼠标坐标"></a>1. 鼠标坐标</h3><p>在Processing中使用<strong>mouseX</strong>和<strong>mouseY</strong>变量来存储当前鼠标的坐标位置，默认值都为0。在程序运行中，这两个变量会不断刷新保存最新的鼠标坐标信息。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">background</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">ellipse</span><span class="token punctuation">(</span>mouseX<span class="token punctuation">,</span> mouseY<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200429200701.gif" alt="鼠标跟随"></p><p>此外<strong>pmouseX</strong>和<strong>pmouseY</strong>这两个变量用来存储前一帧鼠标的位置数据，如同<strong>mouseX</strong>和<strong>mouseY</strong>，这两个系统变量在每次运行draw()函数时都会刷新。</p><p>我们可以配合使用它们，通过测量鼠标当前位置和上一帧位置之间的距离，来计算鼠标的移动速度。这里的距离计算借助<strong>dist()</strong>函数，参数为被测量的两个点的坐标。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">background</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">stroke</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">float</span> weight<span class="token operator">=</span><span class="token function">dist</span><span class="token punctuation">(</span>mouseX<span class="token punctuation">,</span> mouseY<span class="token punctuation">,</span> pmouseX<span class="token punctuation">,</span> pmouseY<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">strokeWeight</span><span class="token punctuation">(</span>weight<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">line</span><span class="token punctuation">(</span>mouseX<span class="token punctuation">,</span> mouseY<span class="token punctuation">,</span> pmouseX<span class="token punctuation">,</span> pmouseY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>如上代码，将获取的前后鼠标位置之间的距离赋值给描边粗细函数<strong>strokeWeight()</strong>，当鼠标移动速度缓慢时画出来的是细线，当移动速度快时，画出的线就会变粗。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200429203020.gif" alt="画线粗细"></p><h3 id="2-鼠标单击"><a href="#2-鼠标单击" class="headerlink" title="2. 鼠标单击"></a>2. 鼠标单击</h3><p>除了定位鼠标之外，Processing还能捕获鼠标是否被单击。使用<strong>mousePressed</strong>变量来标记鼠标的单击和释放状态。这个变量是布尔类型的，当按键被按下为真，松开为假。</p><p>一般我们的鼠标都是多于一个按键的，Processing使用<strong>mouseButton</strong>变量来存储被点击的按键类型，它们的值为<strong>LEFT</strong>、<strong>CENTER</strong>、<strong>RIGHT</strong>。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">background</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>mousePressed<span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mouseButton<span class="token operator">==</span>LEFT<span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mouseButton<span class="token operator">==</span>CENTER<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token function">background</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>如上代码，当鼠标左键按下会在左侧画一个绿色的圆，当中间滚轮被按下会在中间画一个黑色的圆，当右键被按下会在右侧画一个红色的圆，当任何按键抬起后清除显示。值得注意的是，当三个按键都被按下，三个圆都会显示，但当其中任何一个鼠标按键被释放，则全部清除显示。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200429205926.gif" alt="鼠标单击"></p><h3 id="3-键盘按键"><a href="#3-键盘按键" class="headerlink" title="3. 键盘按键"></a>3. 键盘按键</h3><p>Processing中也会跟踪键盘上哪一个按键被按下，以及最后一个被按下的键。使用<strong>keyPressed</strong>变量来标记按键状态，当按键被按下为真，松开按键为假。<strong>key</strong>变量存储最后一个被按下的键的信息，其类型为字符型(char)，每当有新的按键被按下，<strong>key</strong>的值就会刷新。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">background</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">textSize</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">textAlign</span><span class="token punctuation">(</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">background</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">text</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>如上代码用到了绘制字体相关函数，<strong>textSize()</strong>用来设置字体大小，<strong>textAlign()</strong>设置文字对齐方式，<strong>text()</strong>函数用来绘制字体。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200429212600.gif" alt="绘制字母"></p><p>我们可以通过比较操作符来判断特定字符是否被按下，但是像Shift、Alt以及方向按键却很难这么做，因为它们没有特定的字符表示。我们需要先检测是否有编码为<strong>CODED</strong>的按键被按下，然后再用<strong>keyCode</strong>变量来判断具体是哪一个特殊按键，常用值为<strong>ALT</strong>、<strong>SHIFT</strong>、<strong>CONTROL</strong>,以及方向键<strong>UP</strong>、<strong>DOWN</strong>、<strong>LEFT</strong>、<strong>RIGHT</strong>。</p><pre class=" language-java"><code class="language-java"><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">350</span><span class="token punctuation">;</span><span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">150</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">700</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">background</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>keyPressed <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> CODED<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">switch</span><span class="token punctuation">(</span>keyCode<span class="token punctuation">)</span>    <span class="token punctuation">{</span>    <span class="token keyword">case</span> LEFT<span class="token operator">:</span>      x<span class="token operator">-=</span><span class="token number">10</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> RIGHT<span class="token operator">:</span>      x<span class="token operator">+=</span><span class="token number">10</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> UP<span class="token operator">:</span>      y<span class="token operator">-=</span><span class="token number">5</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> DOWN<span class="token operator">:</span>      y<span class="token operator">+=</span><span class="token number">5</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token function">ellipse</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200429215609.gif" alt="方向控制"></p><p>有了对鼠标键盘输入设备的识别，我们就可以做很多好玩的小游戏了，例如贪吃蛇、俄罗斯方块等等，你也来试试吧。</p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇22—实时时钟DS1302</title>
      <link href="/posts/1a6f.html"/>
      <url>/posts/1a6f.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200426213524.jpg" alt=""></p><p>很多电子爱好者都热衷制作电子时钟来练手，这些时钟会使用数码管、点阵屏、LCD液晶屏、OLED屏、TFT屏等显示模块，所使用的RTC时钟芯片也各不相同，DS1302、DS3231、DS12C887等。通过单片机等MCU驱动RTC模块，读取时间数据并交给显示模块进行展示，还可以加入按键来调节时钟，可以说是一个非常全面的练手项目。</p><p>本篇我们来学习DS1302的使用，通过库函数来驱动DS1302获取时间数据。</p><h2 id="1-DS1302介绍"><a href="#1-DS1302介绍" class="headerlink" title="1. DS1302介绍"></a>1. DS1302介绍</h2><p>DS1302是使用非常广泛的RTC芯片，它是DALLAS公司推出的涓流充电时钟芯片，内部含有一个实时时钟/日历和31字节静态RAM ，通过简单的串行接口与单片机进行通信。</p><h4 id="主要特性："><a href="#主要特性：" class="headerlink" title="主要特性："></a>主要特性：</h4><ul><li>实时时钟具有能计算 2100 年之前的秒 分 时 日 日期 星期 月 年的能力 还有闰年调整的能力。</li><li>31X8 位暂存数据存储 RAM。</li><li>串行 I/O 口方式使得管脚数量最少。</li><li>宽范围工作电压 2.0-5.5V。</li><li>读/写时钟或RAM 数据时有两种传送方式单字节传送和多字节传送字符组方式。</li><li>双电源管用于主电源和备份电源供应。</li></ul><h4 id="管脚排列及描述"><a href="#管脚排列及描述" class="headerlink" title="管脚排列及描述"></a>管脚排列及描述</h4><ul><li>X1,X2：32.768KHz晶振引脚</li><li>GND：地</li><li>#RST：复位引脚</li><li>I/O：数据输入/输出引脚</li><li>SCLK：串行时钟引脚</li><li>Vcc1：备用电源引脚，一般接纽扣电池</li><li>Vcc2：主电源引脚</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200425202422.jpg" alt="管脚配置"></p><p>我们使用的DS1302模块已经将DS1302时钟芯片和晶振及纽扣电池集中在一块小板子上：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200426213555.jpg" alt="DS1302模块"></p><h2 id="2-安装驱动库"><a href="#2-安装驱动库" class="headerlink" title="2. 安装驱动库"></a>2. 安装驱动库</h2><p>本篇使用DS1302库来驱动DS1302，无需关心DS1302的读写时序及内部寄存器相关信息。DS1302的驱动库也非常多，这里使用msparks提供的库，可以从GitHub上<a href="https://github.com/msparks/arduino-ds1302" target="_blank" rel="noopener">下载</a>。</p><p>将下载到的库进行解压，然后拷贝到Arduino IDE安装目录下的libraries文件夹下。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200425203526.jpg" alt="安装库"></p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>公对母杜邦线</li><li>DS1302模块</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>DS1302模块的VCC和GND连接Uno开发板的3.3V和GND。DS1302模块的CLK、DAT、RST对应连接Uno开发板的4、3、2引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200425212236.bmp" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200426213626.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;DS1302.h></span></span>DS1302 <span class="token function">rtc</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//对应DS1302的RST,DAT,CLK</span><span class="token keyword">void</span> <span class="token function">initRTCTime</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//初始化RTC时钟</span><span class="token punctuation">{</span>  rtc<span class="token punctuation">.</span><span class="token function">writeProtect</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//关闭写保护</span>  rtc<span class="token punctuation">.</span><span class="token function">halt</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//清除时钟停止标志</span>  Time <span class="token function">t</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//新建时间对象 最后参数位星期数据，周日为1，周一为2以此类推</span>  rtc<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//向DS1302设置时间数据</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">printTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//打印时间数据</span><span class="token punctuation">{</span>  Time tim <span class="token operator">=</span> rtc<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//从DS1302获取时间数据</span>  <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token function">snprintf</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"%04d-%02d-%02d %02d:%02d:%02d"</span><span class="token punctuation">,</span>           tim<span class="token punctuation">.</span>yr<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>mon<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>date<span class="token punctuation">,</span>           tim<span class="token punctuation">.</span>hr<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>min<span class="token punctuation">,</span> tim<span class="token punctuation">.</span>sec<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//新模块上电需要设置一次当前时间，</span>  <span class="token comment" spellcheck="true">//下载完成后需屏蔽此函数再次下载，否则每次上电都会初始化时间数据</span>  <span class="token function">initRTCTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">printTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200425223459.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>打开串口监视器，波特率设置成与程序中一致的9600，会看到输出时间数据。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200425223857.gif" alt="实验现象"></p><p>由于我们的DS1302模块带有纽扣电池来作为备用电池，当模块主供电Vcc掉电后，走时也不会停止。你可以将开发板断电等待一些时间重新上电，再次打开串口监视器可以看到时间并没有停止。</p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> DS1302 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino运行FreeRTOS操作系统</title>
      <link href="/posts/ffd1.html"/>
      <url>/posts/ffd1.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200423222050.jpg" alt=""></p><p>我们从一开始接触Arduino编程就知道，Arduino程序结构由setup()和loop()两部分组成，我们需要反复执行的代码要放在loop()中，并且这些代码一般都是顺序执行的。</p><p>随着我们需要实现的功能越来越复杂，这种顺序执行的方式很难达到实时性，这个时候就需要使用操作系统了，就类似于我们的PC机，可以同时运行多个软件，你可以一边聊QQ一边看电影，或者你用手机一边听歌一边看这篇文章。当然PC机和手机的处理器要强大的太多太多了，而我们的Arduino UNO开发板上使用的是一颗8位的AVR单片机。</p><p>接触过嵌入式的朋友都知道，我们会在ARM处理器上使用Linux系统，而在STM32这种较ARM低端而又比单片机强大的MCU上一般会使用更轻量级的实时操作系统，类似的如UCOS、FreeRTOS、RTThread等。习惯了STM32上运行FreeRTOS，真的没有想过在Arduino上来运行，最近发现了被移植到Arduino上运行的FreeRTOS实时操作系统，赶紧来尝试下。</p><h3 id="1-安装Arduino-FreeRTOS库"><a href="#1-安装Arduino-FreeRTOS库" class="headerlink" title="1. 安装Arduino FreeRTOS库"></a>1. 安装Arduino FreeRTOS库</h3><p>在Arduino IDE中，点击「项目」—「加载库」—「管理库」，在搜索栏输入”FreeRTOS”，查找并安装库。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200423230949.jpg" alt="安装库"></p><h3 id="2-Arduino-FreeRTOS的使用"><a href="#2-Arduino-FreeRTOS的使用" class="headerlink" title="2. Arduino FreeRTOS的使用"></a>2. Arduino FreeRTOS的使用</h3><p>Arduino FreeRTOS库可运行于Arduino AVR设备，如Uno、Leonardo、Mega等。本篇使用Uno开发板。</p><p>首先要包含Arduino FreeRTOS库的头文件。</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Arduino_FreeRTOS.h></span></span></code></pre><p>我们使用xTaskCreate()函数来创建任务，函数原型为：</p><pre class=" language-c"><code class="language-c">xTaskCreate（TaskFunction_t pvTaskCode，<span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> <span class="token keyword">const</span> pcName，uint16_t usStackDepth，<span class="token keyword">void</span> <span class="token operator">*</span> pvParameters，UBaseType_t uxPriority，TaskHandle_t <span class="token operator">*</span> pxCreatedTask）</code></pre><p>创建任务时需要传入6个参数：</p><ul><li><strong>pvTaskCode</strong>:任务函数。</li><li><strong>pcName</strong>:任务名称，一般用于调试和追踪。</li><li><strong>usStackDepth</strong>:任务堆栈，内核在创建任务时将其分配给任务。该值指定堆栈可以容纳的字数，而不是字节数。例如，如果堆栈为32位宽，并且usStackDepth作为100传入，那么将在RAM中分配400字节的堆栈空间（100 * 4字节）。合理使用此项，因为Arduino Uno只有2KB的RAM。</li><li><strong>pvParameters</strong>:任务输入参数（可以为NULL）。</li><li><strong>uxPriority</strong>:任务优先级（0是最低优先级）。</li><li><strong>pxCreatedTask</strong>:可用于向正在创建的任务传递句柄。然后，可以使用此句柄在API调用中引用任务，例如，更改任务优先级或删除任务（可以为NULL）。</li></ul><p>本次实验创建两个串口打印任务：</p><pre class=" language-c"><code class="language-c"><span class="token function">xTaskCreate</span><span class="token punctuation">(</span>TaskPrint1<span class="token punctuation">,</span> <span class="token string">"Print1"</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">xTaskCreate</span><span class="token punctuation">(</span>TaskPrint2<span class="token punctuation">,</span> <span class="token string">"Print2"</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>其中任务2有更高的优先级，会首先执行。</p><p>创建任务后，使用<strong>vTaskStartScheduler()</strong>函数启动任务调度。</p><p>创建任务实现函数。一般结构如下：</p><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">task</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>param<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token comment" spellcheck="true">//需要执行的代码</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>大多数代码都需要延迟函数来停止正在运行的任务，但是在RTOS中，不建议使用<strong>Delay()</strong>函数，因为它会停止CPU，因此RTOS也将停止工作。因此，FreeRTOS具有内核API，可以在特定时间内阻止任务:</p><pre class=" language-c"><code class="language-c">vTaskDelay（<span class="token keyword">const</span> TickType_t xTicksToDelay<span class="token punctuation">)</span></code></pre><p>例如延时1秒：</p><pre class=" language-c"><code class="language-c">vTaskDelay（<span class="token number">1000</span> <span class="token operator">/</span> portTICK_PERIOD_MS<span class="token punctuation">)</span></code></pre><p>其中portTICK_PERIOD_MS与实际MCU的时钟频率相关。</p><h3 id="3-本实验代码如下，拷贝编译下载。"><a href="#3-本实验代码如下，拷贝编译下载。" class="headerlink" title="3. 本实验代码如下，拷贝编译下载。"></a>3. 本实验代码如下，拷贝编译下载。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Arduino_FreeRTOS.h></span></span><span class="token keyword">void</span> <span class="token function">TaskPrint1</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//声明打印任务1</span><span class="token keyword">void</span> <span class="token function">TaskPrint2</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//声明打印任务2</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>Serial<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//等待串口连接后执行</span>  <span class="token function">xTaskCreate</span><span class="token punctuation">(</span>TaskPrint1<span class="token punctuation">,</span> <span class="token string">"Print1"</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//创建任务1</span>  <span class="token function">xTaskCreate</span><span class="token punctuation">(</span>TaskPrint2<span class="token punctuation">,</span> <span class="token string">"Print2"</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//创建任务2</span>  <span class="token function">vTaskStartScheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//启动任务调度</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">TaskPrint1</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>param<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"TaskPrint1..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">vTaskDelay</span><span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">/</span> portTICK_PERIOD_MS <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 等待1秒</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">TaskPrint2</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>param<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"TaskPrint2..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">vTaskDelay</span><span class="token punctuation">(</span><span class="token number">2000</span> <span class="token operator">/</span> portTICK_PERIOD_MS <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 等待2秒</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200423232829.jpg" alt="程序下载"></p><h3 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h3><p>打开串口监视器，波特兰设置与程序中一致的9600，会看到任务2先运行打印，由于任务1等待1秒，任务2等待2秒，所以每次打印任务1两次，打印任务2一次。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200423234329.gif" alt="实验现象"></p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> FreeRTOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Processing笔记03—基本图形绘制</title>
      <link href="/posts/a59d.html"/>
      <url>/posts/a59d.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200419180957.bmp" alt=""></p><p>基本图形的绘制，是进行制作动画和交互的基础，Processing提供了丰富的图形绘制相关函数来满足我们的绘图需求。</p><h4 id="1-坐标"><a href="#1-坐标" class="headerlink" title="1. 坐标"></a>1. 坐标</h4><p>任何图形绘制都离不开坐标系，在Processing中，原点为窗口的左上角，坐标值从左向右x轴增加，从上向下y轴增加。在每一个Processing程序中都有一个<strong>size()</strong>函数，用来设置运行窗口的宽度和高度。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200419160724.bmp" alt="坐标"></p><p>我们使用<strong>point()</strong>来绘制最基本的像素点，它的参数就是x轴和y轴的坐标。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200419161212.bmp" alt="画点"></p><h3 id="2-基本图形"><a href="#2-基本图形" class="headerlink" title="2. 基本图形"></a>2. 基本图形</h3><ul><li>直线：<strong>line(x1, y1, x2, y2)</strong></li><li>三角形：<strong>triangle(x1, y1, x2, y2, x3, y3)</strong></li><li>四边形：<strong>quad(x1, y1, x2, y2, x3, y3, x4, y4)</strong></li><li>矩形：<strong>rect(x, y, width, height)</strong></li><li>椭圆：<strong>ellipse(x, y, width, height)</strong></li><li>扇形：<strong>arc(x, y, width, height, start, stop)</strong></li></ul><pre class=" language-java"><code class="language-java"><span class="token function">line</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">triangle</span><span class="token punctuation">(</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">quad</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200419165059.bmp" alt="基本绘图"></p><p>值得注意的是，<strong>arc()</strong>的最后两个参数是设置角度，其单位使用弧度表示，其中180°、45°、90°、360°定义了特殊命名PI、QUARTER_PI、HALF_PI、TWO_PI。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200419165621.bmp" alt="扇形"></p><h3 id="3-绘图顺序"><a href="#3-绘图顺序" class="headerlink" title="3. 绘图顺序"></a>3. 绘图顺序</h3><p>由于程序的顺序执行，如果两个图形的坐标有重叠部分，后绘制的图形会覆盖前面绘制的图形。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200419170407.bmp" alt="绘制顺序"></p><h3 id="4-绘图属性"><a href="#4-绘图属性" class="headerlink" title="4.绘图属性"></a>4.绘图属性</h3><ul><li>描边粗细样式：<strong>strokeWeight()</strong>，默认参数为1像素</li></ul><pre class=" language-java"><code class="language-java"><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strokeWeight</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strokeWeight</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">175</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strokeWeight</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">260</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200419172203.bmp" alt="描边粗细"></p><ul><li>描边端点样式：<strong>strokeCap()</strong>，参数ROUND(圆形)、SQUARE(方形)、PROJECT(混合)</li></ul><pre class=" language-java"><code class="language-java"><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strokeWeight</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">line</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strokeCap</span><span class="token punctuation">(</span>SQUARE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">line</span><span class="token punctuation">(</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strokeCap</span><span class="token punctuation">(</span>PROJECT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">line</span><span class="token punctuation">(</span><span class="token number">230</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strokeCap</span><span class="token punctuation">(</span>ROUND<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">line</span><span class="token punctuation">(</span><span class="token number">330</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200419172654.bmp" alt="端点样式"></p><ul><li>线段转角样式：<strong>strokeJoin()</strong>，参数ROUND(圆形)、BEVEL(斜切)、MITER(斜接)</li></ul><pre class=" language-java"><code class="language-java"><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strokeWeight</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strokeJoin</span><span class="token punctuation">(</span>ROUND<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strokeJoin</span><span class="token punctuation">(</span>BEVEL<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">strokeJoin</span><span class="token punctuation">(</span>MITER<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">rect</span><span class="token punctuation">(</span><span class="token number">260</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200419173013.bmp" alt="转折样式"></p><h3 id="5-颜色"><a href="#5-颜色" class="headerlink" title="5. 颜色"></a>5. 颜色</h3><p>所有图形初始状态都是白色填色、黑色描边的，我们可以使用<strong>background()</strong>、<strong>fill()</strong>、<strong>stroke()</strong>函数来改变颜色。我们可以使用一个0-255的参数来表示灰度，但更多情况下，我们会使用三个0-255的RGB参数来创建色彩。</p><pre class=" language-java"><code class="language-java"><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">noStroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//隐藏描边</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">228</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">126</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200419174711.bmp" alt="色彩"></p><p>在<strong>fill()</strong>和<strong>strock()</strong>函数中可设置第四个可选参数alpha，用来控制透明度，取值范围0-255。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200419175207.bmp" alt="透明度"></p><p>有了这些绘图函数，基本就能满足我们各种绘图需求了，你也来试试吧。</p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇21—RFID模块门禁设计</title>
      <link href="/posts/6015.html"/>
      <url>/posts/6015.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200412164240.jpg" alt=""></p><p>RFID可应用于门禁系统，我们可以把数据写入标签，然后将有权限的标签进行记录保存，当有用户标签被扫描时，进行身份信息读取比对，然后根据权限进行相应的操作。</p><p>本篇配合OLED屏幕来模拟门禁系统，只对标签的UID进行简单对比判断，当然你也可以设置好自己的密钥，然后将数据写入到标签，进行更加严谨的身份识别。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>OLED显示屏</li><li>RFID-RC522模块及配套S50白卡和异形卡</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>RC522模块的3.3V、GND分别对应连接开发板的3.3V、GND，模块的MOSI、MISO、SCK分别连接开发板的SPI接口11、12、13，模块的SDA、RST分别连接开发板数字管脚10、9。OLED屏的VCC和GND分别连接开发板的3.3V和GND，OLED屏的SDA和SCL分别连接开发板A4和A5。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200412164242.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200412164241.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;SPI.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;MFRC522.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> SS_PIN 10</span><span class="token macro property">#<span class="token directive keyword">define</span> RST_PIN 9</span>MFRC522 <span class="token function">rfid</span><span class="token punctuation">(</span>SS_PIN<span class="token punctuation">,</span> RST_PIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> OLED_RESET     4</span>Adafruit_SSD1306 <span class="token function">oled</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span> OLED_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span>byte nuidPICC<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//存储读取的UID</span>byte cardID<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0x6D</span><span class="token punctuation">,</span> <span class="token number">0xC5</span><span class="token punctuation">,</span> <span class="token number">0x4D</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//存储有权限的卡ID</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  SPI<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rfid<span class="token punctuation">.</span><span class="token function">PCD_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"RC522初始化完成..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体大小</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--RFID--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"SCAN..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>  <span class="token comment" spellcheck="true">//搜索新卡</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> rfid<span class="token punctuation">.</span><span class="token function">PICC_IsNewCardPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 验证NUID是否可读</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> rfid<span class="token punctuation">.</span><span class="token function">PICC_ReadCardSerial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_Type piccType <span class="token operator">=</span> rfid<span class="token punctuation">.</span><span class="token function">PICC_GetType</span><span class="token punctuation">(</span>rfid<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>sak<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 检查是否MIFARE卡类型</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>piccType <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_TYPE_MIFARE_MINI <span class="token operator">&amp;&amp;</span>      piccType <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_TYPE_MIFARE_1K <span class="token operator">&amp;&amp;</span>      piccType <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_TYPE_MIFARE_4K<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"不支持读取此卡类型"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 保存读取到的UID</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>byte i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    nuidPICC<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> rfid<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>uidByte<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"十六进制UID："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printHex</span><span class="token punctuation">(</span>rfid<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>uidByte<span class="token punctuation">,</span> rfid<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>nuidPICC<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> cardID<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> nuidPICC<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> cardID<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>      <span class="token operator">&amp;&amp;</span> nuidPICC<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> cardID<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> nuidPICC<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> cardID<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>    oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>    oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--RFID--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>    oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"CHECK OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>    oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>    oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--RFID--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>    oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"OPEN..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    oled<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>    oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>    oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--RFID--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    oled<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>    oled<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"CHECK ERR"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    oled<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 使放置在读卡区的IC卡进入休眠状态，不再重复读卡</span>  rfid<span class="token punctuation">.</span><span class="token function">PICC_HaltA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 停止读卡模块编码</span>  rfid<span class="token punctuation">.</span><span class="token function">PCD_StopCrypto1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 十六进制输出</span><span class="token keyword">void</span> <span class="token function">printHex</span><span class="token punctuation">(</span>byte <span class="token operator">*</span>buffer<span class="token punctuation">,</span> byte bufferSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>byte i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bufferSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>buffer<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0x10</span> <span class="token operator">?</span> <span class="token string">" 0"</span> <span class="token punctuation">:</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>buffer<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HEX<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200412164239.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>有权限的标签卡事先保存记录了UID，读卡对比可以开门，而另外的卡则不能开门操作。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200412164243.gif" alt="实验现象"></p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>月球计划—ESP8266接入小爱同学控制彩灯</title>
      <link href="/posts/1188.html"/>
      <url>/posts/1188.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411133258.jpg" alt=""></p><p>之前的文章「小爱同学控制EP8266点灯」介绍了如何借助Blinker平台接入小爱同学，通过ESP8266控制点灯。Blinker官方例程中使用的是RGB灯，可以调节颜色的，手头刚好找到块RGB彩灯板子，顺便网购了个外壳，接下来分享月球声控彩灯的DIY过程。</p><p>在网上找到个灰常漂亮的月球小夜灯外壳，我看到的图片是这样子的：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411134155.jpg" alt="月球外壳"></p><p>然后我网购到的是这样子的：<br><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411134232.jpg" alt="实物"></p><p>好吧，不得不说，图片比实物好看对不对。然后我也没有收到支架，额，可以考虑吊起来？毕竟月亮高高挂。</p><h4 id="所需器件："><a href="#所需器件：" class="headerlink" title="所需器件："></a>所需器件：</h4><ul><li>ESP8266开发板</li><li>40 RGB LED灯板</li><li>双面洞洞板</li><li>排母</li><li>电源线</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411134654.jpg" alt="器件"></p><h3 id="DIY过程："><a href="#DIY过程：" class="headerlink" title="DIY过程："></a>DIY过程：</h3><p>首先需要将开发板和灯板通过洞洞板连接在一起，我使用了排母，方便灯板和开发板随时能取下来。电路接法非常简单，ESP8266开发板的D4引脚「内部连接ESP8266的GPIO2」连接灯板的数字引脚6，然后电源5V从灯板接入，灯板上的5V和GND分别连接到开发板的Vin和GND，灯板和开发板只需要3根线的连接。</p><p>焊接ESP8266开发板对应的排母：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411135739.jpg" alt="开发板排母"></p><p>焊接灯板的排母，然后连接电源线和数据线，原谅我丑陋的锡接过线，这种双面洞洞板真的不好焊接。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411172047.jpg" alt="锡接过线"></p><p>两块板子通过洞洞板插在一起，还是挺牢固的：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411140313.jpg" alt="组合"></p><p>然后将电源线焊接在灯板上：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411140432.jpg" alt="焊接电源线"></p><p>将程序下载到开发板，上电来确认下灯板是否可控。详细的下载及接入小爱流程请参照「小爱同学控制EP8266点灯」文章，本篇程序在文末获取。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411140906.jpg" alt="点亮测试"></p><p>接下来，要把板子固定进灯罩外壳，灯罩开口是这样的：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411141148.jpg" alt="外壳开口"></p><p>非常尴尬，外壳开口处根本没法固定板子，除非自己按照圆形盖子做PCB,然后再粘在上面。</p><p>无奈下只有硬来，之前洞洞板为了能放入开口，切割下一长条，然后就利用了这个长条，将它粘贴在ESP8266板子背面，然后两头固定了铜柱，在开口处打了两个孔位，使用螺丝进行固定。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411141755.jpg" alt="双面胶"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411170435.jpg" alt="粘贴长条"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411142230.jpg" alt="固定铜柱"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411142342.jpg" alt="固定到外壳"></p><p>最后还是使用双面胶，将盖子粘到开口。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411142911.jpg" alt="封口"></p><p>至此造月完成，最终还是没有吊起来，用了胶带支起来，凑合用了。上几张效果图：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411143155.jpg" alt="绿色"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411143208.jpg" alt="橙色"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200411143225.jpg" alt="黄色"></p><p>东西做完了，放一边留给糖宝玩了。可能我所享受的只是DIY的过程，你呢？附上演示视频：</p><p><a href="https://www.bilibili.com/video/BV1hg4y187PM/" target="_blank" rel="noopener">视频演示</a></p><hr><p>关注公众号「TonyCode」，后台回复「月球」获取文中代码资源。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ESP8266 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> WiFi </tag>
            
            <tag> Blinker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇20—S50卡数据读写</title>
      <link href="/posts/3dff.html"/>
      <url>/posts/3dff.html</url>
      
        <content type="html"><![CDATA[<p>RC522模块不但可以读取标签中的数据，还能将数据写入标签中，本篇介绍S50卡的写卡操作。</p><h2 id="1-S50卡介绍"><a href="#1-S50卡介绍" class="headerlink" title="1. S50卡介绍"></a>1. S50卡介绍</h2><p>S50非接触式IC卡的容量为1K字节EEPROM，又称M1卡。内部EEPROM又分为16个扇区，每个扇区分4个块，以块为存取单位，每个块由16个字节组成。</p><h3 id="1-M1卡主要指标："><a href="#1-M1卡主要指标：" class="headerlink" title="1. M1卡主要指标："></a>1. M1卡主要指标：</h3><ul><li>每个扇区有独立的一组密码和访问控制。</li><li>每张卡有唯一32位序列号。</li><li>无电源，自带天线，内含加密控制逻辑和通讯逻辑电路。</li><li>数据保存期为10年，可改写10万次，读无限次</li><li>工作频率：13.56MHZ</li><li>通信速率：106 KBPS</li><li>工作温度：-20℃~50℃(湿度为90%)</li></ul><h3 id="2-M1卡存储结构"><a href="#2-M1卡存储结构" class="headerlink" title="2. M1卡存储结构"></a>2. M1卡存储结构</h3><p>存储结构如下图，16个扇区，每个扇区4个块，可将16个扇区的64个块按绝对地址编号0-63。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406232056.jpg" alt="M1卡存储结构"></p><p>其中第0扇区的块0，用于存放厂商代码，一般前四字节为UID，已经固化，一般不可更改。</p><p>每个扇区的块0、块1、块2为数据块，可用于存储数据，块3为控制块，包括了密码A，存取控制，密码B。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406232543.jpg" alt="控制块"></p><h3 id="3-读写流程"><a href="#3-读写流程" class="headerlink" title="3. 读写流程"></a>3. 读写流程</h3><p>每个扇区的密码和存取控制都是独立的，可根据实际需要设定各自的密码及存取控制。出厂默认的密码6个字节都为0xFF。</p><p>扇区中每个块的存取条件是由密码和存取控制共同决定的，每个块有相应的三个控制位，按照一定规则进行约束，具体可以参照M1卡数据手册。</p><p>本篇演示向扇区1的块0，绝对地址为块4中写入数据。主要流程为：模块进行卡扫描读取卡片信息，通过密码进行身份认证，然后读取写入前的块数据，然后再次进行身份认证并写入自定义数据，然后再次身份认证读取写入后的块数据来检测是否写入成功。</p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>RFID-RC522模块及配套S50白卡和异形卡</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>RC522模块的3.3V、GND分别对应连接开发板的3.3V、GND，模块的MOSI、MISO、SCK分别连接开发板的SPI接口11、12、13，模块的SDA、RST分别连接开发板数字管脚10、9。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406194158.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406194159.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;SPI.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;MFRC522.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> RST_PIN         9</span><span class="token macro property">#<span class="token directive keyword">define</span> SS_PIN          10</span>MFRC522 <span class="token function">mfrc522</span><span class="token punctuation">(</span>SS_PIN<span class="token punctuation">,</span> RST_PIN<span class="token punctuation">)</span><span class="token punctuation">;</span>MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>MIFARE_Key key<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>Serial<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 等待串口打开</span>  SPI<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  mfrc522<span class="token punctuation">.</span><span class="token function">PCD_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 出厂默认使用FF FF FF FF FF FF作为密码A和B</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>byte i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    key<span class="token punctuation">.</span>keyByte<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"开始扫描卡进行读写..."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"使用密码:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">dump_byte_array</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span>keyByte<span class="token punctuation">,</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>MF_KEY_SIZE<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"数据将被写入到#1扇区"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//寻找新卡</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> mfrc522<span class="token punctuation">.</span><span class="token function">PICC_IsNewCardPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//验证UID是否可读</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> mfrc522<span class="token punctuation">.</span><span class="token function">PICC_ReadCardSerial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//显示卡信息</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"卡 UID:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">dump_byte_array</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>uidByte<span class="token punctuation">,</span> mfrc522<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"卡类型: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_Type piccType <span class="token operator">=</span> mfrc522<span class="token punctuation">.</span><span class="token function">PICC_GetType</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>sak<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span><span class="token function">PICC_GetTypeName</span><span class="token punctuation">(</span>piccType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 检查是否MIFARE卡类型</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>    piccType <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_TYPE_MIFARE_MINI          <span class="token operator">&amp;&amp;</span>  piccType <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_TYPE_MIFARE_1K          <span class="token operator">&amp;&amp;</span>  piccType <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_TYPE_MIFARE_4K<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"不支持读取此卡类型"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 操作扇区1</span>  <span class="token comment" spellcheck="true">// 扇区1包括:块4~块7</span>  byte sector         <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  byte blockAddr      <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>  byte dataBlock<span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span>    <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span>    <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span>    <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x10</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//要写入的数据</span>  byte trailerBlock   <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>  MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>StatusCode status<span class="token punctuation">;</span>  byte buffer<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  byte size <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 使用密码A进行身份认证</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"使用密码A进行身份认证..."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  status <span class="token operator">=</span> <span class="token punctuation">(</span>MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>StatusCode<span class="token punctuation">)</span> mfrc522<span class="token punctuation">.</span><span class="token function">PCD_Authenticate</span><span class="token punctuation">(</span>MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_CMD_MF_AUTH_KEY_A<span class="token punctuation">,</span> trailerBlock<span class="token punctuation">,</span> <span class="token operator">&amp;</span>key<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span>uid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>STATUS_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"身份认证失败 "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span><span class="token function">GetStatusCodeName</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 显示当前扇区数据</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"当前扇区数据:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  mfrc522<span class="token punctuation">.</span><span class="token function">PICC_DumpMifareClassicSectorToSerial</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span>uid<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>key<span class="token punctuation">,</span> sector<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 读取写入前块数据</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"读取写入前块"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>blockAddr<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"数据..."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  status <span class="token operator">=</span> <span class="token punctuation">(</span>MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>StatusCode<span class="token punctuation">)</span> mfrc522<span class="token punctuation">.</span><span class="token function">MIFARE_Read</span><span class="token punctuation">(</span>blockAddr<span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> <span class="token operator">&amp;</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>STATUS_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"读取失败 "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span><span class="token function">GetStatusCodeName</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"块"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>blockAddr<span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"数据:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">dump_byte_array</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 使用密码B进行身份认证</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"使用密码B进行身份认证..."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  status <span class="token operator">=</span> <span class="token punctuation">(</span>MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>StatusCode<span class="token punctuation">)</span> mfrc522<span class="token punctuation">.</span><span class="token function">PCD_Authenticate</span><span class="token punctuation">(</span>MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_CMD_MF_AUTH_KEY_B<span class="token punctuation">,</span> trailerBlock<span class="token punctuation">,</span> <span class="token operator">&amp;</span>key<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span>uid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>STATUS_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"身份认证失败 "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span><span class="token function">GetStatusCodeName</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//写入数据</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"写数据到块"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>blockAddr<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"..."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">dump_byte_array</span><span class="token punctuation">(</span>dataBlock<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  status <span class="token operator">=</span> <span class="token punctuation">(</span>MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>StatusCode<span class="token punctuation">)</span> mfrc522<span class="token punctuation">.</span><span class="token function">MIFARE_Write</span><span class="token punctuation">(</span>blockAddr<span class="token punctuation">,</span> dataBlock<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>STATUS_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"写入失败 "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span><span class="token function">GetStatusCodeName</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//读取写入后块数据</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"读取写入后块"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>blockAddr<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"数据..."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  status <span class="token operator">=</span> <span class="token punctuation">(</span>MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>StatusCode<span class="token punctuation">)</span> mfrc522<span class="token punctuation">.</span><span class="token function">MIFARE_Read</span><span class="token punctuation">(</span>blockAddr<span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> <span class="token operator">&amp;</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>STATUS_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"读取失败 "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span><span class="token function">GetStatusCodeName</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"块"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>blockAddr<span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"块:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">dump_byte_array</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 显示当前扇区数据</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">F</span><span class="token punctuation">(</span><span class="token string">"当前扇区数据:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  mfrc522<span class="token punctuation">.</span><span class="token function">PICC_DumpMifareClassicSectorToSerial</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>mfrc522<span class="token punctuation">.</span>uid<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>key<span class="token punctuation">,</span> sector<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//使放置在读卡区的IC卡进入休眠状态，不再重复读卡</span>  mfrc522<span class="token punctuation">.</span><span class="token function">PICC_HaltA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 停止读卡模块编码</span>  mfrc522<span class="token punctuation">.</span><span class="token function">PCD_StopCrypto1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 十六进制输出</span><span class="token keyword">void</span> <span class="token function">dump_byte_array</span><span class="token punctuation">(</span>byte <span class="token operator">*</span>buffer<span class="token punctuation">,</span> byte bufferSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>byte i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bufferSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>buffer<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0x10</span> <span class="token operator">?</span> <span class="token string">" 0"</span> <span class="token punctuation">:</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>buffer<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HEX<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200407102206.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>打开串口监视器，波特率设置成与程序中相一致的9600。将卡靠近模块，根据打印信息可看到数据被写入到指定块中。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406234712.gif" alt="实验现象"></p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Processing笔记02—第一行代码</title>
      <link href="/posts/d09.html"/>
      <url>/posts/d09.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200405225153.jpg" alt=""></p><p>Processing的开发环境「Processing Development Environment，缩写为PDE」我们已经安装完成，现在就可以开始编程了。</p><h3 id="PDE开发环境介绍"><a href="#PDE开发环境介绍" class="headerlink" title="PDE开发环境介绍"></a>PDE开发环境介绍</h3><p>以Windows版本为例，运行PDE，你会发现外观跟Arduino的IDE有些类似。Processing源文件后缀名为.pde，而早期的Arduino文件也是以次为后缀的。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200405220737.jpg" alt="运行PDE"></p><p>PDE界面由四部分组成：菜单栏、工具栏、代码编辑区、控制台。其中工具栏的运行和停止按钮是使用最频繁的。我们编写代码后，点击运行，屏幕会出现显示窗口，来展示运行结果。现在我们没有编写任何代码，点击运行后，会显示默认的100*100的灰色空白窗口。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200405222015.jpg" alt="默认空白窗口"></p><h3 id="第一行代码"><a href="#第一行代码" class="headerlink" title="第一行代码"></a>第一行代码</h3><p>我们在代码编辑区写下第一行代码：</p><pre class=" language-java"><code class="language-java"><span class="token function">ellipse</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>点击运行，会在显示窗口中看到一个圆形。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200405222304.jpg" alt="圆"></p><p>我们使用ellipse()函数来画椭圆，指定圆心坐标，当后面两个参数相同时，画出来的就是圆形。我们知道Arduino的程序一般有两个函数：setup()和loop()。类似的，我们的Processing程序也有两个重要函数：</p><ul><li>setup()：程序启动只执行一次。</li><li>draw()：在setup()函数执行后循环执行。</li></ul><p>我们写一个规范点的程序：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">size</span><span class="token punctuation">(</span><span class="token number">700</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置窗口大小</span>  <span class="token function">background</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置背景颜色</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">fill</span><span class="token punctuation">(</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置填充色，RGB颜色随机产生</span>  <span class="token function">ellipse</span><span class="token punctuation">(</span>mouseX<span class="token punctuation">,</span> mouseY<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//以鼠标坐标画圆</span><span class="token punctuation">}</span></code></pre><p>运行程序，会看到随着鼠标移动，会画出不同颜色的圆。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200405225047.gif" alt="变化的圆"></p><p>我们使用「Ctr+S」对程序进行保存，在菜单栏的「文件」中，点击「输出程序」，你的代码会被打包成独立文件，PDE会根据你的选择创建Windows、Mac、Linux程序。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200405230517.jpg" alt="输出程序"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200405231044.jpg" alt="可执行文件"></p><h3 id="范例和文档"><a href="#范例和文档" class="headerlink" title="范例和文档"></a>范例和文档</h3><p>在菜单栏「文件」中，你可以找到很多的范例程序，可以参考这些例程，你可以打开并运行查看显示内容。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200405231959.jpg" alt="范例"></p><p>在代码编辑区，对你不熟悉的函数右键，选择在参考文件中搜索，或者在「帮助」中，都可以打开引用文档。文档默认保存在你PDE的安装目录中。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200405232146.jpg" alt="引用文档"></p><p>当你不清楚函数的用途，或者参数、返回值、用法时，可以去查看文档，这是最好的学习资料了。</p><hr><p>关注公众号「TonyCode」，更多精彩分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇19—RFID模块的使用</title>
      <link href="/posts/3a7b.html"/>
      <url>/posts/3a7b.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406184051.jpg" alt=""></p><p>射频识别「Radio Frequency IDentification,简称RFID」技术，又称为无线射频识别，是一种通信技术，可通过无线电讯号识别特定目标并读写相关数据，而无需识别系统与特定目标之间建立机械或光学接触，普遍应用于企业/校园一卡通、公交储值卡、高速公路收费、停车场、小区管理等。本篇介绍FRID-RC522模块的使用。</p><h2 id="1-RFID模块"><a href="#1-RFID模块" class="headerlink" title="1. RFID模块"></a>1. RFID模块</h2><p>RFID 技术利用无线射频方式在阅读器和射频卡之间进行非接触双向数据传输，以达到目标识别和数据交换的目的。</p><ul><li>标签(Tag，即射频卡)，耦合元件及芯片组成，标签含有内置天线，用于和射频天线间进行通信。</li><li>阅读器：读取(在读写卡中还可以写入)标签信息的设备。</li><li>天线：在标签和读取器间传递射频信号。</li></ul><p>本实验使用的RFID-RC522模块采用MFRC522芯片，SPI通讯方式，支持Mifarel S50、S70 、Pro、Desfire等类型的卡，附带的白卡和钥匙扣是S50卡，每张卡都有自己的标识(UID)。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406192931.jpg" alt="RFID模块"></p><h2 id="2-安装驱动库"><a href="#2-安装驱动库" class="headerlink" title="2. 安装驱动库"></a>2. 安装驱动库</h2><p>Arduino有RC522驱动库，点击「项目」—「加载库」—「管理库」，查找选择「MFC522」最新版本进行安装。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406193315.jpg" alt="安装库"></p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>RFID-RC522模块及配套S50白卡和异形卡</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>RC522模块的3.3V、GND分别对应连接开发板的3.3V、GND，模块的MOSI、MISO、SCK分别连接开发板的SPI接口11、12、13，模块的SDA、RST分别连接开发板数字管脚10、9。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406194158.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406194159.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;SPI.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;MFRC522.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> SS_PIN 10</span><span class="token macro property">#<span class="token directive keyword">define</span> RST_PIN 9</span>MFRC522 <span class="token function">rfid</span><span class="token punctuation">(</span>SS_PIN<span class="token punctuation">,</span> RST_PIN<span class="token punctuation">)</span><span class="token punctuation">;</span>byte nuidPICC<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//存储读取的UID</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  SPI<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rfid<span class="token punctuation">.</span><span class="token function">PCD_Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"RC522初始化完成..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//搜索新卡</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> rfid<span class="token punctuation">.</span><span class="token function">PICC_IsNewCardPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 验证NUID是否可读</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span> rfid<span class="token punctuation">.</span><span class="token function">PICC_ReadCardSerial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_Type piccType <span class="token operator">=</span> rfid<span class="token punctuation">.</span><span class="token function">PICC_GetType</span><span class="token punctuation">(</span>rfid<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>sak<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 检查是否MIFARE卡类型</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>piccType <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_TYPE_MIFARE_MINI <span class="token operator">&amp;&amp;</span>      piccType <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_TYPE_MIFARE_1K <span class="token operator">&amp;&amp;</span>      piccType <span class="token operator">!=</span> MFRC522<span class="token punctuation">:</span><span class="token punctuation">:</span>PICC_TYPE_MIFARE_4K<span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"不支持读取此卡类型"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 保存读取到的UID</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>byte i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    nuidPICC<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> rfid<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>uidByte<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"十六进制UID："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printHex</span><span class="token punctuation">(</span>rfid<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>uidByte<span class="token punctuation">,</span> rfid<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"十进制UID："</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printDec</span><span class="token punctuation">(</span>rfid<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>uidByte<span class="token punctuation">,</span> rfid<span class="token punctuation">.</span>uid<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 使放置在读卡区的IC卡进入休眠状态，不再重复读卡</span>  rfid<span class="token punctuation">.</span><span class="token function">PICC_HaltA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 停止读卡模块编码</span>  rfid<span class="token punctuation">.</span><span class="token function">PCD_StopCrypto1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 十六进制输出</span><span class="token keyword">void</span> <span class="token function">printHex</span><span class="token punctuation">(</span>byte <span class="token operator">*</span>buffer<span class="token punctuation">,</span> byte bufferSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>byte i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bufferSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>buffer<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0x10</span> <span class="token operator">?</span> <span class="token string">" 0"</span> <span class="token punctuation">:</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>buffer<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HEX<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//十进制输出</span><span class="token keyword">void</span> <span class="token function">printDec</span><span class="token punctuation">(</span>byte <span class="token operator">*</span>buffer<span class="token punctuation">,</span> byte bufferSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>byte i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bufferSize<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>buffer<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0x10</span> <span class="token operator">?</span> <span class="token string">" 0"</span> <span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>buffer<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> DEC<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406201048.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>打开串口监视器，波特率设置成与程序中相一致的9600。将卡靠近模块天线感应区，可读出卡片ID。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406201231.gif" alt="实验现象"></p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你用过do{...}while(0)吗？</title>
      <link href="/posts/f8b3.html"/>
      <url>/posts/f8b3.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401185610.jpg" alt=""></p><p>当第一次遇到do{…}while(0)，我是懵的，这是什么操作，为了好看吗？后来发现Linux内核中随处可见啊，大神们这样的操作肯定是有道理的。查询了一些资料，做一下总结。在今后C语言开发中，你也可以放心使用这一技巧。</p><h3 id="1-配合定义复杂的宏，避免宏在预处理展开时出错"><a href="#1-配合定义复杂的宏，避免宏在预处理展开时出错" class="headerlink" title="1. 配合定义复杂的宏，避免宏在预处理展开时出错"></a>1. 配合定义复杂的宏，避免宏在预处理展开时出错</h3><p>举个例子，假设你定义了一个宏：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> DOSOMETHING() fuc1(); fuc2();</span></code></pre><p>当调用DOSOMETHING()的时候，你希望调用fuc1()和fuc2()来做一些事情。但是当在if语句中调用时，可能会这么写：</p><pre class=" language-c"><code class="language-c"><span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token function">DOSOMETHING</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>预处理展开宏，替换文本如下：</p><pre class=" language-c"><code class="language-c"><span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token function">fuc1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fuc2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这样就出现了问题，fuc2()就不受if语句的控制了，导致程序出错。</p><p>可能你会说，宏定义建议把整个表达式用大括号括起来的：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> DOSOMETHING() {fuc1(); fuc2();}</span></code></pre><p>还是if语句来调用：</p><pre class=" language-c"><code class="language-c"><span class="token keyword">if</span><span class="token punctuation">(</span>num <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token function">DOSOMETHING</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"num&lt;0\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这样程序编译会报错：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402163538.jpg" alt="报错"></p><p>我们查看预处理文件，宏展开是这样子的:</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402163617.jpg" alt="宏展开"></p><p>if语句被后面的分号提前结束，else无法与其匹配。而使用do{…}while(0)后就不会出错了，Linux内核中的宏定义很多都是这么用的：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402163658.jpg" alt="linux中使用"></p><h3 id="2-避免定义空的宏时引起warning"><a href="#2-避免定义空的宏时引起warning" class="headerlink" title="2. 避免定义空的宏时引起warning"></a>2. 避免定义空的宏时引起warning</h3><p>一些大型的C工程中，为了兼容不同的架构，或者为了移植方便，都会用到空的宏定义。在编译的时候，编译器会给出警告，为了避免这些warning，我们可以使用do{…}while(0)来定义空的宏：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402163803.jpg" alt="空宏"></p><h3 id="3-避免goto语句"><a href="#3-避免goto语句" class="headerlink" title="3. 避免goto语句"></a>3. 避免goto语句</h3><p>在一些函数中，我们可能需要在return语句之前做一些清理工作，很多人不提倡用goto语句。好吧，do{…}while(0)可以实现同样的功能：</p><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    somestruct <span class="token operator">*</span>ptr <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">do</span>    <span class="token punctuation">{</span>        dosomething<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        dosomething<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        dosomething<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">free</span><span class="token punctuation">(</span>ptr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>代码可读性和可维护性要比goto语句好多了。</p><h3 id="4-定义单一的函数块来完成复杂的操作"><a href="#4-定义单一的函数块来完成复杂的操作" class="headerlink" title="4. 定义单一的函数块来完成复杂的操作"></a>4. 定义单一的函数块来完成复杂的操作</h3><p>当你的功能复杂，变量很多又不愿增加一个函数的时候，可以将你的代码用do{…}while(0)包裹，在里面可以定义变量而不用考虑变量名会同函数前后重复。当然，为了后续维护方便，不建议这么做。</p><h3 id="5-就是感觉美观好看"><a href="#5-就是感觉美观好看" class="headerlink" title="5. 就是感觉美观好看"></a>5. 就是感觉美观好看</h3><p>对，就是觉得好看，不解释：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402163840.jpg" alt="代码整洁"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Processing笔记01—初识Processing</title>
      <link href="/posts/ebb3.html"/>
      <url>/posts/ebb3.html</url>
      
        <content type="html"><![CDATA[<p>最近在使用Arduino时遇上了Processing，越了解越喜欢，不说别的优点，这东东与Arduino交互做PC机上的数据展示真的是很不错的选择。可以说这是真正一门与艺术相关的编程语言，本篇开始将分享Processing系列学习笔记，希望感兴趣的朋友一起学习。</p><h4 id="1-Processing是什么"><a href="#1-Processing是什么" class="headerlink" title="1. Processing是什么"></a>1. Processing是什么</h4><p>Processing是一门用来生成图片、动画和交互软件的编程语言，主要用于处理可视化数据，把视觉形式、动画、交互与软件中的概念关联在一起，将计算机编程和艺术创作完美结合，将代码转换成千变万化的图像。学生、艺术家、设计师以及研究人员可以用processing来学习，设计原型和产品。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402164720.jpg" alt="Processing"></p><p>Processing是以Java语言为基础的，并且做了扩展和延伸，支持跨平台。类似于Arduino，作为开源平台它也有很多的开源库做支持，并且目前还支持Python语言。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402164826.jpg" alt="Python"></p><h4 id="2-Processing能做什么"><a href="#2-Processing能做什么" class="headerlink" title="2. Processing能做什么"></a>2. Processing能做什么</h4><p>Processing是一种文本编程语言，专用于生成以及编辑图像。Processing力求达到易用且功能丰富，且在短时间内学会并编写自己的程序，但更多的高级用户则是使用或编写带有更多功能的类库，包括矢量图与光栅图的绘制、图像处理、色彩模式、鼠标和键盘事件、网络通信、以及面向对象式编程、声音、三维文件的处理等。</p><p>这里分享些Processing作品：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402165055.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402165133.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402165153.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402165201.gif" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402165213.gif" alt=""></p><p>图片来源网络，如涉及作品版权问题，请与我联系删除。</p><p>Processing可以与Arduino等进行互动，对以单片机、Arduino等MCU为主的嵌入式应用的数据进行直观的展示，感觉比起C#和QT等开发语言简单。</p><h4 id="3-下载安装Processing-IDE"><a href="#3-下载安装Processing-IDE" class="headerlink" title="3. 下载安装Processing IDE"></a>3. 下载安装Processing IDE</h4><p>你可以在<a href="https://processing.org/download/" target="_blank" rel="noopener">官网下载</a>IDE，支持Windows、Linux和Mac平台，后续主要使用Windows平台。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171147.jpg" alt=""></p><p>可能网络不够科学下载会有些难度，这里已经下载了相关安装包，可在文末获取。下载后解压缩，点击可执行文件就可直接运行Processing IDE了。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171204.jpg" alt=""></p><hr><p>关注公众号「TonyCode」，后台回复“Pr”，获取文中代码及文件。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Processing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用VSCode开发Arduino</title>
      <link href="/posts/f947.html"/>
      <url>/posts/f947.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406072708.jpg" alt=""></p><p>Arduino自家的IDE环境一直很简陋，没有语法高亮，没有代码补全，不能快速查找跳转函数及变量，在开发稍微复杂一点的项目时很是痛苦。有时候需要查看库文件代码，也只能在电脑中搜索文件名去打开。</p><h4 id="为什么使用VSCode"><a href="#为什么使用VSCode" class="headerlink" title="为什么使用VSCode?"></a>为什么使用VSCode?</h4><p>VSCode是当下比较流行的编辑器，有着轻量化、跨平台、大量插件支持等特点，支持几乎所有主流的开发语言的语法高亮、智能代码补全、自定义快捷键、括号匹配和颜色区分等。VSCode上也有Arduino的插件，集成了Arduino上全部的功能，不管是编码烧录还是导入库之类的都可以在上面完成。</p><h4 id="环境搭建的步骤"><a href="#环境搭建的步骤" class="headerlink" title="环境搭建的步骤"></a>环境搭建的步骤</h4><ul><li>下载安装VSCode，<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">官方网址</a>。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406072233.jpg" alt="VSCode"></p><ul><li>下载官方Arduino IDE，VSCode只是编辑器，需要去调用Arduino IDE完成程序编译等。<a href="https://www.arduino.cc/en/Main/Software" target="_blank" rel="noopener">官方网址</a>。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406072235.jpg" alt="IDE"></p><ul><li>启动VSCode，搜索Arduino插件并安装。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406072234.jpg" alt="安装插件"></p><ul><li>进入VSCode的设置界面，你可以使用快捷键「Ctrl+,」,搜索Arduino相关设置，在Path中添加Arduino IDE的安装路径。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406072236.jpg" alt="配置路径"></p><p>设置完成，打开个程序测试下吧。</p><h4 id="使用VSCode"><a href="#使用VSCode" class="headerlink" title="使用VSCode"></a>使用VSCode</h4><p>打开例程所在的文件夹，你也可以新建文件夹，然后新建arduino程序。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406072239.jpg" alt="打开程序"></p><p>我们可以在窗口下方状态条处，点击设置开发板型号、COM口等，可以点击插头标志开启串口监视器。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406072237.jpg" alt="板子型号"></p><p>点击窗口右上方图标或使用快捷键进行编译和上传操作：</p><ul><li>Ctrl+Alt+U 编译并上传</li><li>Ctrl+Alt+R 进行编译验证</li></ul><p>下面是演示动画，来试一下吧。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200406072238.gif" alt="演示"></p><hr><p>关注公众号「TonyCode」，更多精彩内容分享。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言#define宏定义，你真的了解吗？</title>
      <link href="/posts/21f.html"/>
      <url>/posts/21f.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401185610.jpg" alt=""></p><p>在C语言中，我们使用#define来定义宏。在C程序编译的预处理阶段，预处理器会把宏定义的符号替换成指定的文本。</p><h3 id="不带参数的宏"><a href="#不带参数的宏" class="headerlink" title="不带参数的宏"></a>不带参数的宏</h3><p>关于宏最常见的就是用来定义数值常量的名称，即没有参数的宏定义，采用如下形式：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> 宏名称    替换文本</span></code></pre><p>例如：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> ARRAY_SIZE    10</span><span class="token keyword">int</span> data<span class="token punctuation">[</span>ARRAY_SIZE<span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><p>当程序需要修改数组长度时，只需要修改宏定义即可，无需对程序中每一处用到数组长度的地方进行修改。</p><h3 id="带参数的宏"><a href="#带参数的宏" class="headerlink" title="带参数的宏"></a>带参数的宏</h3><p>你可以定义具有形参的宏，然后预处理器展开这类宏时，会将宏指定的实参替换文本中对应的形参。这有点像函数，故也叫做函数式宏定义、类函数宏，形式如下：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span>    宏名称([行参列表])    替换文本</span><span class="token macro property">#<span class="token directive keyword">define</span> 宏名称([行参列表,]...)    替换文本</span></code></pre><p>当宏被调用时，替换文本中的每个值都与形参列表相对应。另外C99标准允许定义有参略号的宏，省略号必须放在参数列表的后面，以表示可选参数。</p><p>当调用有可选参数的宏时，预处理器会将所有可选参数连同分隔它们的逗号打包在一起作为一个参数。在替换文本中，标识符 <strong>VA_ARGS</strong> 对应前面打包的可选参数。</p><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">//假设有个已经打开的日志文件，准备采用文件指针fp_log对其进行写入</span><span class="token macro property">#<span class="token directive keyword">define</span> printLog(...) fprintf(fp_log, __VA_ARGS__)</span><span class="token comment" spellcheck="true">//使用printLog</span><span class="token function">printLog</span><span class="token punctuation">(</span><span class="token string">"%s: intVar=%d\r\n"</span><span class="token punctuation">,</span> <span class="token constant">__func__</span><span class="token punctuation">,</span> intVar<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>预处理器把最后一行的宏调用替换成下面一行代码：</p><pre class=" language-c"><code class="language-c"><span class="token function">fprintf</span><span class="token punctuation">(</span>fp_log<span class="token punctuation">,</span> <span class="token string">"%s: intVar=%d\r\n"</span><span class="token punctuation">,</span> <span class="token constant">__func__</span><span class="token punctuation">,</span> intVar<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="带参宏的一些问题"><a href="#带参宏的一些问题" class="headerlink" title="带参宏的一些问题"></a>带参宏的一些问题</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> SQUARE(x)   x * x</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span> <span class="token function">SQUARE</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span> <span class="token function">SQUARE</span><span class="token punctuation">(</span>a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>​    程序运行，第一条打印显而易见为25，第二条打印为多少呢？不是36而是11。我们通过”gcc -E a.c &gt;a.txt”，将预处理后的文件重定向到a.txt，来观察被替换的宏文本。</p><pre class=" language-c"><code class="language-c"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span> a<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">*</span> a<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>可见替换产生的表达式并没有按照预想的次序进行求值。可能大家会说，加上两个括号就解决了嘛：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> SQUARE(x)  (x) * (x)</span></code></pre><p>那么，为每个出现在替换文本中的参数加上括号就一定没问题了吗？看下面例子：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> ADD(x)    (x) + (x)</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token function">ADD</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>看似输出100，实际输出55。我们看下替换后的文本：</p><pre class=" language-c"><code class="language-c"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span> <span class="token number">10</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>乘法运算在加法运算之前执行，所以结果为55。这个错误很容易修正：整个表达式加上括号：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> ADD(x)    ((x) + (x))</span></code></pre><p><strong>所有对数值表达式进行求值的宏定义，为避免参数中操作符或邻近的操作符之间不可预料的互相作用，应对每个参数加括号，整个表达式也要加括号。</strong></p><h3 id="宏与函数"><a href="#宏与函数" class="headerlink" title="宏与函数"></a>宏与函数</h3><p>尽可能多的加括号就绝对不会有问题了吗？看下面例子：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> MAX(a, b)    ((a) > (b) ? (a) : (b))</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token keyword">const</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token function">MAX</span><span class="token punctuation">(</span><span class="token operator">++</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>m的值是多少？是不是相当于执行MAX(6, 5)，然后输出6呢？答案是7，看下替换的文本：</p><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">++</span>a<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token operator">++</span>a<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这里就是C语言中函数式宏定义的陷阱，传递参数++a会被展开到替换文本的每一个a处。所以，再多的括号也不可能确保万无一失。</p><p>那么，函数式宏定义较函数有什么优点吗？</p><ul><li>相较于函数的分配和释放栈、传参、传返回值等一系列操作，函数式宏定义的代码执行效率高。</li><li>函数的参数必须声明为一种特定的类型，而宏是与类型无关的。以比较大小为例，如果我们需要比较整形、长整型、浮点型数值大小，由于C语言不支持函数重载，我们需要为每一种数据类型实现一个max()函数，显然使用宏定义要来的方便了。当然宏定义不检测参数类型也是把双刃剑，可能导致程序不安全，需要特别注意。</li><li>还有一些函数无法实现的任务，比如说，如何将数据类型作为参数传递给函数？看宏定义怎么破：</li></ul><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> MALLOC(n, type) ((type *)malloc((n) * sizeof(type)))</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>p <span class="token operator">=</span> <span class="token function">MALLOC</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>替换后的文本：</p><pre class=" language-c"><code class="language-c">p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小爱同学控制EP8266点灯</title>
      <link href="/posts/1caf.html"/>
      <url>/posts/1caf.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402174139.jpg" alt=""></p><p>小爱同学吃灰很久了，一直想接入小爱来控制些智能硬件，无奈小米的IOT开放平台只对企业用户开放。最近研究了点灯科技的物联网平台，软件硬件支持非常丰富，关键对于爱好者有免费的版本可以使用，爱了爱了有木有？本篇分享下如何通过Blinker平台接入小爱同学，进而控制联网的ESP8266点灯。</p><h3 id="1-硬件部分"><a href="#1-硬件部分" class="headerlink" title="1. 硬件部分"></a>1. 硬件部分</h3><p>我使用了如下图所示ESP8266开发板，其实就是板载了8266最小系统和USB转串口部分。淘宝上很多，大的区别可能就是串口芯片有CH340和CP2102之分吧。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402174142.jpg" alt="ESP8266开发板"></p><p>ESP8266模块板载了LED灯，连接在GPIO2上，GPIO2输出高电平灯熄灭，输出低电平灯点亮，就来控制它吧。</p><h3 id="2-平台部分"><a href="#2-平台部分" class="headerlink" title="2. 平台部分"></a>2. 平台部分</h3><p>在小爱同学APP中智能家居设备需要从米家APP中添加。所以，这两个APP提前下载注册好。这里重点说下Blinker APP。</p><ul><li>从官网下载Blinker，支持安卓和苹果版本，选择你喜欢的<a href="https://www.diandeng.tech/doc/app-download" target="_blank" rel="noopener">对应下载</a>，并进行注册。</li><li>点击添加设备，选择Diy设备中的Arduino，选择WiFi接入。会得到唯一的密钥，这个很重要，后面需要在代码中添加。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402174147.jpg" alt="添加设备"></p><ul><li>返回设备列表页，点击添加的设备图标进入设备控制面板。可点击右上角进行编辑，这里的设备名最好用中文，后面用小爱进行控制的时候，你对它说英文，它可能听不懂哈。</li></ul><h3 id="3-软件部分"><a href="#3-软件部分" class="headerlink" title="3. 软件部分"></a>3. 软件部分</h3><ol><li>安装ESP8266开发板扩展</li></ol><ul><li>启动Arduino IDE，单击「文件」—「首选项」，在附加开发板管理网址中输入如下网址：</li></ul><pre><code>http://arduino.esp8266.com/stable/package_esp8266com_index.json</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402174146.jpg" alt="添加开发板网址"></p><ul><li>单击「工具」—「开发板」—「开发板管理器」，在搜索栏输入”esp8266”，找到开发板进行安装，如下图安装完成。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402174143.jpg" alt="安装8266开发板扩展"></p><p>这个过程如果你网络不够科学的话，可能无法完成，官方提供了离线安装方式，<a href="https://www.arduino.cn/thread-76029-1-1.html" target="_blank" rel="noopener">可点击查看</a>。</p><ol start="2"><li>安装blinker Arduino库</li></ol><p><a href="https://github.com/blinker-iot/blinker-library/archive/master.zip" target="_blank" rel="noopener">点击下载库</a>，将下载好的blinker库解压到 我的电脑&gt;文档&gt;Arduino&gt;libraries 文件夹中。</p><ol start="3"><li>程序下载</li></ol><p>Blinker官方提供了小爱同学的接入流程，以RGB灯的控制为例，介绍了小爱同学的各操作接口，具体可参照<a href="https://www.diandeng.tech/doc/xiaoai" target="_blank" rel="noopener">官方介绍</a>。</p><p>我在这里做了简化，只用来控制灯的亮灭，只用了电源类操作接口和设备查询接口。其实就是实现两个回调函数，当接收到小爱同学的命令，会对应进入回调函数去操作硬件。</p><p>代码如下，代码中的auth、ssid、pswd要填入实际的值。</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> BLINKER_WIFI</span><span class="token macro property">#<span class="token directive keyword">define</span> BLINKER_MIOT_LIGHT</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Blinker.h></span></span><span class="token keyword">char</span> auth<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Your Device Secret Key"</span><span class="token punctuation">;</span><span class="token keyword">char</span> ssid<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Your WiFi network SSID or name"</span><span class="token punctuation">;</span><span class="token keyword">char</span> pswd<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Your WiFi network WPA password or WEP key"</span><span class="token punctuation">;</span>bool ledState<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">dataRead</span><span class="token punctuation">(</span><span class="token keyword">const</span> String <span class="token operator">&amp;</span> data<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">BLINKER_LOG</span><span class="token punctuation">(</span><span class="token string">"Blinker readString: "</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>  uint32_t BlinkerTime <span class="token operator">=</span> <span class="token function">millis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Blinker<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"millis"</span><span class="token punctuation">,</span> BlinkerTime<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">miotPowerState</span><span class="token punctuation">(</span><span class="token keyword">const</span> String <span class="token operator">&amp;</span> state<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">BLINKER_LOG</span><span class="token punctuation">(</span><span class="token string">"need set power state: "</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> BLINKER_CMD_ON<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>LED_BUILTIN<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    BlinkerMIOT<span class="token punctuation">.</span><span class="token function">powerState</span><span class="token punctuation">(</span><span class="token string">"on"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    BlinkerMIOT<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ledState <span class="token operator">=</span> true<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> BLINKER_CMD_OFF<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>LED_BUILTIN<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>    BlinkerMIOT<span class="token punctuation">.</span><span class="token function">powerState</span><span class="token punctuation">(</span><span class="token string">"off"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    BlinkerMIOT<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ledState <span class="token operator">=</span> false<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">miotQuery</span><span class="token punctuation">(</span>int32_t queryCode<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">BLINKER_LOG</span><span class="token punctuation">(</span><span class="token string">"MIOT Query codes: "</span><span class="token punctuation">,</span> queryCode<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>queryCode<span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">case</span> BLINKER_CMD_QUERY_POWERSTATE_NUMBER <span class="token punctuation">:</span>      <span class="token function">BLINKER_LOG</span><span class="token punctuation">(</span><span class="token string">"MIOT Query Power State"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      BlinkerMIOT<span class="token punctuation">.</span><span class="token function">powerState</span><span class="token punctuation">(</span>ledState <span class="token operator">?</span> <span class="token string">"on"</span> <span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      BlinkerMIOT<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">default</span> <span class="token punctuation">:</span>      BlinkerMIOT<span class="token punctuation">.</span><span class="token function">powerState</span><span class="token punctuation">(</span>ledState <span class="token operator">?</span> <span class="token string">"on"</span> <span class="token punctuation">:</span> <span class="token string">"off"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      BlinkerMIOT<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  BLINKER_DEBUG<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>Serial<span class="token punctuation">)</span><span class="token punctuation">;</span>  BLINKER_DEBUG<span class="token punctuation">.</span><span class="token function">debugAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>LED_BUILTIN<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>LED_BUILTIN<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  Blinker<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>auth<span class="token punctuation">,</span> ssid<span class="token punctuation">,</span> pswd<span class="token punctuation">)</span><span class="token punctuation">;</span>  Blinker<span class="token punctuation">.</span><span class="token function">attachData</span><span class="token punctuation">(</span>dataRead<span class="token punctuation">)</span><span class="token punctuation">;</span>  BlinkerMIOT<span class="token punctuation">.</span><span class="token function">attachPowerState</span><span class="token punctuation">(</span>miotPowerState<span class="token punctuation">)</span><span class="token punctuation">;</span>  BlinkerMIOT<span class="token punctuation">.</span><span class="token function">attachQuery</span><span class="token punctuation">(</span>miotQuery<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  Blinker<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>选择开发板类型和实际端口号，进行程序下载。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402174140.jpg" alt="选择8266开发板"></p><h3 id="4-绑定小爱"><a href="#4-绑定小爱" class="headerlink" title="4. 绑定小爱"></a>4. 绑定小爱</h3><ul><li>下载好程序后，复位开发板，然后在Blinker APP中会看到添加的设备已经现在在线了。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402174141.jpg" alt="在线设备"></p><ul><li>进入米家APP，点击「我的」—「其他平台设备」，添加点灯科技，进入后，点击同步设备，就会看到在Blinker中创建的设备。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402174148.jpg" alt="添加同步设备"></p><ul><li>前面绑定成功后，小爱同学中就会出现绑定的设备了。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402174145.jpg" alt="绑定成功"></p><p>试着对小爱说：“打开灯”、“关闭灯”、“灯的状态”，可能网络不好会有些延迟，不过想要的控制已经实现了。你也可以尝试去控制些别的设备了。 </p><hr><p>关注公众号「TonyCode」，后台回复“小爱”，获取文中代码及文件。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ESP8266 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> WiFi </tag>
            
            <tag> Blinker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇18—MPU6050数据3D展示</title>
      <link href="/posts/cf38.html"/>
      <url>/posts/cf38.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401234801.jpg" alt=""></p><p>对MPU6050姿态解算得到欧拉角后，就可以应用于四轴等对姿态进行控制了。为了更直观的理解三个欧拉角，本篇我们使用Processing软件与Arduino进行交互，将MPU6050数据进行3D建模展示。</p><h2 id="1-Processing介绍"><a href="#1-Processing介绍" class="headerlink" title="1. Processing介绍"></a>1. Processing介绍</h2><p>Processing是一种文本编程语言，主要用于处理可视化数据，并可以将数据呈现为2D或3D模型 。它以Java语言为基础，并且做了扩展和延伸，将计算机编程和艺术创作完美结合，将代码转换成千变万化的图像。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401234833.jpg" alt="Processing"></p><p>对于电子爱好者来说，我们以单片机、Arduino等MCU为主的嵌入式应用很难将数据进行直观的展示，通过C#、QT等来开发PC机上的可视化软件又比较复杂，而通过Processing这一开源平台可简单方便的实现互动。</p><p>在这里我们不对Processing进行展开讲解，如读者对其感兴趣可关注后续系列教程笔记。</p><h2 id="2-Prosessing软件及其库安装"><a href="#2-Prosessing软件及其库安装" class="headerlink" title="2. Prosessing软件及其库安装"></a>2. Prosessing软件及其库安装</h2><p>我们可以登录<a href="https://processing.org/" target="_blank" rel="noopener">Processing官网</a>进行软件下载，本文写作时，最新版本为3.5.4。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401234912.jpg" alt="软件下载"></p><p>本文使用Windows-64bit版本，另外还需要安装”toxiclibs”库。为方便大家使用，已经将资源进行了整理，可在文末获取。</p><p>将下载的Processing压缩包进行解压，双击可执行文件即可运行软件。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401234925.jpg" alt="安装Processing"></p><p>在软件运行后，会在”C:\Users\Tony\Documents"目录下生成Processing文件夹，其中”Tony”为电脑用户名。将下载的库文件”toxiclibs-complete-0020.zip”进行解压，将解压文件拷贝到该目录下的libraries文件夹，即可完成库安装。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401234937.jpg" alt="安装库文件"></p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>MPU6050传感器模块</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><ol><li>根据原理图搭建电路图。</li></ol><p>MPU6050传感器模块的VCC、GND分别连接开发板的3.3V、GND，传感器的SDA、SCL引脚连接开发板A4、A5引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401234948.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401234958.jpg" alt="实物连接图"></p><ol start="2"><li>启动Arduino IDE，点击「文件」—「示例」，在示例中找到上一篇安装的MPU6050驱动库示例「MPU6050_DMP6」。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401235014.jpg" alt="打开示例文件"></p><ol start="3"><li>对代码进行简单修改，将代码103行屏蔽掉，打开120行宏定义。选择开发板及端口号，上传程序。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401235030.jpg" alt="修改代码"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401235040.jpg" alt="程序下载"></p><ol start="4"><li>启动Processing，点击「文件」—「打开」，打开MPU6050驱动库MPUTeapot文件夹下MPUTeapot.pde。文件路径为”C:\Users\Tony\Documents\Arduino\libraries\MPU6050\examples\MPU6050_DMP6\Processing\MPUTeapot”,其中”Tony”为电脑用户名。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401235052.jpg" alt="打开Processing程序"></p><ol start="5"><li>屏蔽代码71行，然后在74行修改添加当前Arduino开发板端口号，例如我的是COM18，然后点击运行。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401235124.jpg" alt="运行Processing"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>运行Processing后，会出现小飞机模型，晃动MPU6050，小飞机会在3D坐标中运动。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401235152.gif" alt="实验现象"></p><hr><p>关注公众号「TonyCode」，后台回复“3D”，获取文中代码及文件。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200402171314.jpg" alt="扫码关注"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
            <tag> Processing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇17—MPU6050姿态解算</title>
      <link href="/posts/b817.html"/>
      <url>/posts/b817.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401231806.jpg" alt=""></p><p>对于大多数MPU6050的应用来说，获取到的原始数据并没有多大用处，我们需要对原始数据进行姿态融合解算，最终得到姿态数据，也就是三个欧拉角：航向角(yaw)、横滚角(roll)和俯仰角(pitch)。</p><p>MPU6050内部自带数字运动处理器(DMP)硬件加速引擎，配合运动驱动库直接输出四元数，进而很方便的计算出欧拉角，大大降低了主控MCU的负担。本篇使用MPU6050的驱动库来获取姿态数据。</p><h2 id="1-MPU6050驱动库安装"><a href="#1-MPU6050驱动库安装" class="headerlink" title="1. MPU6050驱动库安装"></a>1. MPU6050驱动库安装</h2><p>MPU6050的驱动库有很多，我们可以在IDE中单击「项目」—「加载库」—「管理库」，在搜索栏输入”6050”，可以看到不同的驱动库。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401231810.jpg" alt="多种驱动库"></p><p>本篇我们使用的由国外大牛Jeff Rowberg开发的库并没有在列表中，需要下载后导入到Arduino。点击跳转到<a href="https://github.com/jrowberg/i2cdevlib" target="_blank" rel="noopener">Github</a>下载。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401231804.jpg" alt="下载库文件"></p><p>下载到的库文件其实是多种设备的IIC驱动库，我们这里只需要两个文件夹下的文件。解压后，进入”Arduino”文件夹，里面的”I2Cdev”和”MPU6050”就是我们需要的文件。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401231805.jpg" alt="选择库文件"></p><p>找到Arduino的libraries文件路径，Windows下路径为”C:\Users\Tony\Documents\Arduino\libraries”，修改“Tony”为你的电脑用户名。我们拷贝这两个文件夹到该路径下，至此库文件安装完成。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401231809.jpg" alt="拷贝库文件"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>MPU6050传感器模块</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>MPU6050传感器模块的VCC、GND分别连接开发板的3.3V、GND，传感器的SDA、SCL引脚连接开发板A4、A5引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401231811.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401231808.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   DMP   MPU6050姿态解算*/</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"I2Cdev.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"MPU6050_6Axis_MotionApps20.h"</span></span>MPU6050 mpu<span class="token punctuation">;</span>uint8_t fifoBuffer<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span>Quaternion q<span class="token punctuation">;</span>VectorFloat gravity<span class="token punctuation">;</span><span class="token keyword">float</span> ypr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">115200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  mpu<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  mpu<span class="token punctuation">.</span><span class="token function">dmpInitialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  mpu<span class="token punctuation">.</span><span class="token function">CalibrateAccel</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  mpu<span class="token punctuation">.</span><span class="token function">CalibrateGyro</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  mpu<span class="token punctuation">.</span><span class="token function">PrintActiveOffsets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  mpu<span class="token punctuation">.</span><span class="token function">setDMPEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>mpu<span class="token punctuation">.</span><span class="token function">dmpGetCurrentFIFOPacket</span><span class="token punctuation">(</span>fifoBuffer<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    mpu<span class="token punctuation">.</span><span class="token function">dmpGetQuaternion</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>q<span class="token punctuation">,</span> fifoBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>    mpu<span class="token punctuation">.</span><span class="token function">dmpGetGravity</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>gravity<span class="token punctuation">,</span> <span class="token operator">&amp;</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>    mpu<span class="token punctuation">.</span><span class="token function">dmpGetYawPitchRoll</span><span class="token punctuation">(</span>ypr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>q<span class="token punctuation">,</span> <span class="token operator">&amp;</span>gravity<span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"ypr\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>ypr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">180</span> <span class="token operator">/</span> M_PI<span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>ypr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">180</span> <span class="token operator">/</span> M_PI<span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"\t"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ypr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">180</span> <span class="token operator">/</span> M_PI<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401231807.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>打开串口监视器，波特率设置成与程序中相一致的115200。监视器中输出三个欧拉角数据，移动MPU6050，数据发生变化。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401231812.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇16—六轴姿态MPU6050</title>
      <link href="/posts/96d9.html"/>
      <url>/posts/96d9.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401230522.jpg" alt=""></p><p>惯性测量单元「Inertial measurement unit，简称 IMU」可以帮助我们在三维空间中获取物体当前三维位置的值，这些值可以用来帮助我们确定物体的精确位置，例如检测智能手机的水平或倾斜状态或是使用IMU传感器来追踪运动状态等。IMU传感器在汽车、自平衡机器人、四轴飞行器、惯性导航等设备上广泛应用。</p><p>六轴姿态传感器MPU6050是IMU传感器系列的一种，本篇介绍如何驱动其获取原始数据。</p><h2 id="1-MPU6050传感器介绍"><a href="#1-MPU6050传感器介绍" class="headerlink" title="1. MPU6050传感器介绍"></a>1. MPU6050传感器介绍</h2><p>IMU传感器通常包含两个或多个功能，按优先级分别是加速计、陀螺仪、磁力计和测高仪。MPU6050传感器采用单芯片封装，将一个加速度计、一个陀螺仪和一个温度传感器集成在一起，提供六轴姿态数值输出。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401230550.jpg" alt="MPU6050"></p><p><strong>主要参数</strong></p><ul><li>电压：3-5V</li><li>通讯：标准IIC通讯协议</li><li>16Bit AD转换器</li><li>数字温度传感器</li><li>集成数字运动处理器(DMP)</li><li>预留接口可用于与磁力计等其他IIC设备通讯</li></ul><p><strong>引脚说明</strong></p><ul><li>VCC：电源</li><li>GND：地</li><li>SCL：IIC通讯时钟引脚</li><li>SDA：IIC通讯数据引脚</li><li>XDA：外接IIC设备数据引脚</li><li>XCL：外接IIC设备时钟引脚</li><li>ADO：IIC从地址LSB</li><li>INT：用于指示数据准备就绪的中断引脚</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401230551.jpg" alt="MPU6050引脚"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>MPU6050传感器模块</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>MPU6050传感器模块的VCC、GND分别连接开发板的3.3V、GND，传感器的SDA、SCL引脚连接开发板A4、A5引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401230529.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401230530.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;Wire.h></span></span><span class="token keyword">const</span> <span class="token keyword">int</span> MPU6050_addr <span class="token operator">=</span> <span class="token number">0x68</span><span class="token punctuation">;</span>int16_t AccX<span class="token punctuation">,</span> AccY<span class="token punctuation">,</span> AccZ<span class="token punctuation">,</span> Temp<span class="token punctuation">,</span> GyroX<span class="token punctuation">,</span> GyroY<span class="token punctuation">,</span> GyroZ<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Wire<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">beginTransmission</span><span class="token punctuation">(</span>MPU6050_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">0x6B</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">endTransmission</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Wire<span class="token punctuation">.</span><span class="token function">beginTransmission</span><span class="token punctuation">(</span>MPU6050_addr<span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">0x3B</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">endTransmission</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">requestFrom</span><span class="token punctuation">(</span>MPU6050_addr<span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> true<span class="token punctuation">)</span><span class="token punctuation">;</span>  AccX <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span> <span class="token operator">|</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  AccY <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span> <span class="token operator">|</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  AccZ <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span> <span class="token operator">|</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Temp <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span> <span class="token operator">|</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  GyroX <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span> <span class="token operator">|</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  GyroY <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span> <span class="token operator">|</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  GyroZ <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span> <span class="token operator">|</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"AccX = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>AccX<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">" || AccY = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>AccY<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">" || AccZ = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>AccZ<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">" || GyroX = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>GyroX<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">" || GyroY = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>GyroY<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">" || GyroZ = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>GyroZ<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">" || Temp = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Temp <span class="token operator">/</span> <span class="token number">340.00</span> <span class="token operator">+</span> <span class="token number">36.53</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401230549.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>打开串口监视器，波特率设置成与程序中相一致的9600。监视器中数据会随着传感器的角度变化而变化。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401230531.gif" alt="实验现象"></p><h2 id="5-程序分析"><a href="#5-程序分析" class="headerlink" title="5. 程序分析"></a>5. 程序分析</h2><p>程序中使用了通用IIC库「Wire」进行驱动，按照数据手册从指定寄存器中获取数据，注意要把两个字节组合得到16Bit的原始数据。当然MPU6050也有很多驱动库，将IIC通讯过程进一步封装。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇15—摇杆操作OLED多级菜单</title>
      <link href="/posts/6264.html"/>
      <url>/posts/6264.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401225852.jpg" alt=""></p><p>随着越来越多的人机交互需求，带有屏幕的嵌入式设备需要展示的信息也越来越多，多种菜单随着按键输入进行各种深入、各种切换操作。如何方便的管理不同菜单之间的切换操作呢？本篇通过实验来介绍多级菜单的实现思路。</p><h2 id="1-多级菜单介绍"><a href="#1-多级菜单介绍" class="headerlink" title="1. 多级菜单介绍"></a>1. 多级菜单介绍</h2><p>在各种屏幕操作中，多级菜单其实是一种思路或者说是一种固定的编程框架。简单来说就是当按键触发时，根据按键定义从数组中取出当前按键需要跳转的界面索引，然后根据索引去执行响应的界面函数。</p><h2 id="2-具体实现"><a href="#2-具体实现" class="headerlink" title="2. 具体实现"></a>2. 具体实现</h2><h3 id="1-首先，我们要定义一个结构体，结构体成员变量一般包括界面索引号、界面函数指针和与实际按键对应的变量，用来存储按键表示的索引号。其中，索引号与界面函数指针是对应的。"><a href="#1-首先，我们要定义一个结构体，结构体成员变量一般包括界面索引号、界面函数指针和与实际按键对应的变量，用来存储按键表示的索引号。其中，索引号与界面函数指针是对应的。" class="headerlink" title="1. 首先，我们要定义一个结构体，结构体成员变量一般包括界面索引号、界面函数指针和与实际按键对应的变量，用来存储按键表示的索引号。其中，索引号与界面函数指针是对应的。"></a>1. 首先，我们要定义一个结构体，结构体成员变量一般包括界面索引号、界面函数指针和与实际按键对应的变量，用来存储按键表示的索引号。其中，索引号与界面函数指针是对应的。</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span><span class="token punctuation">{</span>  <span class="token keyword">unsigned</span> <span class="token keyword">char</span> index<span class="token punctuation">;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">char</span> up<span class="token punctuation">;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">char</span> down<span class="token punctuation">;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">char</span> left<span class="token punctuation">;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">char</span> right<span class="token punctuation">;</span>  <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>operation<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> KEY_TABLE<span class="token punctuation">;</span></code></pre><p>本实验中定义了四个按键，故定义了up、down、left、right四个按键变量。</p><h3 id="2-使用定义的结构体类型来定义一个结构体数组，有多少个界面，数组的元素个数就是多少。"><a href="#2-使用定义的结构体类型来定义一个结构体数组，有多少个界面，数组的元素个数就是多少。" class="headerlink" title="2. 使用定义的结构体类型来定义一个结构体数组，有多少个界面，数组的元素个数就是多少。"></a>2. 使用定义的结构体类型来定义一个结构体数组，有多少个界面，数组的元素个数就是多少。</h3><pre class=" language-c"><code class="language-c">KEY_TABLE table<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu11<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu12<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu21<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu22<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu23<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu31<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu32<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu33<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu34<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>本实验中定义了9个界面，所以如上数组元素有9个，其中界面索引号从0到8，分别对应其界面函数指针。本实验中一级菜单有2个，二级菜单有3个，三级菜单有4个。</p><h3 id="3-确定各按键按下需要跳转的界面索引。这一步骤确定了各界面之间的切换关系，非常重要。"><a href="#3-确定各按键按下需要跳转的界面索引。这一步骤确定了各界面之间的切换关系，非常重要。" class="headerlink" title="3. 确定各按键按下需要跳转的界面索引。这一步骤确定了各界面之间的切换关系，非常重要。"></a>3. 确定各按键按下需要跳转的界面索引。这一步骤确定了各界面之间的切换关系，非常重要。</h3><p>在此之前可以通过草图来整理菜单之间切换关系，如下所示为本实验9个界面之间的关联图。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401225856.jpg" alt="多级菜单结构"></p><p>举几个例子：</p><p>在index为0，即menu11界面下,确定{0, 0, 0, 0, 0, (*menu11)}中四个按键变量的值：</p><ul><li>当按下up键时，显示menu11界面，即index为0的界面，那么此时up=0；</li><li>当按下down键时，显示menu12界面，即index为1的界面，那么此时down=1；</li><li>当按下left键时，显示menu11界面，即index为0的界面，那么此时down=0；</li><li>当按下right键时，显示menu21界面，即index为2的界面，那么此时down=2；</li></ul><p>故得到{0, 0, 1, 0, 2, (*menu11)}</p><p>在index为5，即menu31界面下,确定{5, 0, 0, 0, 0, (*menu31)}中四个按键变量的值：</p><ul><li>当按下up键时，显示menu31界面，即index为5的界面，那么此时up=5；</li><li>当按下down键时，显示menu32界面，即index为6的界面，那么此时down=6；</li><li>当按下left键时，显示menu21界面，即index为2的界面，那么此时down=2；</li><li>当按下right键时，显示menu31界面，即index为5的界面，那么此时down=5；</li></ul><p>故得到{5, 5, 6, 2, 5, (*menu31)}</p><p>各个界面之间的跳转关系根据实际的需求进行确立，如下为本实验中完整的结构体数组变量赋值情况。</p><pre class=" language-c"><code class="language-c">KEY_TABLE table<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu11<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu12<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu21<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu22<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu23<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu31<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu32<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu33<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span>menu34<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><h3 id="4-根据实际按键返回值对应的功能，获取按键对应的界面索引号，然后根据索引号找到并执行对应的界面函数。"><a href="#4-根据实际按键返回值对应的功能，获取按键对应的界面索引号，然后根据索引号找到并执行对应的界面函数。" class="headerlink" title="4. 根据实际按键返回值对应的功能，获取按键对应的界面索引号，然后根据索引号找到并执行对应的界面函数。"></a>4. 根据实际按键返回值对应的功能，获取按键对应的界面索引号，然后根据索引号找到并执行对应的界面函数。</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">switch</span> <span class="token punctuation">(</span>keyValue<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//获取按键对应序号</span>    <span class="token punctuation">{</span>      <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span> funIndex <span class="token operator">=</span> table<span class="token punctuation">[</span>funIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>right<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span> funIndex <span class="token operator">=</span> table<span class="token punctuation">[</span>funIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>left<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span> funIndex <span class="token operator">=</span> table<span class="token punctuation">[</span>funIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>down<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span> funIndex <span class="token operator">=</span> table<span class="token punctuation">[</span>funIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>up<span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>current <span class="token operator">=</span> table<span class="token punctuation">[</span>funIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>operation<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//根据需要获取对应需要执行的函数</span><span class="token punctuation">(</span><span class="token operator">*</span>current<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//执行获取到的函数</span></code></pre><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>双轴按键摇杆模块</li><li>OLED显示屏</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>OLED屏的VCC、GND分别连接开发板的3.3V、GND，OLED屏的SDA和SCL分别连接开发板的A4和A5。双轴按键摇杆模块的VCC、GND分别连接开发板的5V、GND，模块的X轴输出、Y轴输出分别连接开发板的模拟引脚A0、A1。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401225853.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401225855.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝代码替换自动生成的代码并进行保存。</h3><p>由于代码较长，完整代码可在文末获取。</p><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401225854.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>多界面切换效果：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401225857.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 菜单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇14—摇杆按键操作OLED</title>
      <link href="/posts/5765.html"/>
      <url>/posts/5765.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401225500.jpg" alt=""></p><p>摇杆在很多应用场合被用来替代轻触按键，不但操作上方便，而且一个摇杆可替代多个按键，这使得电路设计得到简化。本篇演示如何将摇杆扭转的四个方向作为四个按键来操作OLED显示。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>双轴按键摇杆模块</li><li>OLED显示屏</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>OLED屏的VCC、GND分别连接开发板的3.3V、GND，OLED屏的SDA和SCL分别连接开发板的A4和A5。双轴按键摇杆模块的VCC、GND分别连接开发板的5V、GND，模块的X轴输出、Y轴输出分别连接开发板的模拟引脚A0、A1。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401225502.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401225501.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   OLED_Key   摇杆按键操作OLED*/</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> OLED_RESET     4</span>Adafruit_SSD1306 <span class="token function">display</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span> OLED_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> pinX  A0</span><span class="token macro property">#<span class="token directive keyword">define</span> pinY  A1</span><span class="token keyword">int</span> valueX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> valueY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> keyValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">menu</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> index<span class="token punctuation">)</span><span class="token punctuation">{</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  display<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  display<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--KEY--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    display<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"R:  ["</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    value <span class="token operator">=</span> value <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    display<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"L:  ["</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    value <span class="token operator">=</span> value <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    display<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"D:  ["</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    value <span class="token operator">=</span> value <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    display<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"U:  ["</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    value <span class="token operator">=</span> value <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">>=</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    value <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  display<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//按键扫描函数</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token function">keyScan</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">static</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> keyUp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  valueX <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>pinX<span class="token punctuation">)</span><span class="token punctuation">;</span>  valueY <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>pinY<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>keyUp <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>valueX <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>valueX <span class="token operator">>=</span> <span class="token number">1010</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>valueY <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>valueY <span class="token operator">>=</span> <span class="token number">1010</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    keyUp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>valueX <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>valueX <span class="token operator">>=</span> <span class="token number">1010</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>valueY <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>valueY <span class="token operator">>=</span> <span class="token number">1010</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>valueX <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>valueX <span class="token operator">&lt;</span> <span class="token number">1010</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>valueY <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>valueY <span class="token operator">&lt;</span> <span class="token number">1010</span><span class="token punctuation">)</span><span class="token punctuation">)</span>keyUp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  display<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  display<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体大小</span>  display<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  display<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--KEY--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  keyValue <span class="token operator">=</span> <span class="token function">keyScan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>keyValue <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">menu</span><span class="token punctuation">(</span>keyValue<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401225459.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>扭转摇杆对应显示L、R、U、D四个方向标示以及对应的加减数字显示。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401225503.gif" alt="实验现象"></p><h2 id="4-程序分析"><a href="#4-程序分析" class="headerlink" title="4. 程序分析"></a>4. 程序分析</h2><p>程序中最主要的部分是按键扫描函数，我们分别采集摇杆的X轴和Y轴模拟输入，选取模拟量AD值中的10和1010作为两个临界点，当扭动摇杆采集回的数据小于10或者大于1010，就认为这个轴向上进行了按键触发。</p><p>使用静态变量keyValue保存按键按下状态，只有当模拟量再次进入小于10或者大于1010时才会再次触发一次按键返回。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 摇杆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇13—摇杆控制OLED移动显示</title>
      <link href="/posts/dd68.html"/>
      <url>/posts/dd68.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224947.jpg" alt=""></p><p>很多经典的小游戏，例如贪吃蛇、俄罗斯方块等都是通过按键控制显示于屏幕，当摇杆遇上显示屏，我们可以尝试很多有意思的实验。本篇通过摇杆控制OLED上圆的移动。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>双轴按键摇杆模块</li><li>OLED显示屏</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>OLED屏的VCC、GND分别连接开发板的3.3V、GND，OLED屏的SDA和SCL分别连接开发板的A4和A5。双轴按键摇杆模块的VCC、GND分别连接开发板的5V、GND，模块的X轴输出、Y轴输出分别连接开发板的模拟引脚A0、A1。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224949.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224948.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   OLED_JoyStick   摇杆控制OLED移动显示*/</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> OLED_RESET     4</span>Adafruit_SSD1306 <span class="token function">display</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span> OLED_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> pinX  A0</span><span class="token macro property">#<span class="token directive keyword">define</span> pinY  A1</span><span class="token comment" spellcheck="true">//定义圆心和半径变量</span><span class="token keyword">int</span> xCircle <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> ycircle <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> radius <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  display<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  xCircle <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token function">analogRead</span><span class="token punctuation">(</span>pinX<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1023</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> radius<span class="token punctuation">,</span> <span class="token number">128</span> <span class="token operator">-</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将X轴获取的AD值映射到oled的X显示方向</span>  ycircle <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token function">analogRead</span><span class="token punctuation">(</span>pinY<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1023</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> radius<span class="token punctuation">,</span> <span class="token number">64</span> <span class="token operator">-</span> radius<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将Y轴获取的AD值映射到oled的Y显示方向</span>  display<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//画矩形</span>  display<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span>xCircle<span class="token punctuation">,</span> ycircle <span class="token punctuation">,</span> radius<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//画圆</span>  display<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开显示</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224946.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>扭动摇杆，OLED显示屏上画出的圆跟随移动。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224950.gif" alt="实验现象"></p><h2 id="4-程序分析"><a href="#4-程序分析" class="headerlink" title="4. 程序分析"></a>4. 程序分析</h2><p>程序中使用<strong>drawCircle()</strong>函数通过给定的圆心坐标和圆半径在屏幕上画圆，通过<strong>map()</strong>函数分别将摇杆X、Y轴采集到的模拟量映射到OLED对应的显示坐标中。程序中不断读取摇杆模拟量来画出对应位置的圆。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 摇杆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇12—双轴按键摇杆</title>
      <link href="/posts/a297.html"/>
      <url>/posts/a297.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224504.jpg" alt=""></p><p>摇杆一般在航模、电玩、遥控车、云台等设备上应用广泛，很多带有屏幕的设备也经常使用摇杆作为菜单选择的输入控制。本篇介绍双轴按键摇杆的使用。</p><h2 id="1-双轴按键摇杆介绍"><a href="#1-双轴按键摇杆介绍" class="headerlink" title="1. 双轴按键摇杆介绍"></a>1. 双轴按键摇杆介绍</h2><p>双轴按键摇杆主要由两个10K的电位器和一个按键开关组成，两个电位器随着摇杆扭转角度分别输出X、Y轴上对应的电压值，在Z轴方向上按下摇杆可触发轻触按键。在配套机械结构的作用下，无外力扭动的摇杆初始状态下，两个电位器都处在量程的中间位置。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224502.jpg" alt="摇杆模块"></p><p>不同厂商生产的按键摇杆模块的引脚输出会有所不同，但都会有VCC、GND电源引脚和X、Y、Z输出引脚。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224508.jpg" alt="摇杆接口"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>双轴按键摇杆模块</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>双轴按键摇杆模块的VCC、GND分别连接开发板的5V、GND，模块的X轴输出、Y轴输出分别连接开发板的模拟引脚A0、A1，模块的Z轴输出连接开发板数字引脚2。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224507.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224503.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"> <span class="token comment" spellcheck="true">/* * JoyStick * 双轴按键摇杆 */</span><span class="token macro property">#<span class="token directive keyword">define</span> pinX  A0</span><span class="token macro property">#<span class="token directive keyword">define</span> pinY  A1</span><span class="token macro property">#<span class="token directive keyword">define</span> pinK  2</span><span class="token keyword">int</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>pinK<span class="token punctuation">,</span> INPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  value <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>pinX<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"X: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  value <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>pinY<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">" Y: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  value <span class="token operator">=</span> <span class="token function">digitalRead</span><span class="token punctuation">(</span>pinK<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">" Z: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224505.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>打开串口监视器，波特率设置成与程序中相一致的9600，扭动摇杆，监视器将显示X、Y轴对应的电压对应的AD数值。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401224506.gif" alt="实验现象"></p><p>由于开发板的ADC是10位精度，AD值在[0, 1023]之间，理论上X、Y轴输出中间值512，但由于电位器及结构差异，原点值会有偏差，有些应用中需要进行校准。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 摇杆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇11—烟雾传感器MQ-2</title>
      <link href="/posts/1399.html"/>
      <url>/posts/1399.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401223913.jpg" alt=""></p><p>MQ系列传感器是使用非常广泛的低成本传感器，广泛应用于家庭或工厂的气体泄漏监测装置。本篇介绍MQ家族中的MQ-2烟雾传感器的使用，其他MQ传感器使用都是相类似的。</p><h2 id="1-MQ系列传感器工作原理"><a href="#1-MQ系列传感器工作原理" class="headerlink" title="1. MQ系列传感器工作原理"></a>1. MQ系列传感器工作原理</h2><p>MQ系列传感器使用的敏感材料是活性很高的金属氧化物半导体，传感器加热后，在不同气体浓度中电导率不同。使用简单的电路就可以将电导率的变化转换成与该气体浓度相对应的信号输出了。</p><h2 id="2-烟雾传感器模块介绍"><a href="#2-烟雾传感器模块介绍" class="headerlink" title="2. 烟雾传感器模块介绍"></a>2. 烟雾传感器模块介绍</h2><p>MQ-2传感器对可燃气、烟雾等气体灵敏度高，基于MQ-2的烟雾传感器模块通过电路设计，提供了两种输出方式：</p><ul><li>数字量输出：通过板载电位器设定浓度阈值，当检测到环境气体浓度超过阈值时，通过数字引脚DO输出低电平。</li><li>模拟量输出：浓度越高，AO引脚输出的电压值越高，通过ADC采集的模拟值越高。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401223912.jpg" alt="烟雾传感器模块"></p><p>需要注意的是，传感器通电后，需要预热20秒左右，测量的数据才会稳定。由于传感器工作时需要内部电热丝加热，所以传感器发热属于正常现象。</p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>MQ-2烟雾传感器模块</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>烟雾传感器模块的VCC、GND分别连接到开发板的5V、GND。模块的AO引脚连接到开发板的模拟引脚A0，模块的DO引脚连接到开发板的数字引脚2。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401223910.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401223915.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   MQ-2烟雾传感器的使用*/</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> Sensor_AO A0</span><span class="token macro property">#<span class="token directive keyword">define</span> Sensor_DO 2</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> sensorValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>Sensor_DO<span class="token punctuation">,</span> INPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  sensorValue <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>Sensor_AO<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Sensor AD Value = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sensorValue<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">digitalRead</span><span class="token punctuation">(</span>Sensor_DO<span class="token punctuation">)</span> <span class="token operator">==</span> LOW<span class="token punctuation">)</span>  <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Alarm!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401223914.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>打开串口监视器，波特率设置成与程序中相一致的9600。监视器中将显示AO引脚输出电压对应的ADC模拟量，当气体浓度高于设定的阈值时，输出报警提示。我们可以配合使用声光报警器等设备，制作家用烟雾监测仪器。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401223911.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇10—光强传感器控制OLED背光</title>
      <link href="/posts/e71c.html"/>
      <url>/posts/e71c.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401223643.jpg" alt=""></p><p>像手机、平板之类的电子设备，屏幕亮度都能随环境光强度自动调节，其内部使用的是小体积的数字光照传感器。本篇我们使用GY-30光照传感器模块来控制OLED显示屏的背光亮度，使其随环境光自动调节。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>OLED显示屏</li><li>数字光强传感器GY-30模块</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>OLED屏的VCC、GND、SDA、SCL与GY-30模块的VCC、GND、SDA、SCL相对应连接，然后连接到开发板的5V、GND、A4、A5。两个模块都使用了硬件IIC，由于各自地址不同，所以并不会相互影响，这也是IIC通讯协议的优势所在。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401223642.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401223644.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   OLED_BH1750   光照传感器OLED背光控制*/</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;U8g2lib.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span> </span>U8G2_SSD1306_128X64_NONAME_1_HW_I2C <span class="token function">u8g2</span><span class="token punctuation">(</span>U8G2_R0<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* reset=*/</span> U8X8_PIN_NONE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用硬件IIC</span><span class="token keyword">int</span> BH1750address <span class="token operator">=</span> <span class="token number">0x23</span><span class="token punctuation">;</span>byte buff<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>uint16_t val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">char</span> str<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  Wire<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">BH1750_Init</span><span class="token punctuation">(</span>BH1750address<span class="token punctuation">)</span><span class="token punctuation">;</span>  u8g2<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  u8g2<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>u8g2_font_fur20_tf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token function">BH1750_Read</span><span class="token punctuation">(</span>BH1750address<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>buff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">255</span> <span class="token operator">&amp;&amp;</span> buff<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">255</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      val <span class="token operator">=</span> <span class="token number">65535</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      val <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>buff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> buff<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1.2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//芯片手册中规定的数值计算方式</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token function">strcpy</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token function">u8x8_u16toa</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">firstPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">do</span> <span class="token punctuation">{</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">"-Light-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token string">"Lx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">setContrast</span><span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">-</span> <span class="token function">map</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将光照数据进行区间映射，控制OLED背光</span>  <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span> u8g2<span class="token punctuation">.</span><span class="token function">nextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">BH1750_Read</span><span class="token punctuation">(</span><span class="token keyword">int</span> address<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">beginTransmission</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">requestFrom</span><span class="token punctuation">(</span>address<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span>Wire<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// receive one byte</span>    i<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Wire<span class="token punctuation">.</span><span class="token function">endTransmission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> i<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">BH1750_Init</span><span class="token punctuation">(</span><span class="token keyword">int</span> address<span class="token punctuation">)</span><span class="token punctuation">{</span>  Wire<span class="token punctuation">.</span><span class="token function">beginTransmission</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">endTransmission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401223704.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>OLED屏幕显示采集到的环境光强，并且屏幕亮度随环境光强度而自动调节。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401223645.gif" alt="实验现象"></p><h2 id="4-实验分析"><a href="#4-实验分析" class="headerlink" title="4. 实验分析"></a>4. 实验分析</h2><p>在U8g2库中，通过函数<strong>setContrast()</strong>来调节背光亮度，此函数接收0~255之间的数值，数值越大，背光越亮。</p><p>我们通过<strong>map()</strong>函数，截取光照强度的一部分[0, 500]，映射成[0，255]之间的数值。我们希望当光照弱时背光亮一些，光照强时背光暗一些，所以setContrast()函数接收的数值使用255减去实际的光照强度，如下：</p><pre class=" language-c"><code class="language-c">u8g2<span class="token punctuation">.</span><span class="token function">setContrast</span><span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">-</span> <span class="token function">map</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇09—数字光强传感器</title>
      <link href="/posts/f3e0.html"/>
      <url>/posts/f3e0.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401222539.jpg" alt=""></p><p>光敏电阻是常用的光感元件，但是其感应范围比较窄，响应速度慢，且受外界干扰较大。要接收强光时，需要更加精准的数字光照传感器。本篇介绍GY-30模块的使用，其板载BH1750数字光传感器专用IC。</p><h2 id="1-光强传感器介绍"><a href="#1-光强传感器介绍" class="headerlink" title="1. 光强传感器介绍"></a>1. 光强传感器介绍</h2><p>GY-30模块基于BH1750FVI芯片，模块采用IIC通讯方式，内置16bit ADC转换器，可以直接数字输出，光照强度范围：0~65525 lx，勒克斯「lux，通常简写为lx」是照度的国际单位。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401222540.jpg" alt="GY-30模块"></p><h3 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h3><ul><li>内置16Bit ADC转换器。</li><li>IIC通讯协议，直接输出数字量。</li><li>供电：3~5V。</li><li>范围：0~65535lx。</li><li>不区分环境光源，接近视觉灵敏度的分光特性。</li><li>板载通信电平转换。</li></ul><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>数字光强传感器GY-30模块</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>GY-30模块的VCC、GND分别连接开发板的5V、GND，模块的SDA、SCL分别连接开发板的A4、A5引脚，模块的ADD引脚不连接。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401222544.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401222543.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * BH1750 * 数字光照传感器实验 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span> </span><span class="token comment" spellcheck="true">//IIC</span><span class="token keyword">int</span> BH1750address <span class="token operator">=</span> <span class="token number">0x23</span><span class="token punctuation">;</span>byte buff<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>uint16_t val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  Wire<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">BH1750_Init</span><span class="token punctuation">(</span>BH1750address<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token function">BH1750_Read</span><span class="token punctuation">(</span>BH1750address<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>buff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">255</span> <span class="token operator">&amp;&amp;</span> buff<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">255</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      val <span class="token operator">=</span> <span class="token number">65535</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      val <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>buff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> buff<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1.2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//芯片手册中规定的数值计算方式</span>    <span class="token punctuation">}</span>    Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> DEC<span class="token punctuation">)</span><span class="token punctuation">;</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"[lx]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">BH1750_Read</span><span class="token punctuation">(</span><span class="token keyword">int</span> address<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">beginTransmission</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">requestFrom</span><span class="token punctuation">(</span>address<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span>Wire<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    buff<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Wire<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// receive one byte</span>    i<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  Wire<span class="token punctuation">.</span><span class="token function">endTransmission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> i<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">BH1750_Init</span><span class="token punctuation">(</span><span class="token keyword">int</span> address<span class="token punctuation">)</span><span class="token punctuation">{</span>  Wire<span class="token punctuation">.</span><span class="token function">beginTransmission</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Wire<span class="token punctuation">.</span><span class="token function">endTransmission</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401222541.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>打开串口监视器，波特率设置成与程序中相一致的9600。监视器中将显示环境光强度，可以通过遮挡或照射模块来改变光强度。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401222542.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇08—OLED测距显示</title>
      <link href="/posts/4bb0.html"/>
      <url>/posts/4bb0.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401221501.jpg" alt=""></p><p>上篇通过串口打印出了超声波传感器获取的距离数据，本篇将结合之前介绍的OLED显示屏，将获取的距离数据显示在OLED上。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>OLED显示屏</li><li>HC-SR04超声波传感器模块</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>超声波传感器模块的VCC、GND分别连接到开发板的5V、GND。传感器的Trig引脚、Echo引脚分别连接到开发板的数字引脚2、3。OLED屏的VCC和GND分别连接开发板的3.3V和GND，OLED屏的SDA和SCL分别连接开发板A4和A5。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401221420.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401221443.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> OLED_RESET     4</span>Adafruit_SSD1306 <span class="token function">display</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span> OLED_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">define</span> TrigPin 2</span><span class="token macro property">#<span class="token directive keyword">define</span> EchoPin 3</span><span class="token keyword">int</span> Value_cm<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  display<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  display<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体大小</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>TrigPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>EchoPin<span class="token punctuation">,</span> INPUT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>TrigPin<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//低高低电平发一个短时间脉冲去TrigPin</span>  <span class="token function">delayMicroseconds</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>TrigPin<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">delayMicroseconds</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>TrigPin<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>  Value_cm <span class="token operator">=</span> <span class="token keyword">int</span><span class="token punctuation">(</span> <span class="token function">pulseIn</span><span class="token punctuation">(</span>EchoPin<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">17</span> <span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  display<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>Value_cm<span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"cm"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token function">map</span><span class="token punctuation">(</span>Value_cm<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">124</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开显示</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401222229.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>改变遮挡物与超声波传感器的距离，OLED上将显示测量的距离。同时使用map()函数映射了一段距离数据做OLED屏幕上进度条的显示。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401222251.gif" alt="oled显示"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401222250.gif" alt="改变距离"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇07—超声波测距</title>
      <link href="/posts/2659.html"/>
      <url>/posts/2659.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401221107.jpg" alt=""></p><p>超声波是振动频率高于20KHz的机械波，它具有频率高、波长短、绕射现象小、方向性好、能够成为射线而定向传播等特点，在工业、国防、生物医学等方面有广泛应用，本篇介绍利用超声波进行测距。</p><h2 id="1-测距原理"><a href="#1-测距原理" class="headerlink" title="1. 测距原理"></a>1. 测距原理</h2><p>超声波传感器的发射器向某一方向发射超声波，在发射的同时开始计时，超声波在空气中传播，途中碰到障碍物就立即返回来，超声波接收器收到反射波就立即停止计时。根据计时器记录的时间t，声波在空气中的传播速度为340m/s，就可以计算出发射点距障碍物的距离s，即：s=340m/s × t / 2 。这就是所谓的时间差测距法。</p><h2 id="2-超声波传感器介绍"><a href="#2-超声波传感器介绍" class="headerlink" title="2. 超声波传感器介绍"></a>2. 超声波传感器介绍</h2><p>超声波传感器是将超声波信号转换成其他能量信号「通常是电信号」的传感器。HC-SR04是比较常用的超声波传感器模块，广泛应用于机器人测距、小车避障等场合。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401221132.jpg" alt="超声波模块"></p><p><strong>主要参数</strong></p><ul><li>电压：DC5V</li><li>电流：15mA</li><li>频率：40KHz</li><li>感应角度：&lt;15度</li><li>探测距离：2cm—400cm</li><li>精度：3mm</li></ul><p><strong>使用说明</strong></p><ul><li>采用Trig引脚触发测距，给至少10us的高电平信号。</li><li>模块自动发送8个40KHz的方波，自动检测是否有信号返回。</li><li>有信号返回后，通过Echo引脚输出高电平，通过高电平持续时间获取到时间量。</li></ul><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>HC-SR04超声波传感器模块</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>超声波传感器模块的VCC、GND分别连接到开发板的5V、GND。传感器的Trig引脚、Echo引脚分别连接到开发板的数字引脚2、3。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401221124.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401221114.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> TrigPin 2</span><span class="token macro property">#<span class="token directive keyword">define</span> EchoPin 3</span><span class="token keyword">float</span> Value_cm<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>TrigPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>EchoPin<span class="token punctuation">,</span> INPUT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>TrigPin<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//低高低电平发一个短时间脉冲去TrigPin</span>  <span class="token function">delayMicroseconds</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>TrigPin<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delayMicroseconds</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>TrigPin<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>  Value_cm <span class="token operator">=</span> <span class="token keyword">float</span><span class="token punctuation">(</span> <span class="token function">pulseIn</span><span class="token punctuation">(</span>EchoPin<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">17</span> <span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//读取一个引脚的脉冲（HIGH或LOW）。例如，如果value是HIGH，pulseIn()会等待引脚变为HIGH，开始计时，再等待引脚变为LOW并停止计时。</span>  <span class="token comment" spellcheck="true">//接收到的高电平的时间(us)*340m/s/2=接收到高电平的时间(us)*17000cm/1000000us = 接收到高电平的时间*17/1000(cm) </span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>Value_cm<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"cm"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401221131.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>打开串口监视器，波特率设置成与程序中相一致的9600。改变超声波传感器与遮挡物的距离，监视器中将显示对应的距离。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401221115.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派笔记08—Python点亮LED</title>
      <link href="/posts/d5a.html"/>
      <url>/posts/d5a.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401202310.jpg" alt=""></p><p>RPI.GPIO「raspberry-gpio-python」是Python的一个模块，允许你在执行Python脚本的时候轻松访问和控制GPIO，最新发布的树莓派系统已经内置安装了这个库，但是目前还没有支持SPI、IIC、硬件PWM和串口等接口。</p><p>####1. 树莓派中安装python及GPIO库</p><ul><li>先安装python-dev，输入如下指令：</li></ul><pre class=" language-c"><code class="language-c">sudo apt<span class="token operator">-</span>get install python<span class="token operator">-</span>dev</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401202319.jpg" alt="安装python-dev"></p><ul><li><p>由于不可描述的原因，GPIO库每次下载都会连接超时。文末提供了目前官网最新代码压缩包，后续直接解压安装即可。</p></li><li><p>解压我们下载好的压缩包。</p></li></ul><pre class=" language-c"><code class="language-c">tar xvzf RPI<span class="token punctuation">.</span>GPIO<span class="token number">-0.7</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz</code></pre><p>如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401202327.jpg" alt="解压"></p><ul><li>进入解压缩后的目录「cd RPi.GPIO-0.7.0/」，输入如下命令进行启动安装。</li></ul><pre class=" language-c"><code class="language-c">sudo python setup<span class="token punctuation">.</span>py install</code></pre><p>如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401202320.jpg" alt="安装"></p><h4 id="2-硬件连接"><a href="#2-硬件连接" class="headerlink" title="2. 硬件连接"></a>2. 硬件连接</h4><p>LED发光二极管的负极连接到树莓派的GND，LED的正极连接一个220欧的限流电阻分别连接到树莓派的11，13，15，19引脚。</p><p>电路连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401202318.jpg" alt="电路连接图"></p><h3 id="3-编写Python代码实现流水灯"><a href="#3-编写Python代码实现流水灯" class="headerlink" title="3. 编写Python代码实现流水灯"></a>3. 编写Python代码实现流水灯</h3><p>新建一个名为leds.py的文件，内容如下所示：</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># encoding: utf-8</span><span class="token keyword">import</span> RPi<span class="token punctuation">.</span>GPIO <span class="token keyword">as</span> GPIO<span class="token keyword">import</span> time<span class="token comment" spellcheck="true">#BOAED编号方式，基于排针引脚编号</span>pins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">;</span>GPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BOARD<span class="token punctuation">)</span><span class="token keyword">for</span> pin <span class="token keyword">in</span> pins<span class="token punctuation">:</span>    GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span>pin<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>OUT<span class="token punctuation">)</span>    GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>pin<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>LOW<span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> pin <span class="token keyword">in</span> pins<span class="token punctuation">:</span>        GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>pin<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>HIGH<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>        GPIO<span class="token punctuation">.</span>output<span class="token punctuation">(</span>pin<span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>LOW<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span></code></pre><p>若是在windows中编写，需要将文件下载到树莓派中。接着输入如下命令来执行程序：</p><pre class=" language-c"><code class="language-c">sudo python leds<span class="token punctuation">.</span>py</code></pre><p>可以看到LED流动闪烁。通过「Ctrl+C」结束程序。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401202328.gif" alt="流水灯"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派笔记07—wiringPi点亮LED</title>
      <link href="/posts/6d46.html"/>
      <url>/posts/6d46.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201855.jpg" alt=""></p><p>安装完wiringPi库后，我们就可以使用它来操作GPIO了，而点亮发光二极管的实验就如同「Hello World」一样神圣，本篇就在树莓派上驱动LED灯闪烁。</p><h4 id="1-硬件连接"><a href="#1-硬件连接" class="headerlink" title="1. 硬件连接"></a>1. 硬件连接</h4><p>LED发光二极管的负极连接到树莓派的GND，LED的正极连接一个220欧的限流电阻连接到树莓派的11脚。</p><p>电路连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201901.jpg" alt="电路连接图"></p><p>远程登陆到树莓派，在终端中输入「gpio readall」，可获取到引脚对应关系，我们可以看到，树莓派板载排针的11引脚对应的是wiringPi库的0引脚。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201907.jpg" alt="引脚信息"></p><h4 id="2-终端一行代码实现LED灯闪烁"><a href="#2-终端一行代码实现LED灯闪烁" class="headerlink" title="2. 终端一行代码实现LED灯闪烁"></a>2. 终端一行代码实现LED灯闪烁</h4><p>wiringPi库内置了一个gpio函数，该函数可以直接从终端访问GPIO，而无需编写任何代码。在终端中输入「gpio -h」可获取到gpio函数的应用说明：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201904.jpg" alt="gpio帮助"></p><p>我们在终端输入如下命令：</p><pre class=" language-c"><code class="language-c">gpio blink <span class="token number">0</span></code></pre><p>可以看到LED开始闪烁。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201910.gif" alt="闪烁"></p><p>按下键盘上「Ctrl+C」可退出。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201909.jpg" alt="退出"></p><h4 id="4-wiringPi编程实现LED灯闪烁"><a href="#4-wiringPi编程实现LED灯闪烁" class="headerlink" title="4. wiringPi编程实现LED灯闪烁"></a>4. wiringPi编程实现LED灯闪烁</h4><p>新建一个名为blink.c的文件，内容如下所示：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;wiringPi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">wiringPiSetup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pinMode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">digitalWrite</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>若是在windows中编写，需要将文件下载到树莓派中。在文件当前目录下输入gcc指令来编译程序：</p><pre class=" language-c"><code class="language-c">gcc <span class="token operator">-</span>Wall <span class="token operator">-</span>o blink blink<span class="token punctuation">.</span>c <span class="token operator">-</span>lwiringPi</code></pre><p>接着输入如下命令执行编译好的程序：</p><pre class=" language-c"><code class="language-c">sudo <span class="token punctuation">.</span><span class="token operator">/</span>blink</code></pre><p>可以看到LED灯闪烁，我们可以改变延时时间来控制LED灯闪烁频率。通过「Ctrl+C」结束程序。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201908.jpg" alt="运行"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> wiringPi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派笔记06—树莓派GPIO介绍和wiringPi库安装</title>
      <link href="/posts/f7e3.html"/>
      <url>/posts/f7e3.html</url>
      
        <content type="html"><![CDATA[<p>树莓派开发板上提供了大量的GPIO引脚，它们通过40Pin的排针引出，早期版本只有26Pin。除去通用输入输出引脚、5V/3.3V电源和地引脚外，还提供了SPI、UART和IIC接口，新版本的开发板在原有基础上不断进行功能的扩展。</p><p>###1. GPIO编号方式</p><p>树莓派的GPIO端口编号存在三种不同的方式：</p><ul><li>物理「BOARD」编号方式：</li></ul><p>从左到右，从上到下，左边奇数，右边偶数，1-40。这种编号方式的优点是无论开发板版本如何变化，我们的硬件都能正常工作，无需重新连接。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201028.jpg" alt="40pin"></p><ul><li>BCM编号方式：</li></ul><p>指的是板载的博通CPU上的GPIO编号，侧重CPU寄存器。由于CPU有大量的引脚，所以内部分配的引脚编号和板载排针的编号不一致。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201030.jpg" alt="BCM编号"></p><ul><li>wiringPi编号方式：</li></ul><p>侧重实现逻辑，把对外引出的GPIO端口从0开始编号，非常方便程序的编写。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201029.jpg" alt="40Pin对照表"></p><h3 id="2-wiringPi库介绍"><a href="#2-wiringPi库介绍" class="headerlink" title="2. wiringPi库介绍"></a>2. wiringPi库介绍</h3><p>wiringPi是由Gordon用C语言编写的库，起初主要作为BCM2835芯片的GPIO库，而现在已经非常的丰富，除去GPIO库，还包括了IIC库、SPI库、UART库和软件PWM库等。</p><p>wiringPi库非常适合那些具有C基础，在此之前接触过单片机或者嵌入式的开发人群。它的API函数和arduino的非常相似，这也使它受到极大的欢迎。</p><h3 id="3-安装wiringPi"><a href="#3-安装wiringPi" class="headerlink" title="3. 安装wiringPi"></a>3. 安装wiringPi</h3><h4 id="1-通过SSH远程登陆到树莓派，然后输入如下命令，更新树莓派各软件包和依赖到最新版本。"><a href="#1-通过SSH远程登陆到树莓派，然后输入如下命令，更新树莓派各软件包和依赖到最新版本。" class="headerlink" title="1. 通过SSH远程登陆到树莓派，然后输入如下命令，更新树莓派各软件包和依赖到最新版本。"></a>1. 通过SSH远程登陆到树莓派，然后输入如下命令，更新树莓派各软件包和依赖到最新版本。</h4><pre class=" language-c"><code class="language-c">sudo apt<span class="token operator">-</span>get updatesudo apt<span class="token operator">-</span>get upgrade</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201031.jpg" alt="update"></p><h4 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h4><p>wiringPi已经预装在了标准的树莓派系统中，可以输入如下命令进行更新或安装。</p><pre class=" language-c"><code class="language-c">sudo apt<span class="token operator">-</span>get install wiringpi</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201032.jpg" alt="安装wiringPi"></p><h4 id="3-测试"><a href="#3-测试" class="headerlink" title="3. 测试"></a>3. 测试</h4><p>wiringPi包括了一套gpio命令，使用gpio命令可控制树莓派的各个接口。</p><p>输入如下命令，可显示当前wiringPi库版本和当前树莓派开发板的信息。</p><pre class=" language-c"><code class="language-c">gpio <span class="token operator">-</span>v</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201033.jpg" alt="版本"></p><p>输入如下命令，可以获取引脚对应表。</p><pre class=" language-c"><code class="language-c">gpio readall</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401201027.jpg" alt="打印管脚信息"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> wiringPi </tag>
            
            <tag> GPIO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇06—温湿度OLED显示</title>
      <link href="/posts/d8c4.html"/>
      <url>/posts/d8c4.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401220357.jpg" alt=""></p><p>本篇结合温湿度传感器DHT11和OLED，将采集到的温湿度显示到OLED屏幕上。</p><p>DHT11使用上篇介绍的「DHT sensor library」库，OLED使用U8g2库，库安装请参照前面的文章介绍。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>OLED显示屏</li><li>DHT11传感器模块</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>OLED屏的VCC和GND分别连接开发板的3.3V和GND，OLED屏的SDA和SCL分别连接开发板A4和A5。DHT11模块VCC、GND分别连接到开发板的5V、GND，模块的DATA引脚连接开发板数字引脚2。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401220354.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401220355.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;U8g2lib.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"DHT.h"</span></span><span class="token macro property">#<span class="token directive keyword">define</span> DHTPIN  2</span><span class="token macro property">#<span class="token directive keyword">define</span> DHTTYPE DHT11</span><span class="token comment" spellcheck="true">//iic驱动方式</span>U8G2_SSD1306_128X64_NONAME_1_SW_I2C <span class="token function">u8g2</span><span class="token punctuation">(</span>U8G2_R0<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* clock=*/</span> SCL<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* data=*/</span> SDA<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* reset=*/</span> U8X8_PIN_NONE<span class="token punctuation">)</span><span class="token punctuation">;</span>DHT <span class="token function">dht</span><span class="token punctuation">(</span>DHTPIN<span class="token punctuation">,</span> DHTTYPE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  u8g2<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  dht<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">char</span> h_str<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">char</span> t_str<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">float</span> h<span class="token punctuation">;</span><span class="token keyword">float</span> t<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  h <span class="token operator">=</span> dht<span class="token punctuation">.</span><span class="token function">readHumidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//读湿度</span>  t <span class="token operator">=</span> dht<span class="token punctuation">.</span><span class="token function">readTemperature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//读温度(摄氏度)</span>  <span class="token function">strcpy</span><span class="token punctuation">(</span>h_str<span class="token punctuation">,</span> <span class="token function">u8x8_u8toa</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* convert m to a string with two digits */</span>  <span class="token function">strcpy</span><span class="token punctuation">(</span>t_str<span class="token punctuation">,</span> <span class="token function">u8x8_u8toa</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* convert m to a string with two digits */</span>  u8g2<span class="token punctuation">.</span><span class="token function">firstPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">do</span> <span class="token punctuation">{</span>    u8g2<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>u8g2_font_fur20_tf<span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">"T"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> t_str<span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token string">"H"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> h_str<span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span> u8g2<span class="token punctuation">.</span><span class="token function">nextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401220356.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>OLED屏幕刷新显示温湿度。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401220358.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇05—温湿度传感器DHT11</title>
      <link href="/posts/fe24.html"/>
      <url>/posts/fe24.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215814.jpg" alt=""></p><p>DHT11数字温湿度传感器是一款含有已校准数字信号输出的温湿度综合传感器，常用于暖通空调、汽车、除湿器、自动控制等领域。本篇介绍DHT11的驱动，通过串口打印采集到的环境温湿度数据。</p><h2 id="1-DHT11介绍"><a href="#1-DHT11介绍" class="headerlink" title="1. DHT11介绍"></a>1. DHT11介绍</h2><p>DHT11是一款温湿度一体的数字传感器，内部包括一个电阻式测湿元件和一个NTC测温元件，并与一个高性能8位单片机连接。外部只需要简单的电路连接，就能实时采集本地温湿度。DHT11与单片机等控制器采用简单的单总线进行通讯，只需要一个I/O口。传感器内部温湿度数据40Bit一次性传给单片机，数据采用校验和的方式进行校验，有效地保证数据传输的准确性。</p><p>DHT11技术参数如下：</p><ul><li>工作电压：3.3V-5.5V</li><li>工作电流：平均0.5mA</li><li>输出：单总线数字信号</li><li>测量范围：湿度20-95%RH，温度0-50℃</li><li>精度：湿度±5%，温度±2℃</li><li>分辨率：湿度1%，温度1℃</li></ul><p>DHT11的管脚排列，窗孔朝上，从左到右依次为VCC、Dout、NC、GND。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215817.jpg" alt="DHT11管脚"></p><p>DHT11在电路连接中，通常会在数据引脚外加上拉电阻，如下为DHT11模块：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215816.jpg" alt="DHT11模块"></p><h2 id="2-安装驱动库"><a href="#2-安装驱动库" class="headerlink" title="2. 安装驱动库"></a>2. 安装驱动库</h2><p>在Arduino IDE中点击「项目」—「加载库」—「管理库」，输入”dht11”，会看到有很多的库，可根据情况自己选择安装使用。本文选择第二个「DHT sensor library」进行安装。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215819.jpg" alt="安装库"></p><p>要使用「DHT sensor library」，我们还要下载安装「Adafruit_Sensor」,需要注意的是，此库并没有在管理库中找到，我们在Github上直接<a href="https://github.com/adafruit/Adafruit_Sensor" target="_blank" rel="noopener">点击下载</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215815.jpg" alt="下载库"></p><p>下载到压缩包后，在IDE中点击「项目」—「加载库」—「添加一个.ZIP库」，定位到刚才下载的压缩包进行安装。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215822.jpg" alt="添加库"></p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>DHT11传感器模块</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>DHT11的单总线连接非常简单，模块VCC、GND分别连接到开发板的3.3V、GND，模块的DATA引脚连接开发板的任意数字引脚，本文连接数字引脚2。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215820.jpg" alt="电路连接图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215821.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"DHT.h"</span></span><span class="token macro property">#<span class="token directive keyword">define</span> DHTPIN  2</span><span class="token macro property">#<span class="token directive keyword">define</span> DHTTYPE DHT11</span>DHT <span class="token function">dht</span><span class="token punctuation">(</span>DHTPIN<span class="token punctuation">,</span> DHTTYPE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"DHT11 test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  dht<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">float</span> h <span class="token operator">=</span> dht<span class="token punctuation">.</span><span class="token function">readHumidity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//读湿度</span>  <span class="token keyword">float</span> t <span class="token operator">=</span> dht<span class="token punctuation">.</span><span class="token function">readTemperature</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//读温度(摄氏度)</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Humidity:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"% Temperature:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"℃"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215818.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>打开串口监视器，波特率设置成与程序中相一致，可以看到间隔打印采集到的温湿度数据。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215823.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇04—U8g2库驱动OLED</title>
      <link href="/posts/ee7a.html"/>
      <url>/posts/ee7a.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401214739.jpg" alt=""></p><p>OLED显示屏的驱动库非常多，本篇介绍强大的U8g2库，通过使用U8g2库来驱动OLED屏。</p><h2 id="1-U8g2库介绍"><a href="#1-U8g2库介绍" class="headerlink" title="1. U8g2库介绍"></a>1. U8g2库介绍</h2><p>U8g2库是嵌入式设备单色图形库，支持非常多的嵌入式设备平台，如单片机、STM32、Arduino等，支持大部分主流的单色OLED和LCD显示控制器，如我们常见的SSD1306。其包括了多种图形的绘制，支持多种字体。</p><p>官方提供了一些<a href="https://github.com/olikraus/u8g2/wiki/gallery#10-jul-2019-max32620fthr-with-ssd1306" target="_blank" rel="noopener">U8g2库测试图</a>：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401214833.jpg" alt="测试图01"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401214832.jpg" alt="测试图02"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401214834.jpg" alt="测试图03"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401214835.jpg" alt="测试图04"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401214831.jpg" alt="测试图05"></p><h2 id="2-安装U8g2库"><a href="#2-安装U8g2库" class="headerlink" title="2. 安装U8g2库"></a>2. 安装U8g2库</h2><p>在Arduino IDE中点击「项目」—「加载库」—「管理库」，查找选择最新版本进行安装。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215133.jpg" alt="安装u8g2库"></p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>OLED显示屏</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>电路连接与前几篇相同，使用IIC接口两线驱动OLED屏。OLED屏的VCC和GND分别连接开发板的3.3V和GND，OLED屏的SDA和SCL分别连接开发板A4和A5。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215154.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401215158.jpg" alt="实物连接图"></p><h3 id="2-在Arduino-IDE中，点击「文件」—「示例」—「U8g2」-会看到官方库提供了很多的示例程序，我们只需要确定自己屏幕使用的驱动方式和显示控制器，对应打开屏蔽的构造函数。"><a href="#2-在Arduino-IDE中，点击「文件」—「示例」—「U8g2」-会看到官方库提供了很多的示例程序，我们只需要确定自己屏幕使用的驱动方式和显示控制器，对应打开屏蔽的构造函数。" class="headerlink" title="2. 在Arduino IDE中，点击「文件」—「示例」—「U8g2」,会看到官方库提供了很多的示例程序，我们只需要确定自己屏幕使用的驱动方式和显示控制器，对应打开屏蔽的构造函数。"></a>2. 在Arduino IDE中，点击「文件」—「示例」—「U8g2」,会看到官方库提供了很多的示例程序，我们只需要确定自己屏幕使用的驱动方式和显示控制器，对应打开屏蔽的构造函数。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;U8g2lib.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span>U8G2_SSD1306_128X64_NONAME_1_SW_I2C <span class="token function">u8g2</span><span class="token punctuation">(</span>U8G2_R0<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* clock=*/</span> SCL<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* data=*/</span> SDA<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* reset=*/</span> U8X8_PIN_NONE<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre><h3 id="3-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#3-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="3. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>3. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Arduino.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;U8g2lib.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token comment" spellcheck="true">//iic驱动方式</span>U8G2_SSD1306_128X64_NONAME_1_SW_I2C <span class="token function">u8g2</span><span class="token punctuation">(</span>U8G2_R0<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* clock=*/</span> SCL<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* data=*/</span> SDA<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/* reset=*/</span> U8X8_PIN_NONE<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  u8g2<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>uint8_t m <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">char</span> m_str<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token function">strcpy</span><span class="token punctuation">(</span>m_str<span class="token punctuation">,</span> <span class="token function">u8x8_u8toa</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* convert m to a string with two digits */</span>  u8g2<span class="token punctuation">.</span><span class="token function">firstPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">do</span> <span class="token punctuation">{</span>    u8g2<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>u8g2_font_logisoso62_tn<span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token string">"9"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    u8g2<span class="token punctuation">.</span><span class="token function">drawStr</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span>m_str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span> u8g2<span class="token punctuation">.</span><span class="token function">nextPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  m<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> m <span class="token operator">==</span> <span class="token number">60</span> <span class="token punctuation">)</span>    m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="4-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#4-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="4. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>4. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401214401.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>本例程使用的是U8g2的page_buffer中的Clock示例，可以看到时间刷新显示。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401214405.gif" alt="实验现象"></p><h2 id="6-相关函数介绍"><a href="#6-相关函数介绍" class="headerlink" title="6. 相关函数介绍"></a>6. 相关函数介绍</h2><p>U8g2库提供的API函数有很多，这里简单介绍几个比较常用的，更多的介绍可以参考<a href="https://github.com/olikraus/u8g2/wiki/u8g2reference" target="_blank" rel="noopener">官方手册</a>。</p><ul><li>u8g2.begin()：U8g2构造函数。</li><li>u8g2.clean()：清除屏幕显示，清除缓冲区，光标回到原点位置。</li><li>u8g2.setFont()：设置字体。</li><li>u8g2.drawStr()：绘制字符串。</li><li>u8g2.firstPage()/nextPage()：循环刷新显示。 </li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> U8g2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇03—OLED屏图片显示</title>
      <link href="/posts/c0bb.html"/>
      <url>/posts/c0bb.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401213534.jpg" alt=""></p><p>本篇介绍OLED屏图片显示，与字符取模类似，通过取模软件图形模式获取位图数据显示到OLED屏上。</p><h2 id="1-图形取模"><a href="#1-图形取模" class="headerlink" title="1. 图形取模"></a>1. 图形取模</h2><h3 id="1-运行取模软件。点击「模式」，选择「图形模式」。"><a href="#1-运行取模软件。点击「模式」，选择「图形模式」。" class="headerlink" title="1. 运行取模软件。点击「模式」，选择「图形模式」。"></a>1. 运行取模软件。点击「模式」，选择「图形模式」。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401213404.jpg" alt="图形模式"></p><h3 id="2-点击「选项」进行相关配置，如下图所示。"><a href="#2-点击「选项」进行相关配置，如下图所示。" class="headerlink" title="2.  点击「选项」进行相关配置，如下图所示。"></a>2.  点击「选项」进行相关配置，如下图所示。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401213356.jpg" alt="选项配置"></p><h3 id="3-点击「文件」，选择「打开」，打开需要显示的位图，位图宽高限定在128x64之内。点击生成字模或者保存字模，就会得到对应的点阵数组。"><a href="#3-点击「文件」，选择「打开」，打开需要显示的位图，位图宽高限定在128x64之内。点击生成字模或者保存字模，就会得到对应的点阵数组。" class="headerlink" title="3. 点击「文件」，选择「打开」，打开需要显示的位图，位图宽高限定在128x64之内。点击生成字模或者保存字模，就会得到对应的点阵数组。"></a>3. 点击「文件」，选择「打开」，打开需要显示的位图，位图宽高限定在128x64之内。点击生成字模或者保存字模，就会得到对应的点阵数组。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401213533.jpg" alt="打开位图"></p><h3 id="4-我们也可以点击「文件」，选择「新建」，设置宽度128，高度64来新建一张空白图形。左键鼠标可选中方块，右键去除方块。你可以任意涂鸦，最终点击生成字模或者保存字模，获取对应的点阵数组。"><a href="#4-我们也可以点击「文件」，选择「新建」，设置宽度128，高度64来新建一张空白图形。左键鼠标可选中方块，右键去除方块。你可以任意涂鸦，最终点击生成字模或者保存字模，获取对应的点阵数组。" class="headerlink" title="4. 我们也可以点击「文件」，选择「新建」，设置宽度128，高度64来新建一张空白图形。左键鼠标可选中方块，右键去除方块。你可以任意涂鸦，最终点击生成字模或者保存字模，获取对应的点阵数组。"></a>4. 我们也可以点击「文件」，选择「新建」，设置宽度128，高度64来新建一张空白图形。左键鼠标可选中方块，右键去除方块。你可以任意涂鸦，最终点击生成字模或者保存字模，获取对应的点阵数组。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401213403.jpg" alt="新建图形"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401213405.jpg" alt="涂鸦"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>OLED显示屏</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>IIC接口只需要两根线。OLED屏的VCC和GND分别连接开发板的3.3V和GND，OLED屏的SDA和SCL分别连接开发板A4和A5。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401213532.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401212710.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*  OLED显示图片*/</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> OLED_RESET     4</span>Adafruit_SSD1306 <span class="token function">display</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span> OLED_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//取128*64 逐行式 顺向高位在前</span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> PROGMEM pic1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0x9B</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xD1</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xEF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xD1</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0xFB</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0xEF</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xEF</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0xF5</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0xE2</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">,</span> <span class="token number">0x8F</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xA7</span><span class="token punctuation">,</span> <span class="token number">0xF2</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0xDA</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0xD9</span><span class="token punctuation">,</span> <span class="token number">0x8B</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0xBC</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x1D</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xD0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xF1</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> PROGMEM pic2<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xB6</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xDE</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xF2</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0x8F</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0x6E</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0xBC</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0xBA</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x4E</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0xBC</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0xD9</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xD8</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0xD8</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x5E</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0xA0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x4F</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x8F</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  display<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  display<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pic1<span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//画出字符对应点阵数据</span>  display<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开显示</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  display<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pic2<span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//画出字符对应点阵数据</span>  display<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开显示</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401212736.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>OLED屏交替显示位图图片。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401213406.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 位图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇02—OLED屏汉字显示</title>
      <link href="/posts/2f42.html"/>
      <url>/posts/2f42.html</url>
      
        <content type="html"><![CDATA[<p>上篇中我们已经使用驱动库在OLED屏上显示出英文字符，除去数字、字母、符号等，OLED还能显示汉字、图片及任意图形。本篇介绍取模软件的使用，教大家如何在OLED屏上显示汉字。</p><h2 id="1-字模显示原理及取模软件的使用"><a href="#1-字模显示原理及取模软件的使用" class="headerlink" title="1. 字模显示原理及取模软件的使用"></a>1. 字模显示原理及取模软件的使用</h2><p>我们使用的OLED屏是由方形的发光点阵列组成的，分辨率为128x64。英文和数字最小可用8x8像素，汉字最小显示像素为16x16，通常为了显示效果，英文和数字通常使用8x16像素表示。要显示需要的字符只需对应点亮像素区域中对应的发光点即可。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401211717.jpg" alt="字模显示"></p><p>字模一般都是通过取模软件生成的，接下来介绍「PCtoLCD」取模软件的使用：</p><h3 id="1-Windows系统下双击启动软件，点击「模式」，选择「字符模式」，通常默认就是字符模式。"><a href="#1-Windows系统下双击启动软件，点击「模式」，选择「字符模式」，通常默认就是字符模式。" class="headerlink" title="1. Windows系统下双击启动软件，点击「模式」，选择「字符模式」，通常默认就是字符模式。"></a>1. Windows系统下双击启动软件，点击「模式」，选择「字符模式」，通常默认就是字符模式。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401212028.jpg" alt="字符模式"></p><h3 id="2-点击「选项」进行字模配置。通常字模配置要根据程序驱动方式来选择，本篇中我们选择阴码、逐行式、顺向，其他选项如下图所示。"><a href="#2-点击「选项」进行字模配置。通常字模配置要根据程序驱动方式来选择，本篇中我们选择阴码、逐行式、顺向，其他选项如下图所示。" class="headerlink" title="2. 点击「选项」进行字模配置。通常字模配置要根据程序驱动方式来选择，本篇中我们选择阴码、逐行式、顺向，其他选项如下图所示。"></a>2. 点击「选项」进行字模配置。通常字模配置要根据程序驱动方式来选择，本篇中我们选择阴码、逐行式、顺向，其他选项如下图所示。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401212353.jpg" alt="选项配置"></p><h3 id="3-输入汉字。点击生成字模或者保存字模，就会得到对应的点阵数据。"><a href="#3-输入汉字。点击生成字模或者保存字模，就会得到对应的点阵数据。" class="headerlink" title="3. 输入汉字。点击生成字模或者保存字模，就会得到对应的点阵数据。"></a>3. 输入汉字。点击生成字模或者保存字模，就会得到对应的点阵数据。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401212411.jpg" alt="生成字模"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>OLED显示屏</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>IIC接口只需要两根线。OLED屏的VCC和GND分别连接开发板的3.3V和GND，OLED屏的SDA和SCL分别连接开发板A4和A5。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401212647.jpg" alt="电路连接图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401212710.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*  OLED显示汉字*/</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> OLED_RESET     4</span>Adafruit_SSD1306 <span class="token function">display</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span> OLED_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//取16X16汉字字模 逐行式 顺向高位在前</span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> PROGMEM str1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span>  <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*"中",0*/</span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> PROGMEM str2<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span>  <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*"文",1*/</span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> PROGMEM str3<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span>  <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*"显",2*/</span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span> PROGMEM str4<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>  <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*"示",3*/</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  display<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  display<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体大小</span>  display<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  display<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-TonyCode-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出字符</span>  display<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> str1<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//画出字符对应点阵数据</span>  display<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> str2<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//画出字符对应点阵数据</span>  display<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> str3<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//画出字符对应点阵数据</span>  display<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> str4<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//画出字符对应点阵数据</span>  display<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开显示                </span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401212736.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>OLED显示出对应中文。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401212806.jpg" alt="1616字模"></p><h2 id="5-实验分析"><a href="#5-实验分析" class="headerlink" title="5. 实验分析"></a>5. 实验分析</h2><p>程序中我们使用了图像库「Adafruit_GFX」中的drawBitmap()函数，函数参数分别输入了要显示的坐标，字符数据源，字符的宽高，最后参数由于我们的OLED是单色的，默认为1。</p><p>我们可以选择不同的字体，也可以使用不同像素获取不同大小的字符，如下图显示的是32x32像素的汉字，注意drawBitmap()函数中对应字符宽高需要对应。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401212805.jpg" alt="3232字模"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
            <tag> 字模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino提高篇01—点亮OLED显示屏</title>
      <link href="/posts/5db8.html"/>
      <url>/posts/5db8.html</url>
      
        <content type="html"><![CDATA[<p>OLED「OrganicLight-Emitting Diode」，有机发光二极管，又称有机发光半导体，是当下非常受欢迎的显示技术。OLED显示屏与传统LCD显示方式不同，它无需背光，每个像素点自发光，体积更小、更轻更薄更省电，而且能做成柔性屏。本篇介绍Arduino下OLED屏的使用。</p><h2 id="1-OLED屏介绍"><a href="#1-OLED屏介绍" class="headerlink" title="1. OLED屏介绍"></a>1. OLED屏介绍</h2><p>OLED屏因其小巧轻薄耗电低等特点，越来越多的应用于嵌入式电子设备中。OLED屏种类不同，显示的颜色也不同，常用的有白色显示、蓝色显示和黄蓝双色显示。屏幕的尺寸和内置驱动芯片也多种多样，常用的驱动接口有SPI和IIC两种。本篇中使用的使一款0.96寸蓝色IIC驱动屏，其内置驱动芯片为SSD1306。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401210958.jpg" alt="0.96寸OLED显示屏"></p><h2 id="2-安装驱动库"><a href="#2-安装驱动库" class="headerlink" title="2. 安装驱动库"></a>2. 安装驱动库</h2><p>OLED显示屏驱动库非常多，本篇我们使用两个库：「Adafruit_SSD1306」和「Adafruit_GFX」。在Arduino IDE中点击「项目」—「加载库」—「管理库」，分别查找选择最新版本进行安装。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401211000.jpg" alt="安装Adafruit_SSD1306库"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401211001.jpg" alt="安装Adafruit_GFX库"></p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3.实验材料"></a>3.实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>OLED显示屏</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4.实验步骤"></a>4.实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>IIC接口只需要两根线。OLED屏的VCC和GND分别连接开发板的3.3V和GND，OLED屏的SDA和SCL分别连接开发板A4和A5。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401210955.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401210956.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * OLED显示 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Wire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_GFX.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Adafruit_SSD1306.h></span></span><span class="token macro property">#<span class="token directive keyword">define</span> OLED_RESET     4</span>Adafruit_SSD1306 <span class="token function">display</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>Wire<span class="token punctuation">,</span>OLED_RESET<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  display<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>SSD1306_SWITCHCAPVCC<span class="token punctuation">,</span><span class="token number">0x3C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>WHITE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开像素点发光</span>  display<span class="token punctuation">.</span><span class="token function">clearDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清屏</span>  display<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置字体大小  </span>  display<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  display<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-TonyCode-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置字体大小  </span>  display<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置显示位置</span>  display<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"OLED TEST"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  display<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 开显示</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401211002.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>较LCD液晶显示屏，OLED的显示效果非常不错，且可视角度更大。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401210959.jpg" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> OLED </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础—两线IIC驱动LCD1602</title>
      <link href="/posts/ade4.html"/>
      <url>/posts/ade4.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181844.jpg" alt=""></p><p>Arduino Uno R3开发板的外部IO口是非常有限的。在驱动LCD1602时，尽管我们的数据线使用了4线，相对于8线方式减少一半，但是在需要外接多种传感器的应用中，4线驱动还是占用了过多的IO。本篇介绍LCD1602的IIC驱动方式，通过IIC转接板使用IIC接口，只占用2个IO口就能驱动LCD1602。</p><h2 id="1-IIC转接板介绍"><a href="#1-IIC转接板介绍" class="headerlink" title="1. IIC转接板介绍"></a>1. IIC转接板介绍</h2><p>IIC「Inter-Integrated Circuit 集成电路总线」是一种串行通信总线，应用于板载低速设备间的通讯。由飞利浦公司开发的这一通讯协议，其目的就是为了简化系统硬件设计，减少设备间的连线。</p><p>IIC串行总线有两根信号线，一根是双向的数字线SDA，另一根是时钟线SCL，每个IIC设备都有自己的地址，IIC总线上多个设备间通过设备地址进行区别。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181845.jpg" alt="IIC转接板"></p><p>上图为本篇使用的IIC转接板，直接焊接于LCD1602。可通过跳线帽设置是否开启背光，通过蓝色电位器调节对比度。IIC设备地址可通过短路A0/A1/A2修改，默认地址0x27。</p><h2 id="2-安装驱动库"><a href="#2-安装驱动库" class="headerlink" title="2. 安装驱动库"></a>2. 安装驱动库</h2><p>在Arduino IDE中点击「项目」—「加载库」—「管理库」，查找「LiquidCrystal_I2C」，选择最新版本进行安装。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181848.jpg" alt="查找库"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181847.jpg" alt="安装库"></p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3.实验材料"></a>3.实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>LCD1602液晶屏带IIC转接板</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4.实验步骤"></a>4.实验步骤</h2><h3 id="1-电路连接。"><a href="#1-电路连接。" class="headerlink" title="1.电路连接。"></a>1.电路连接。</h3><p>IIC转接板的VCC、GND分别连接开发板5V、GND，转接板的SDA、SCL连接开发板A4、A5。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181843.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-C"><code class="language-C">/* * LCD1602 IIC驱动 */#include <Wire.h> #include <LiquidCrystal_I2C.h>LiquidCrystal_I2C lcd(0x27,16,2);  //配置LCD地址及行列void setup(){  lcd.init(); //初始化LCD  lcd.backlight(); //打开背光}void loop(){  lcd.setCursor(2,0);//设置显示位置  lcd.print("LCD1602 IIC");//显示字符数据  lcd.setCursor(0,1);//设置显示位置  lcd.print("JUST USE TWO IO");//显示字符数据}</code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181849.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5.实验现象"></a>5.实验现象</h2><p>可通过转接板蓝色电位器调节对比度，使LCD1602显示清晰。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181846.jpg" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> LCD1602 </tag>
            
            <tag> IIC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇32—LCD1602驱动库的使用</title>
      <link href="/posts/8edb.html"/>
      <url>/posts/8edb.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181419.JPG" alt=""></p><p>本篇介绍液晶驱动库「LiquidCrystal」，通过库来驱动LCD1602刷新显示秒数。</p><h2 id="1-安装库"><a href="#1-安装库" class="headerlink" title="1. 安装库"></a>1. 安装库</h2><p>「LiquidCrystal」是Arduino的液晶驱动库，使用它能很方便的驱动常用液晶显示模块。其详细介绍请参考<a href="https://www.arduino.cc/en/Reference/LiquidCrystal" target="_blank" rel="noopener">官网介绍</a>。</p><p>一般下载的Arduino IDE会自带此库，也可以在管理库中查找添加。在IDE中点击「项目」—「加载库」—「管理库」，查找「LiquidCrystal」，选择最新版本进行安装。目前最新版本为1.0.7。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181425.jpg" alt="安装库"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>LCD1602液晶屏</li><li>16Pin排针</li><li>10K电位器</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>LCD1602的第1、5、16脚接开发板GND；LCD1602第2、15脚接开发板5V；LCD1602的第4、6、11、12、13、14分别连接开发板数字引脚7、6、5、4、3、2；电位器两端引脚分别连接5V和GND，中间引脚连接LCD1602第3引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181433.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181437.JPG" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * LCD1602 * 1602驱动库的使用 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;LiquidCrystal.h></span></span><span class="token keyword">const</span> <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">,</span> en <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> d4 <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> d5 <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> d6 <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> d7 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>LiquidCrystal <span class="token function">lcd</span><span class="token punctuation">(</span>rs<span class="token punctuation">,</span> en<span class="token punctuation">,</span> d4<span class="token punctuation">,</span> d5<span class="token punctuation">,</span> d6<span class="token punctuation">,</span> d7<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  lcd<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  lcd<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  lcd<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  lcd<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  lcd<span class="token punctuation">.</span><span class="token function">setCursor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  lcd<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Second: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  lcd<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">millis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181429.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>LCD1602动态刷新秒数。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401181438.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> LCD1602 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇31—LCD1602液晶显示</title>
      <link href="/posts/655d.html"/>
      <url>/posts/655d.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401174303.JPG" alt=""></p><p>LCD1602也叫1602字符型液晶，是一种专门用来显示字母、数字、符号的点阵型液晶模块，能同时显示16X2即32个字符。本篇我们来认识LCD1602，驱动它显示「Hello World」。</p><h2 id="1-LCD1602介绍"><a href="#1-LCD1602介绍" class="headerlink" title="1. LCD1602介绍"></a>1. LCD1602介绍</h2><p>对于单片机爱好者和电子爱好者来说，或多或少都曾使用过液晶显示模块。它们都是由若干个点阵字符位组成的，根据显示内容可分为1602、12864等。LCD1602可以显示两行字符，每行16个，显示背景也有所不同，有蓝色白字和黄色白字等。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401174320.JPG" alt="LCD1602"></p><p>LCD1602接口说明：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401174323.jpg" alt="管脚说明"></p><p>其中：</p><ul><li>VL(V0)：液晶对比度调整端，用于调节显示对比度，一般接10K电位器进行调整。</li><li>RS：数据/命令选择。高电平表示数据，低电平表示命令。</li><li>RW：读写选择。高电平为读，低电平为写。一般我们写入数据进行显示，所以此引脚接地。</li><li>EN：使能信号，配合数据/命令的读写。</li><li>D0-D7：双向数据端。可以使用8根数据线并行操作，也可以使用4根数据线串行操作。</li></ul><p>关于LCD1602的驱动也非常简单。官方数据手册给出了基本操作时序和初始化设置步骤。本篇我们为了减少线路连接采用4位串行操作方式，一条8位的数据和命令分两次写入1602。</p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>LCD1602液晶屏</li><li>16Pin排针</li><li>10K电位器</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>LCD1602的第1、5、16脚接开发板GND；LCD1602第2、15脚接开发板5V；LCD1602的第4、6、11、12、13、14分别连接开发板数字引脚7、6、5、4、3、2；电位器两端引脚分别连接5V和GND，中间引脚连接LCD1602第3引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401174322.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p>![实物连接图(<a href="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401174319.JPG" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401174319.JPG</a>)</p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * LCD1602_bit4 * LCD1602驱动显示Hello World */</span><span class="token keyword">int</span> LCD1602_RS <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span><span class="token keyword">int</span> LCD1602_EN <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span><span class="token keyword">int</span> DB<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* * LCD写命令 */</span><span class="token keyword">void</span> <span class="token function">LCD_Command_Write</span><span class="token punctuation">(</span><span class="token keyword">int</span> command<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> i<span class="token punctuation">,</span> temp<span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_RS<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_EN<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>  temp <span class="token operator">=</span> command <span class="token operator">&amp;</span> <span class="token number">0xf0</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> DB<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> temp <span class="token operator">&amp;</span> <span class="token number">0x80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    temp <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_EN<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delayMicroseconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_EN<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>  temp <span class="token operator">=</span> <span class="token punctuation">(</span>command <span class="token operator">&amp;</span> <span class="token number">0x0f</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> DB<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> temp <span class="token operator">&amp;</span> <span class="token number">0x80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    temp <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_EN<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delayMicroseconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_EN<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* * LCD写数据 */</span><span class="token keyword">void</span> <span class="token function">LCD_Data_Write</span><span class="token punctuation">(</span><span class="token keyword">int</span> dat<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> temp<span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_RS<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_EN<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>  temp <span class="token operator">=</span> dat <span class="token operator">&amp;</span> <span class="token number">0xf0</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> DB<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> temp <span class="token operator">&amp;</span> <span class="token number">0x80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    temp <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_EN<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delayMicroseconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_EN<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>  temp <span class="token operator">=</span> <span class="token punctuation">(</span>dat <span class="token operator">&amp;</span> <span class="token number">0x0f</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> DB<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> temp <span class="token operator">&amp;</span> <span class="token number">0x80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    temp <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_EN<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delayMicroseconds</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span> LCD1602_EN<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* * LCD设置光标位置 */</span><span class="token keyword">void</span> <span class="token function">LCD_SET_XY</span><span class="token punctuation">(</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y <span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> address<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>    address <span class="token operator">=</span> <span class="token number">0x80</span> <span class="token operator">+</span> x<span class="token punctuation">;</span>  <span class="token keyword">else</span>          address <span class="token operator">=</span> <span class="token number">0xC0</span> <span class="token operator">+</span> x<span class="token punctuation">;</span>  <span class="token function">LCD_Command_Write</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* * LCD写一个字符 */</span><span class="token keyword">void</span> <span class="token function">LCD_Write_Char</span><span class="token punctuation">(</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> dat<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">LCD_SET_XY</span><span class="token punctuation">(</span> x<span class="token punctuation">,</span> y <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">LCD_Data_Write</span><span class="token punctuation">(</span>dat<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/* * LCD写字符串 */</span><span class="token keyword">void</span> <span class="token function">LCD_Write_String</span><span class="token punctuation">(</span><span class="token keyword">int</span> X<span class="token punctuation">,</span> <span class="token keyword">int</span> Y<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">LCD_SET_XY</span><span class="token punctuation">(</span> X<span class="token punctuation">,</span> Y <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//设置地址</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">*</span>s<span class="token punctuation">)</span>             <span class="token comment" spellcheck="true">//写字符串</span>  <span class="token punctuation">{</span>    <span class="token function">LCD_Data_Write</span><span class="token punctuation">(</span><span class="token operator">*</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>    s <span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">setup</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">7</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">pinMode</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">LCD_Command_Write</span><span class="token punctuation">(</span><span class="token number">0x28</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示模式设置4线 2行 5x7</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">LCD_Command_Write</span><span class="token punctuation">(</span><span class="token number">0x06</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示光标移动设置</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">LCD_Command_Write</span><span class="token punctuation">(</span><span class="token number">0x0c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示开及光标设置</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">LCD_Command_Write</span><span class="token punctuation">(</span><span class="token number">0x80</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置数据地址指针</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">LCD_Command_Write</span><span class="token punctuation">(</span><span class="token number">0x01</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示清屏</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">LCD_Write_String</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">LCD_Write_String</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"--TonyCode"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401174321.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>LCD1602显示字符「Hello World!  –TonyCode」，通过调节电位器可调节显示对比度。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401174309.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> LCD1602 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇30—数字温度传感器DS18B20</title>
      <link href="/posts/b30a.html"/>
      <url>/posts/b30a.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173914.jpg" alt=""></p><p>温度传感器的种类繁多，按照测量方式分为接触式和非接触式，按照传感器材料分为热电阻和热电偶两类，按照工作原理分为模拟式和数字式。上一篇介绍了模拟温度传感器LM35，本篇介绍数字温度传感器DS18B20的使用。</p><h2 id="1-DS18B20介绍"><a href="#1-DS18B20介绍" class="headerlink" title="1. DS18B20介绍"></a>1. DS18B20介绍</h2><p>DS18B20是常用的数字温度传感器，使用集成芯片，采用单总线技术，能够有效的减小外界的干扰，提高测量的精度。其输出的是数字信号，接线非常方便，封装成不同方式可以应用于不同场合，如管道式，螺纹式，磁铁吸附式，不锈钢封装式。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173908.JPG" alt="DS18B20"></p><p>主要特点：</p><ul><li>采用单总线的接口方式。只需要一条数据线就能双向通讯。</li><li>测量范围宽，精度高。其测量范围为-55℃ — +125℃ ，在-10—+85℃ 范围内，精度为±0.5℃ 。</li><li>多点组网功能。多个DS18B20可以并联在惟一的三线上，实现多点测温。</li><li>供电方式灵活。可通过内部寄生电路从数据线上获取电源。</li><li>测量参数可配置。DS18B20的测量分辨率可通过程序设定9—12位。</li><li>掉电保护功能。内部含有EEPROM，在系统掉电以后，仍可保存分辨率及报警温度的设定值。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173534.jpg" alt="封装"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>DS18B20</li><li>10K直插电阻</li></ul><h2 id="3-安装库"><a href="#3-安装库" class="headerlink" title="3. 安装库"></a>3. 安装库</h2><p>本实验用到两个库，分别为「OneWire」和「DallasTemperature」，前者是单总线库，后者是在前者基础上针对Dallas温度传感器封装的库。</p><ul><li>在IDE中点击「项目」—「加载库」—「管理库」，查找「OneWire」，选择最新版本进行安装。目前最新版本为2.3.4。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173909.jpg" alt="安装库1"></p><ul><li>查找「DallasTemperature」，选择最新版本进行安装。目前最新版本为3.8.0。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173910.jpg" alt="安装库2"></p><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>线路连接非常简单，DS18B20的VCC、DQ、GND分别连接到开发板的5V、2、GND。10K电阻一段连接VCC，另一端连接DQ，上拉电阻用于提高I/O口的驱动能力。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173912.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173915.JPG" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;OneWire.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;DallasTemperature.h></span></span><span class="token comment" spellcheck="true">// 数据输出脚接开发板数字引脚2</span><span class="token macro property">#<span class="token directive keyword">define</span> ONE_WIRE_BUS 2</span>OneWire <span class="token function">oneWire</span><span class="token punctuation">(</span>ONE_WIRE_BUS<span class="token punctuation">)</span><span class="token punctuation">;</span>DallasTemperature <span class="token function">sensors</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>oneWire<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  sensors<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   sensors<span class="token punctuation">.</span><span class="token function">requestTemperatures</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 发送命令获取温度</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Temperature for the device 1 (index 0) is: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sensors<span class="token punctuation">.</span><span class="token function">getTempCByIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173911.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>打开串口监视器，波特率设置为9600，串口会循环打印读取的温度值。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173916.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇29—模拟温度传感器LM35</title>
      <link href="/posts/d78a.html"/>
      <url>/posts/d78a.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173404.jpg" alt=""></p><p>温度传感器就是利用物质随温度变化特性的规律，把温度转换成可输出信号的传感器，是普遍应用的传感器之一。本篇介绍模拟温度传感器—LM35。</p><h2 id="1-LM35介绍"><a href="#1-LM35介绍" class="headerlink" title="1. LM35介绍"></a>1. LM35介绍</h2><p>LM35是很常用的温度传感器元件，电路连接非常方便，只需要一个模拟接口，其输出电压为摄氏度温标。采用内部补偿，输出可以从0℃开始。工作电压4—30V，芯片自身几乎没有散热问题来影响测量。</p><p>传感器输出电压与摄氏度呈线性关系，0℃时输出0V，每升高1℃，输出电压增加10mV。我们根据这一关系将电压输入转换成对应的温度值。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173411.jpg" alt="LM35"></p><p>LM35封装如下，标有型号的丝印面朝上，从左到右引脚以此为：VCC、VOUT、GND。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173534.jpg" alt="封装引脚"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>LM35</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路图。"><a href="#1-根据原理图搭建电路图。" class="headerlink" title="1. 根据原理图搭建电路图。"></a>1. 根据原理图搭建电路图。</h3><p>线路连接非常简单，LM35的VCC、VOUT、GND分别连接到开发板的5V、A0、GND。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173545.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173544.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * LM35 * 模拟温度传感器LM35测试 */</span><span class="token keyword">int</span> potPin <span class="token operator">=</span> A0<span class="token punctuation">;</span><span class="token keyword">float</span> temperature <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">long</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置串口波特率9600</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  value <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>potPin<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//读取模拟输入</span>  <span class="token comment" spellcheck="true">//电压与摄氏度转换：</span>  <span class="token comment" spellcheck="true">//0.00488125=5/1024，0~5V对应模拟口读数1~1024，每10毫伏对应1℃</span>  temperature <span class="token operator">=</span> <span class="token punctuation">(</span>value <span class="token operator">*</span> <span class="token number">0.0048828125</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Temper =  "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>temperature<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"℃"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173539.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>打开串口监视器，波特率设置为9600，串口会循环打印读取的温度值。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401173546.gif" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tiny4412裸机按键控制LED灯</title>
      <link href="/posts/6205.html"/>
      <url>/posts/6205.html</url>
      
        <content type="html"><![CDATA[<p>试过了GPIO的输出功能，再来测试下GPIO的输入功能。开发板上有四个用户按键，使用这四个按键来控制四个LED的状态，发现使用位操作真的是非常方便。</p><ul><li>开发板：Tiny4412SDK标准版 「Tiny4412 SDK 1506」</li><li>工具：「arm-linux-gcc-4.5.1」 「minicom」 「dnw」</li><li>平台：Ubuntu 14.04</li></ul><h2 id="1-在原理图上找到按键对应的GPIO"><a href="#1-在原理图上找到按键对应的GPIO" class="headerlink" title="1. 在原理图上找到按键对应的GPIO"></a>1. 在原理图上找到按键对应的GPIO</h2><p>在上一篇中，通过原理图已经知道了用户LED1-4，对应了GPM4_0-GPM4_3,再来看下KEY1-4对应的管脚。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232924.jpg" alt="用户按键"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232942.jpg" alt="GPX3"></p><p>用户按键KEY1、KEY2、KEY3、KEY4分别对应了GPX3_2、GPX3_3、GPX3_4、GPX3_5，并且按键引脚平常是高电平，按键被按下变为低电平。</p><h2 id="2-芯片手册查找GPIO相关寄存器"><a href="#2-芯片手册查找GPIO相关寄存器" class="headerlink" title="2. 芯片手册查找GPIO相关寄存器"></a>2. 芯片手册查找GPIO相关寄存器</h2><p>控制寄存器GPX3CON:</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232956.jpg" alt="GPX3CON"></p><p>数据寄存器GPX3DAT:</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401233007.jpg" alt="GPX3DAT"></p><p>配置GPX3所对应的位为0，即为输入模式。</p><h2 id="3-编写程序"><a href="#3-编写程序" class="headerlink" title="3. 编写程序"></a>3. 编写程序</h2><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> GPIOBASE    0x11000000</span><span class="token macro property">#<span class="token directive keyword">define</span> GPM4CON     (*(volatile unsigned long *)(GPIOBASE + 0x02E0))</span><span class="token macro property">#<span class="token directive keyword">define</span> GPM4DAT     (*(volatile unsigned long *)(GPIOBASE + 0x02E4))</span><span class="token macro property">#<span class="token directive keyword">define</span> GPX3CON     (*(volatile unsigned long *)(GPIOBASE + 0x0C60))</span><span class="token macro property">#<span class="token directive keyword">define</span> GPX3DAT     (*(volatile unsigned long *)(GPIOBASE + 0x0C64))</span><span class="token keyword">int</span> <span class="token function">key</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> value<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*设置LED1-4对应GPIO为输出模式*/</span>    GPM4CON <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0xF</span><span class="token operator">&lt;&lt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">0xF</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">0xF</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">0xF</span><span class="token operator">&lt;&lt;</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    GPM4CON <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*设置KEY1-4对应GPIO为输入模式*/</span>    GPX3CON <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0xF</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">0xF</span><span class="token operator">&lt;&lt;</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">0xF</span><span class="token operator">&lt;&lt;</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">0xF</span><span class="token operator">&lt;&lt;</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        value <span class="token operator">=</span> GPX3DAT<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//读取GPX3电平状态</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//Key1 --> GPX3_2</span>        <span class="token punctuation">{</span>            GPM4DAT <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//LED1 --> GPM4_0</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            GPM4DAT <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//Key2 --> GPX3_3</span>        <span class="token punctuation">{</span>            GPM4DAT <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//LED2 --> GPM4_1</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            GPM4DAT <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//Key3 --> GPX3_4</span>        <span class="token punctuation">{</span>            GPM4DAT <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//LED3 --> GPM4_2</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            GPM4DAT <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//Key4 --> GPX3_5</span>        <span class="token punctuation">{</span>            GPM4DAT <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//LED4 --> GPM4_3</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            GPM4DAT <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Makefile代码如下:</p><pre class=" language-c"><code class="language-c"><span class="token keyword">default</span><span class="token punctuation">:</span>    arm<span class="token operator">-</span>linux<span class="token operator">-</span>gcc <span class="token operator">-</span>c key<span class="token punctuation">.</span>c  <span class="token operator">-</span>o key<span class="token punctuation">.</span>o    arm<span class="token operator">-</span>linux<span class="token operator">-</span>ld  <span class="token operator">-</span>Ttext<span class="token operator">=</span><span class="token number">0x70003000</span>  key<span class="token punctuation">.</span>o  <span class="token operator">-</span>o key    arm<span class="token operator">-</span>linux<span class="token operator">-</span>objcopy  <span class="token operator">-</span>O binary   key  key<span class="token punctuation">.</span>binclean<span class="token punctuation">:</span>    rm <span class="token operator">-</span>f key<span class="token punctuation">.</span>o  key  key<span class="token punctuation">.</span>bin   <span class="token operator">*</span><span class="token operator">~</span></code></pre><p>执行make clean，然后make，生成key.bin二进制文件。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401233027.jpg" alt="生成二进制文件"></p><h2 id="4-上传程序到开发板"><a href="#4-上传程序到开发板" class="headerlink" title="4. 上传程序到开发板"></a>4. 上传程序到开发板</h2><ul><li><p>在串口中执行：</p><pre class=" language-c"><code class="language-c">dnw <span class="token number">70003000</span></code></pre><p>等待dnw下载。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401233038.jpg" alt="等待下载"></p><ul><li>在ubuntu下文件目录下执行：</li></ul><pre class=" language-c"><code class="language-c">dnw key<span class="token punctuation">.</span>bin</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401233054.jpg" alt="上传"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401233059.jpg" alt="完成"></p><ul><li>文件通过dnw下载到开发板内存地址0x70003000，执行：</li></ul><pre class=" language-c"><code class="language-c">go <span class="token number">70003000</span></code></pre><p>程序运行。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401233117.jpg" alt="运行"></p><h2 id="5-按键控制LED状态"><a href="#5-按键控制LED状态" class="headerlink" title="5. 按键控制LED状态"></a>5. 按键控制LED状态</h2><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401233127.gif" alt="LED"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401233140.gif" alt="KEY"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ARM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tiny4412 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tiny4412裸机点亮LED</title>
      <link href="/posts/6113.html"/>
      <url>/posts/6113.html</url>
      
        <content type="html"><![CDATA[<p>之前的工作中都是基于STM32开发项目的，很想学习下系统级别ARM Linux开发，手上正好有块友善之臂的Tiny4412开发板，在此做下记录，方便自己查阅，也希望能给大家提供参考。</p><ul><li>开发板：Tiny4412SDK标准版 「Tiny4412 SDK 1506」</li><li>工具：「arm-linux-gcc-4.5.1」  「minicom」  「dnw」</li><li>平台：Ubuntu 14.04</li></ul><h2 id="1-根据原理图查找LED灯对应的GPIO"><a href="#1-根据原理图查找LED灯对应的GPIO" class="headerlink" title="1. 根据原理图查找LED灯对应的GPIO"></a>1. 根据原理图查找LED灯对应的GPIO</h2><p>四个用户灯集成在核心板上：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232205.jpg" alt="核心板"></p><p>根据原理图，LED1—LED4对应GPM4_0—GPM4_3，且低电平有效「点亮」。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232202.jpg" alt="LED灯电路"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232206.jpg" alt="连接GPIO"></p><h2 id="2-根据芯片手册查找GPIO相关寄存器"><a href="#2-根据芯片手册查找GPIO相关寄存器" class="headerlink" title="2. 根据芯片手册查找GPIO相关寄存器"></a>2. 根据芯片手册查找GPIO相关寄存器</h2><p>GPIO操作主要用到两个寄存器，一个是控制寄存器，用来设置GPIO的模式，比如输入、输出，另一个是数据寄存器。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232204.jpg" alt="GPM4CON"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232203.jpg" alt="GPM4DAT"></p><p>GPM4CON每4bit一组，用来设置一路GPIO的模式，我们需要4路GPIO输出模式，所以Value的值为0x1111即可。<br>GPM4DAT寄存器的低四位对应了我们使用到的4个GPIO，对应给0，LED灯点亮，给1，LED灯熄灭。</p><h2 id="3-编写程序"><a href="#3-编写程序" class="headerlink" title="3. 编写程序"></a>3. 编写程序</h2><p>led.c代码如下：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span>    gpiobase    0x11000000</span><span class="token macro property">#<span class="token directive keyword">define</span>    GPM4CON        (*(volatile unsigned long *)(gpiobase + 0x02E0))</span><span class="token macro property">#<span class="token directive keyword">define</span>    GPM4DAT        (*(volatile unsigned long *)(gpiobase + 0x02E4))</span><span class="token keyword">void</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">ledConfig</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">ledOut</span><span class="token punctuation">(</span><span class="token keyword">int</span> pin<span class="token punctuation">,</span> <span class="token keyword">int</span> ena<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">led</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span>  <span class="token function">ledConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token function">ledOut</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">ledOut</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">ledConfig</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  GPM4CON <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token number">0xFFFF</span><span class="token punctuation">;</span>  GPM4CON <span class="token operator">|</span><span class="token operator">=</span> <span class="token number">0x1111</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">int</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span>  <span class="token keyword">for</span><span class="token punctuation">(</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> <span class="token number">500</span><span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> <span class="token number">500</span><span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">ledOut</span><span class="token punctuation">(</span><span class="token keyword">int</span> pin<span class="token punctuation">,</span> <span class="token keyword">int</span> ena<span class="token punctuation">)</span><span class="token punctuation">{</span>  GPM4DAT <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> pin<span class="token punctuation">)</span><span class="token punctuation">;</span>  GPM4DAT <span class="token operator">|</span><span class="token operator">=</span> ena<span class="token operator">&lt;&lt;</span>pin<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>Makefile代码如下：</p><pre class=" language-c"><code class="language-c"><span class="token keyword">default</span><span class="token punctuation">:</span>    arm<span class="token operator">-</span>linux<span class="token operator">-</span>gcc <span class="token operator">-</span>c led<span class="token punctuation">.</span>c  <span class="token operator">-</span>o led<span class="token punctuation">.</span>o    arm<span class="token operator">-</span>linux<span class="token operator">-</span>ld  <span class="token operator">-</span>Ttext<span class="token operator">=</span><span class="token number">0x70003000</span>  led<span class="token punctuation">.</span>o  <span class="token operator">-</span>o led    arm<span class="token operator">-</span>linux<span class="token operator">-</span>objcopy  <span class="token operator">-</span>O binary   led  led<span class="token punctuation">.</span>binclean<span class="token punctuation">:</span>    rm <span class="token operator">-</span>f led<span class="token punctuation">.</span>o  led  led<span class="token punctuation">.</span>bin   <span class="token operator">*</span><span class="token operator">~</span> </code></pre><p>在当前目录下make clean，然后make，就生成了led.bin的二进制文件。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232208.jpg" alt="生成二进制文件"></p><h2 id="4-上传程序到目标板"><a href="#4-上传程序到目标板" class="headerlink" title="4. 上传程序到目标板"></a>4. 上传程序到目标板</h2><p>在minicom串口终端中执行：</p><pre class=" language-c"><code class="language-c">dnw <span class="token number">70003000</span></code></pre><p>可以看到uboot已经准备好，等在下载。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232207.jpg" alt="等待下载"></p><p>然后在ubuntu下执行：</p><pre class=" language-c"><code class="language-c">dnw led<span class="token punctuation">.</span>bin</code></pre><p>文件通过dnw上传到开发板的0x70003000地址。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232209.jpg" alt="上传"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232200.jpg" alt="完成"></p><p>然后在串口终端执行：</p><pre class=" language-c"><code class="language-c">go <span class="token number">70003000</span></code></pre><p>提示正在运行：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232201.jpg" alt="运行"></p><h2 id="5-LED灯点亮"><a href="#5-LED灯点亮" class="headerlink" title="5. LED灯点亮"></a>5. LED灯点亮</h2><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401232210.gif" alt="LED灯点亮"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> ARM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tiny4412 </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇28—舵机控制</title>
      <link href="/posts/8a18.html"/>
      <url>/posts/8a18.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172714.jpg" alt=""></p><p>舵机是一种位置「角度」伺服的驱动器，适用于那些需要角度不断变化并可以保持的控制系统。目前在高档遥控玩具、航模、机器人中已经得到普遍使用。舵机是一种俗称，其实是一种伺服马达。本篇通过官方驱动库来实现舵机控制。</p><h2 id="1-舵机介绍"><a href="#1-舵机介绍" class="headerlink" title="1. 舵机介绍"></a>1. 舵机介绍</h2><ul><li>结构组成<br>舵机实际上是一种位置伺服的驱动器，主要是由外壳、电路板、无核心马达、齿轮与位置检测器所构成。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172715.jpg" alt="内部结构"></p><ul><li><p>工作原理<br>舵机内部有一个基准电路，产生周期为20ms、宽度为1.5ms的基准信号，将获得的直流偏置电压与电位器的电压比较，获得电压差输出。经过电路板IC方向判断，再驱动无核心马达开始转动，透过减速齿轮将动力传至摆臂，同时由位置检测器送回信号，判断是否已经到位。</p><p>舵机转动的角度是通过调节PWM「脉冲宽度调制」信号的占空比来实现的。标准的PWM信号的周期固定为20ms，理论上脉宽分布应该在1ms到2ms之间，实际上可由0.5ms到2.5ms之间，脉宽与转角0°—180°相对应。不同厂家不同型号的舵机也会有所差异。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172712.jpg" alt="PWM控制"></p><ul><li>外部接线<br>舵机一般都外接三根线，分别用棕、红、橙三种颜色进行区分，由于品牌不同，颜色也会有所差异，棕色为接地线，红色为电源正极线，橙色为信号线。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172713.jpg" alt="控制线"></p><p>由于Arduino的驱动能力有限，当需要控制多个舵机时，需要外接电源以及使用专用的舵机控制板。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172711.jpg" alt="舵机控制板"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>配套连接线</li><li>舵机</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>线路连接非常简单，舵机红色线接开发板5V，棕色线接开发板GND，橙色信号线接开发板数字引脚9。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172709.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172716.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Servo.h></span></span>Servo myservo<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 定义Servo对象来控制</span><span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 角度存储变量</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  myservo<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 控制线连接数字9</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>pos <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> pos <span class="token operator">&lt;=</span> <span class="token number">180</span><span class="token punctuation">;</span> pos <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 0°到180°</span>    <span class="token comment" spellcheck="true">// in steps of 1 degree</span>    myservo<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">// 舵机角度写入</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token comment" spellcheck="true">// 等待转动到指定角度</span>  <span class="token punctuation">}</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>pos <span class="token operator">=</span> <span class="token number">180</span><span class="token punctuation">;</span> pos <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> pos <span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 从180°到0°</span>    myservo<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment" spellcheck="true">// 舵机角度写入</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token comment" spellcheck="true">// 等待转动到指定角度</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172710.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>舵机在0°和180°间不断转动。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172717.gif" alt="实验现象"></p><h2 id="5-库函数介绍"><a href="#5-库函数介绍" class="headerlink" title="5. 库函数介绍"></a>5. 库函数介绍</h2><p>用Arduino控制舵机一般有两种方法：</p><ol><li>通过Arduino的普通数字引脚产生占空比不同的方波，模拟产生PWM信号进行舵机控制。</li><li>直接利用Arduino自带的Servo库进行控制，但是自带库只支持数字引脚9和10接口。</li></ol><p>Servo库常用函数：</p><ul><li>Attach(接口)—设定舵机接口，只能选择数字引脚9或者10。</li><li>Write(角度)—用于设定舵机旋转的角度，可设定范围0°—180°。</li><li>Read()—用于读取舵机角度的语句，可理解为读取最后一条write()命令中的值。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 舵机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇27—步进电机驱动库的使用</title>
      <link href="/posts/c92a.html"/>
      <url>/posts/c92a.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172349.jpg" alt=""></p><p>本篇介绍步进电机驱动库的使用，通过读取电位器输入，控制步进电机转动相应角度。</p><p>Stepper库是官方提供的驱动库，我们启动Arduino IDE，点击「文件」—「示例」就能找到Stepper库，官方提供了四个例程。关于Stepper库可参考<a href="https://www.arduino.cc/en/Reference/Stepper" target="_blank" rel="noopener">官方介绍</a>。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>ULN2003驱动板</li><li>步进电机</li><li>电位器</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>原理图在上一篇基础上添加了电位器的连接。ULN2003驱动板上IN1、IN2、IN3、IN4分别连接UNO开发板的数字引脚2，3，4，5；驱动板电源输入+、-引脚分别连接UNO开发板的5V、GND；电位器中间引脚连接Uno模拟引脚A0,电位器两端引脚分别连接Uno的5V和GND。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172347.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172351.jpg" alt="实物连接图"></p><h3 id="2-修改Stepper源文件。"><a href="#2-修改Stepper源文件。" class="headerlink" title="2. 修改Stepper源文件。"></a>2. 修改Stepper源文件。</h3><p>由于我们使用的步进电机和官方驱动库中有所差异，所以需要对驱动库稍加修改。</p><ul><li>找到Arduino IDE安装目录，进入\libraries\Stepper\src\，用文本文件打开Stepper.cpp。将255行switch包含的case注释掉。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172350.jpg" alt="库文件"></p><ul><li>拷贝如下代码到switch中。</li></ul><pre class=" language-c++"><code class="language-c++">     case 0:  // 1010        digitalWrite(motor_pin_1, HIGH);        digitalWrite(motor_pin_2, LOW);        digitalWrite(motor_pin_3, LOW);        digitalWrite(motor_pin_4, LOW);      break;      case 1:  // 0110        digitalWrite(motor_pin_1, LOW);        digitalWrite(motor_pin_2, HIGH);        digitalWrite(motor_pin_3, LOW);        digitalWrite(motor_pin_4, LOW);      break;      case 2:  //0101        digitalWrite(motor_pin_1, LOW);        digitalWrite(motor_pin_2, LOW);        digitalWrite(motor_pin_3, HIGH);        digitalWrite(motor_pin_4, HIGH);      break;      case 3:  //1001        digitalWrite(motor_pin_1, LOW);        digitalWrite(motor_pin_2, LOW);        digitalWrite(motor_pin_3, LOW);        digitalWrite(motor_pin_4, HIGH);      break;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172346.jpg" alt="修改后"></p><ul><li>保存并关闭Stepper.cpp。</li></ul><h3 id="3-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#3-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="3. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>3. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * MotorKnob * * A stepper motor follows the turns of a potentiometer * (or other sensor) on analog input 0. * * http://www.arduino.cc/en/Reference/Stepper * This example code is in the public domain. */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;Stepper.h></span></span><span class="token comment" spellcheck="true">// change this to the number of steps on your motor</span><span class="token macro property">#<span class="token directive keyword">define</span> STEPS 200</span><span class="token comment" spellcheck="true">// create an instance of the stepper class, specifying</span><span class="token comment" spellcheck="true">// the number of steps of the motor and the pins it's</span><span class="token comment" spellcheck="true">// attached to</span>Stepper <span class="token function">stepper</span><span class="token punctuation">(</span>STEPS<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// the previous reading from the analog input</span><span class="token keyword">int</span> previous <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// set the speed of the motor to 90 RPMs</span>  stepper<span class="token punctuation">.</span><span class="token function">setSpeed</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// get the sensor value</span>  <span class="token keyword">int</span> val <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// move a number of steps equal to the change in the</span>  <span class="token comment" spellcheck="true">// sensor reading</span>  stepper<span class="token punctuation">.</span><span class="token function">step</span><span class="token punctuation">(</span>val <span class="token operator">-</span> previous<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// remember the previous value of the sensor</span>  previous <span class="token operator">=</span> val<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="4-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#4-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="4. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>4. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172348.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>步进电机跟随电位器旋转而转动。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401172352.gif" alt="实验现象"></p><h2 id="4-实验分析"><a href="#4-实验分析" class="headerlink" title="4. 实验分析"></a>4. 实验分析</h2><p>程序中使用Stepper库，设置步进电机四相驱动引脚，设置转动速度。主循环中读取A0口模拟输入，与上次数据作比较，以上次数据为参考点驱动步进电机转动。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 步进电机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇26—步进电机</title>
      <link href="/posts/a153.html"/>
      <url>/posts/a153.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171726.jpg" alt=""></p><p>步进电机是一种将电脉冲转化为角位移的执行机构。通俗一点讲：当步进驱动器接收到一个脉冲信号，它就驱动步进电机按设定的方向转动一个固定的角度（即步进角），多用于雕刻机、3D打印机等需要精确控制的设备。本篇使用ULN2003驱动五线四相减速步进电机。</p><h2 id="1-步进电机介绍"><a href="#1-步进电机介绍" class="headerlink" title="1. 步进电机介绍"></a>1. 步进电机介绍</h2><ul><li>步进电机每次能转动的最小角度叫做步距角。</li><li>每当步进电机接收到一个驱动信号后，步进电机将按照一定的方向转动一个固定的角度。</li><li>通过控制脉冲的个数来精确的控制步进电机的角位移量，通过控制脉冲的频率来控制电机转动的速度及加速度，从而达到调速的目的。</li><li>步进电机按照相数不同分为单相、双相、多相三种，励磁方式分为1相励磁方式和2相励磁方式。</li><li>本篇使用的步进电机型号为28BYJ-48，1相励磁方式驱动，通过给ABCD四相依次通电来实现转自不停转动。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171729.jpg" alt="步进电机"></p><h2 id="2-ULN2003驱动介绍"><a href="#2-ULN2003驱动介绍" class="headerlink" title="2. ULN2003驱动介绍"></a>2. ULN2003驱动介绍</h2><p>由于Arduino开发板的通用IO驱动能力有限，有些外设不能直接使用IO进行驱动，需要借助一些驱动电路间接控制大功率器件。ULN2003是大电流驱动阵列，多用于单片机、智能仪表、PLC、数字量输出卡等控制电路中，可直接驱动继电器等负载。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171731.jpg" alt="ULN2003内部结构"></p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板连接线</li><li>ULN2003驱动板</li><li>步进电机</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>ULN2003驱动板上IN1、IN2、IN3、IN4分别连接UNO开发板的数字引脚2，3，4，5；驱动板电源输入+、-引脚分别连接UNO开发板的5V、GND。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171728.jpg" alt="驱动板"></p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171725.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171727.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * Stepper_Motor * 步进电机驱动，实现正反转 */</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// put your setup code here, to run once:</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">pinMode</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">clockwise</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> count <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> count<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">anticlockwise</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> count <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> count<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> i <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// put your main code here, to run repeatedly:</span>  <span class="token function">clockwise</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">anticlockwise</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171730.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>步进电机顺时针、逆时针交替旋转。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171732.gif" alt="实验现象"></p><h2 id="6-实验分析"><a href="#6-实验分析" class="headerlink" title="6. 实验分析"></a>6. 实验分析</h2><p>程序通过ABCD四相通电顺序实现步进电机正反转控制。步进电机旋转一周，程序中循环次数为什么是512次呢？这是根据我们使用的步进电机参数计算而来的：</p><ul><li>步进电机电压5V，步距角5.625，减速比1：64</li><li>计算A-B-C-D通电一次转动的角度5.625X2X4/64=0.703125  (2是表示1相励磁方式每步是2倍的步距角，4表示走了4步， 64指电机减速比)  </li><li>转动360度循环ABCD通电的次数360/0.7031=512</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 步进电机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇25—红外遥控</title>
      <link href="/posts/9611.html"/>
      <url>/posts/9611.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171255.jpg" alt=""></p><p>在日常生活中我们会接触到各式各样的遥控器，电视机、空调、机顶盒等都有专用的遥控器，很多智能手机也在软硬件上对红外遥控做了支持，可以集中遥控绝大部分家用电器。本篇介绍红外遥控相关原理及应用，通过红外遥控器控制Uno板载LED灯亮灭。</p><h2 id="1-红外遥控原理"><a href="#1-红外遥控原理" class="headerlink" title="1. 红外遥控原理"></a>1. 红外遥控原理</h2><p>红外遥控主要由红外发射和红外接收两部分组成。</p><p>红外发射和接收的信号其实都是一连串的二进制脉冲码，高低电平按照一定的时间规律变换来传递相应的信息。为了使其在无线传输过程中免受其他信号的干扰，通常都将信号调制在特定的载波频率上(38K红外载波信号)，通过红外发射二极管发射出去，而红外接收端则要将信号进行解调处理，还原成二进制脉冲码进行处理。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171250.jpg" alt="红外接收和红外遥控器"></p><p>红外接收头有三个引脚，如上图从左到右依次为VOUT、GND、VCC。红外遥控器发射的38K红外载波信号由遥控器里的编码芯片对其进行编码，具体编码方式和协议可在网上获取，这里不再展开。当按下遥控器按键时，遥控器发出红外载波信号，红外接收器接收到信号，程序对载波信号进行解码，通过数据码的不同来判断按下的是哪个键。</p><h2 id="2-红外遥控库安装"><a href="#2-红外遥控库安装" class="headerlink" title="2. 红外遥控库安装"></a>2. 红外遥控库安装</h2><p>在IDE中点击「项目」—「加载库」—「管理库」，查找「IRremote」进行安装。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171254.jpg" alt="安装库"></p><h2 id="3-实验材料"><a href="#3-实验材料" class="headerlink" title="3. 实验材料"></a>3. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>红外接收头</li><li>红外遥控器</li></ul><h2 id="4-实验步骤"><a href="#4-实验步骤" class="headerlink" title="4. 实验步骤"></a>4. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>红外接收头左侧VOUT连接开发板数字引脚11，GND和VCC分别连接开发板的GND和5V。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171252.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171253.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * IRrecvDemo * 红外控制，接收红外命令控制板载LED灯亮灭 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;IRremote.h></span></span><span class="token keyword">int</span> RECV_PIN <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span><span class="token keyword">int</span> LED_PIN <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">;</span>IRrecv <span class="token function">irrecv</span><span class="token punctuation">(</span>RECV_PIN<span class="token punctuation">)</span><span class="token punctuation">;</span>decode_results results<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  irrecv<span class="token punctuation">.</span><span class="token function">enableIRIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Start the receiver</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>LED_PIN<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>LED_PIN<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>irrecv<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>results<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>results<span class="token punctuation">.</span>value<span class="token punctuation">,</span> HEX<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>results<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token number">0xFFA25D</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//开灯的值</span>    <span class="token punctuation">{</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>LED_PIN<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>results<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token number">0xFF629D</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//关灯的值</span>    <span class="token punctuation">{</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>LED_PIN<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    irrecv<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Receive the next value</span>  <span class="token punctuation">}</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171251.jpg" alt="程序下载"></p><h2 id="5-实验现象"><a href="#5-实验现象" class="headerlink" title="5. 实验现象"></a>5. 实验现象</h2><p>按下程序中指定的按键，板载LED灯亮灭。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401171256.gif" alt="实验现象"></p><h2 id="6-实验分析"><a href="#6-实验分析" class="headerlink" title="6. 实验分析"></a>6. 实验分析</h2><p>程序中引入IRremote库，当按下红外遥控器时，在串口监视器中可以看到不同按键的按键码，然后我们选取了两个按键码值进行条件控制，就可以实现遥控LED灯了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 红外遥控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇24—继电器控制</title>
      <link href="/posts/1486.html"/>
      <url>/posts/1486.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401170920.jpg" alt=""></p><p>继电器是一种电子控制器件，是用较小的电流去控制较大电流的一种“自动开关”，通常应用于自动控制电路中起着自动调节、安全保护、转换电路等作用。 本篇介绍继电器的使用，通过串口发送命令来控制继电器动作。</p><h2 id="1-继电器介绍"><a href="#1-继电器介绍" class="headerlink" title="1. 继电器介绍"></a>1. 继电器介绍</h2><ul><li>继电器原理<br>电磁式继电器一般由铁芯、线圈、衔铁、触点簧片等组成的。只要在线圈两端加上一定的电压，线圈中就会流过一定的电流，从而产生电磁效应，衔铁就会在电磁力吸引的作用下克服返回弹簧的拉力吸向铁芯，从而带动衔铁的动触点与静触点（常开触点）吸合。当线圈断电后，电磁的吸力也随之消失，衔铁就会在弹簧的反作用力返回原来的位置，使动触点与原来的静触点（常闭触点）释放。这样吸合、释放，从而达到了在电路中的导通、切断的目的。对于继电器的“常开、常闭”触点，可以这样来区分：继电器线圈未通电时处于断开状态的静触点，称为“常开触点”；处于接通状态的静触点称为“常闭触点”。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401170917.jpg" alt="继电器原理"></p><ul><li><p>继电器封装</p><p>不同的继电器根据其控制电压、触点耐压等不同，其外形和封装也各不相同。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401170918.jpg" alt="不同继电器"></p><p>本次实验使用的继电器为6脚5V继电器，其外形如上图右侧，其封装引脚如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401170924.jpg" alt="封装引脚"></p><p>其中2脚和5脚为线圈端，1脚和6脚为触点的COM公共端，3脚为常开端，4脚为常闭端。想要控制继电器只需要在线圈端加5V电压即可使常开端闭合。</p></li><li><p>继电器控制</p><p>一般继电器都有专用的控制电路，最常用的一种是使用PNP型三极管做为控制开关，通过控制三极管基极来导通三极管使得线圈形成回路。另一种是使用光耦进行控制，通过控制光耦来控制线圈工作。在控制高压设备时，通常继电器的触点还需要添加RC消火花电路。</p></li></ul><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>5V继电器</li><li>220Ω限流电阻</li><li>LED发光二极管</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>继电器的2脚和5脚分别连接开发板13引脚和GND。继电器公共端1脚(或6脚)连接5V，继电器常开端3脚连接限流电阻，电阻另一端连接LED灯正极，其负极连接GND。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401170922.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401170919.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   Relay   继电器控制，通过串口控制继电器开关LED灯*/</span><span class="token keyword">int</span> incomedate <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> relayPin <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//继电器引脚</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>relayPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置串口波特率9600</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>Serial<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//串口接收到数据</span>  <span class="token punctuation">{</span>    incomedate <span class="token operator">=</span> Serial<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取串口接收到的数据</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>incomedate <span class="token operator">==</span> <span class="token string">'H'</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>relayPin<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>      Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"LED OPEN!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>incomedate <span class="token operator">==</span> <span class="token string">'L'</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>relayPin<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>      Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"LED CLOSE!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401170921.jpg" alt="程序下载"></p><h3 id="4-打开串口监视器，调整波特率为9600，输入”H”，串口返回”LED-OPEN-”，继电器控制LED灯点亮；输入”L”，串口返回”LED-CLOSE-”，继电器控制LED灯熄灭。"><a href="#4-打开串口监视器，调整波特率为9600，输入”H”，串口返回”LED-OPEN-”，继电器控制LED灯点亮；输入”L”，串口返回”LED-CLOSE-”，继电器控制LED灯熄灭。" class="headerlink" title="4. 打开串口监视器，调整波特率为9600，输入”H”，串口返回”LED OPEN!”，继电器控制LED灯点亮；输入”L”，串口返回”LED CLOSE!”，继电器控制LED灯熄灭。"></a>4. 打开串口监视器，调整波特率为9600，输入”H”，串口返回”LED OPEN!”，继电器控制LED灯点亮；输入”L”，串口返回”LED CLOSE!”，继电器控制LED灯熄灭。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401170923.jpg" alt="实验现象"></p><p>将实验中的5V控制LED灯换成220V控制白炽灯道理也是一样的，继电器使得我们能够控制各种高压外设。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 继电器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇23—串口通讯</title>
      <link href="/posts/a4f2.html"/>
      <url>/posts/a4f2.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401165119.jpg" alt=""></p><p>在很多时候，Arduino需要和其他设备相互通讯，而最常见最简单的方式就是串口通讯。本篇介绍Arduino硬件串口通讯，了解相关函数的使用。</p><h2 id="1-硬件串口"><a href="#1-硬件串口" class="headerlink" title="1. 硬件串口"></a>1. 硬件串口</h2><p>在PC机上最常见的串行通讯协议是RS-232串行协议，而各种微控制器(单片机)上采用的是TTL串行协议，两者电平不同，需要经过相应电平转换才能进行相互通讯。</p><p>Arduino Uno R3开发板上，硬件串口位于Rx(0)和Tx(1)引脚上，Arduino的USB口通过转换芯片与这两个引脚连接。该转换芯片会通过USB接口在PC机上虚拟出一个用于Arduino通讯的串口，我们下载程序也是通过串口进行的。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401165122.jpg" alt="硬件串口接口"></p><h2 id="2-相关函数介绍"><a href="#2-相关函数介绍" class="headerlink" title="2. 相关函数介绍"></a>2. 相关函数介绍</h2><p>Arduino提供的串口通讯函数非常丰富，详细介绍参考<a href="https://www.arduino.cc/reference/en/language/functions/communication/serial/" target="_blank" rel="noopener">Arduino官网串口使用指南</a>。</p><p><strong>Serial.begin()</strong></p><ul><li>描述：开启串口，通常置于setup()函数中。</li><li>原型：<ul><li><strong>Serial.begin(speed)</strong></li><li><strong>Serial.begin(speed, config)</strong></li></ul></li><li>参数：<ul><li>speed：波特率，一般取值9600,115200等。</li><li>config：设置数据位、校验位和停止位。默认SERIAL_8N1表示8个数据位，无校验位，1个停止位。</li></ul></li><li>返回值：无。</li></ul><p><strong>Serial.end()</strong></p><ul><li>描述：禁止串口传输。此时串口Rx和Tx可以作为数字IO引脚使用。</li><li>原型：<strong>Serial.end()</strong></li><li>参数：无。</li><li>返回值：无。</li></ul><p><strong>Serial.print()</strong></p><ul><li>描述：串口输出数据，写入字符数据到串口。</li><li>原型：<ul><li><strong>Serial.print(val)</strong></li><li><strong>Serial.print(val, format)</strong></li></ul></li><li>参数：<ul><li>val：打印的值，任意数据类型。</li><li>config：输出的数据格式。BIN(二进制)、OCT(八进制)、DEC(十进制)、HEX(十六进制)。对于浮点数，此参数指定要使用的小数位数。</li></ul></li><li>示例：<ul><li>Serial.print(78, BIN) 得到 “1001110”</li><li>Serial.print(78, OCT) 得到 “116”</li><li>Serial.print(78, DEC) 得到 “78”</li><li>Serial.print(78, HEX) 得到 “4E”</li><li>Serial.print(1.23456, 0) 得到 “1”</li><li>Serial.print(1.23456, 2) 得到 “1.23”</li><li>Serial.print(1.23456, 4) 得到 “1.2346”</li><li>Serial.print(‘N’) 得到 “N”</li><li>Serial.print(“Hello world.”) 得到 “Hello world.”</li></ul></li><li>返回值：返回写入的字节数。</li></ul><p><strong>Serial.println()</strong></p><ul><li>描述：串口输出数据并换行。</li><li>原型：<ul><li><strong>Serial.println(val)</strong></li><li><strong>Serial.println(val, format)</strong></li></ul></li><li>参数：<ul><li>val：打印的值，任意数据类型。</li><li>config：输出的数据格式。</li></ul></li><li>返回值：返回写入的字节数。</li></ul><p><strong>Serial.available()</strong></p><ul><li>描述：判断串口缓冲区的状态，返回从串口缓冲区读取的字节数。</li><li>原型：<strong>Serial.available()</strong></li><li>参数：无。</li><li>返回值：可读取的字节数。</li></ul><p><strong>Serial.read()</strong></p><ul><li>描述：读取串口数据，一次读一个字符，读完后删除已读数据。</li><li>原型：<strong>Serial.read()</strong></li><li>参数：无。</li><li>返回值：返回串口缓存中第一个可读字节，当没有可读数据时返回-1，整数类型。</li></ul><p><strong>Serial.readBytes()</strong></p><ul><li>描述：从串口读取指定长度的字符到缓存数组。</li><li>原型：<strong>Serial.readBytes(buffer, length)</strong></li><li>参数：<ul><li>buffer：缓存变量。</li><li>length：设定的读取长度。</li></ul></li><li>返回值：返回存入缓存的字符数。</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-通过数据线连接开发板到PC机。"><a href="#1-通过数据线连接开发板到PC机。" class="headerlink" title="1. 通过数据线连接开发板到PC机。"></a>1. 通过数据线连接开发板到PC机。</h3><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   Serial   串口通讯实验*/</span><span class="token keyword">int</span> incomedate <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置串口波特率9600</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">78</span><span class="token punctuation">,</span> BIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "1001110"</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">78</span><span class="token punctuation">,</span> OCT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "116"</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">78</span><span class="token punctuation">,</span> DEC<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "78"</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">78</span><span class="token punctuation">,</span> HEX<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "4E"</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1.23456</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "1"</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1.23456</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "1.23"</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1.23456</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "1.2346"</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">'N'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "N"</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello world."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// "Hello world."</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>Serial<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//串口接收到数据</span>  <span class="token punctuation">{</span>    incomedate <span class="token operator">=</span> Serial<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取串口接收到的数据</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>incomedate <span class="token operator">==</span> <span class="token string">'H'</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Good Job!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-设置好对应端口号和开发板类型进行程序下载。"><a href="#3-设置好对应端口号和开发板类型进行程序下载。" class="headerlink" title="3. 设置好对应端口号和开发板类型进行程序下载。"></a>3. 设置好对应端口号和开发板类型进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401165120.jpg" alt="程序下载"></p><h3 id="4-打开串口监视器，设置波特率9600，观察串口打印信息。输入”H”，串口返回”Good-Job-”。"><a href="#4-打开串口监视器，设置波特率9600，观察串口打印信息。输入”H”，串口返回”Good-Job-”。" class="headerlink" title="4. 打开串口监视器，设置波特率9600，观察串口打印信息。输入”H”，串口返回”Good Job!”。"></a>4. 打开串口监视器，设置波特率9600，观察串口打印信息。输入”H”，串口返回”Good Job!”。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401165121.jpg" alt="实验现象"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 串口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇22—74HC595扩展IO</title>
      <link href="/posts/d2dd.html"/>
      <url>/posts/d2dd.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164507.jpg" alt=""></p><p>Arduino开发板的普通IO引脚是有限的，必要时要对IO口进行扩展，才能满足外部设备对IO口的需求。本篇介绍74HC595芯片，使用它来扩展Arduino的IO口，用3个IO来控制8路LED灯。</p><h2 id="1-74HC595介绍"><a href="#1-74HC595介绍" class="headerlink" title="1. 74HC595介绍"></a>1. 74HC595介绍</h2><p>74HC595芯片是一个串行输入，并行输出设备。其内部包括一个8位移位寄存器、一个存储器以及三态输出门电路，其中移位寄存器和存储器都有相互独立的时钟。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164511.jpg" alt="74HC595芯片"></p><h3 id="1-引脚说明"><a href="#1-引脚说明" class="headerlink" title="1. 引脚说明"></a>1. 引脚说明</h3><p>74HC595芯片引脚定义说明如下所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164512.jpg" alt="管脚定义"></p><ul><li><p>VCC、GND为芯片供电管脚，工作电压5V。</p></li><li><p>Q0~Q7这8个引脚是芯片的输出引脚。</p></li><li><p>DS引脚为串行输入引脚。我们需要将数据一位一位的写入该引脚。</p></li><li><p>STCP引脚为锁存引脚。当移位寄存器的8位数据全部传输完毕后，通过控制此引脚将数据复制到锁存器准备并行输出。</p></li><li><p>SHCP引脚为时钟引脚。通过控制此引脚将数据写入移位寄存器。</p></li><li><p>OE引脚为输出使能。其作用是控制锁存器里的数据是否最终输出到Q0-Q7输出引脚上。低电平时输出，高电平时不输出，本实验直接接在GND使其一直保持低电平输出数据。</p></li><li><p>MR是用来重置内部寄存器的引脚。低电平时重置内部寄存器。本实验直接连接在VCC上一直保持高电平。</p></li><li><p>Q7S引脚为串行输出引脚，专门用于芯片级联。</p></li></ul><h3 id="2-操作说明"><a href="#2-操作说明" class="headerlink" title="2. 操作说明"></a>2. 操作说明</h3><p>根据74HC595引脚说明，有三个重要的引脚：数据引脚(data)、锁存引脚(latch)、时钟引脚(clock)。</p><table><thead><tr><th>74HC595操作步骤</th><th>操作说明</th></tr></thead><tbody><tr><td>latch = LOW</td><td>只有为low时才可以输入数据</td></tr><tr><td>data</td><td>通过data传输数据第一位，HIGH/LOW</td></tr><tr><td>clock = HIGH</td><td>数据锁存</td></tr><tr><td>clock = LOW</td><td>准备下一个</td></tr><tr><td>data…</td><td>继续上面步骤，直到传输完成</td></tr><tr><td>clock = HIGH</td><td>储存全部的数据</td></tr><tr><td>clock = LOW</td><td>禁止数据再进行传输</td></tr><tr><td>latch = HIGH</td><td>并行送出数据</td></tr></tbody></table><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>74HC595芯片</li><li>8个220Ω限流电阻</li><li>8个LED发光二极管</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>8个LED发光二极管的负极接开发板GND,正极分别接入220Ω限流电阻，电阻另一端分别接入74HC595芯片的Q0~Q7输出引脚。</p><p>74HC595的VCC、MR引脚接入开发板5V，OE、GND引脚接入开发板的GND。DS、SHCP、STCP这三个控制引脚分别接入开发板的8、9、10数字引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164508.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164510.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   Shift   74HC595扩展IO，串行驱动8路LED灯*/</span><span class="token keyword">int</span> latchPin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//锁存引脚</span><span class="token keyword">int</span> clockPin <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//时钟引脚</span><span class="token keyword">int</span> dataPin <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数据引脚</span><span class="token keyword">void</span> <span class="token function">setup</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>latchPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>clockPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>dataPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//让三个脚都是输出状态</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> data <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> data <span class="token operator">&lt;</span> <span class="token number">255</span><span class="token punctuation">;</span> data<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>latchPin<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将ST_CP口上加低电平让芯片准备好接收数据</span>    <span class="token function">shiftOut</span><span class="token punctuation">(</span>dataPin<span class="token punctuation">,</span> clockPin<span class="token punctuation">,</span> LSBFIRST<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>latchPin<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将ST_CP这个针脚恢复到高电平</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//暂停1秒钟观看显示效果</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164509.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>8个LED灯移位进行亮灭显示。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164513.gif" alt="实验现象"></p><h2 id="5-函数介绍"><a href="#5-函数介绍" class="headerlink" title="5. 函数介绍"></a>5. 函数介绍</h2><p><strong>shiftOut()</strong></p><ul><li>描述：将数据在时钟引脚脉冲控制下按位移出写入到数字引脚。</li><li>函数原型：<br>  <strong>shiftOut(dataPin, clockPin, bitOrder, value)</strong></li><li>参数：<ul><li>dataPin: 数据输入引脚。</li><li>clockPin: 时钟引脚。</li><li>bitOrder: 移位顺序。MSBFIRST(高位在前)、LSBFIRST(低位在前)。</li><li>value: 需要移位的数据。</li></ul></li><li>返回值：没有。</li></ul><h2 id="6-实验分析"><a href="#6-实验分析" class="headerlink" title="6. 实验分析"></a>6. 实验分析</h2><p>程序中将74HC595三个控制引脚设置为输出模式，然后使用shiftOut()函数将数据进行移位写入74HC595的移位寄存器，然后通过控制锁存引脚将数据进行锁存输出。shiftOut()函数的value参数是一个字节长度，即每执行一次会将一个字节(最大值255)进行移位输出。如果移位的数据大于一个字节，需要执行两次shiftOut()函数，例如：</p><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">//Do this for MSBFIRST serial</span><span class="token keyword">int</span> data <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// shift out highbyte</span><span class="token function">shiftOut</span><span class="token punctuation">(</span>dataPin<span class="token punctuation">,</span> clock<span class="token punctuation">,</span> MSBFIRST<span class="token punctuation">,</span> <span class="token punctuation">(</span>data <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// shift out lowbyte</span><span class="token function">shiftOut</span><span class="token punctuation">(</span>dataPin<span class="token punctuation">,</span> clock<span class="token punctuation">,</span> MSBFIRST<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Or do this for LSBFIRST serial</span>data <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// shift out lowbyte</span><span class="token function">shiftOut</span><span class="token punctuation">(</span>dataPin<span class="token punctuation">,</span> clock<span class="token punctuation">,</span> LSBFIRST<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// shift out highbyte</span><span class="token function">shiftOut</span><span class="token punctuation">(</span>dataPin<span class="token punctuation">,</span> clock<span class="token punctuation">,</span> LSBFIRST<span class="token punctuation">,</span> <span class="token punctuation">(</span>data <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> Led </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇21—点阵流动显示</title>
      <link href="/posts/2d91.html"/>
      <url>/posts/2d91.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164337.jpg" alt=""></p><p>在各种公共场合看到的点阵屏大多都有流动显示效果，显示内容可以上下左右的滚动，本篇我们来实现点阵屏的流动显示。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>8*8点阵屏</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>依然是前篇点阵屏电路连接方式。根据点阵屏管脚定义，点阵屏的[9, 14, 8, 12, 1, 7, 2, 5]分别连接开发板的[6,11, 5, 9, 14, 4, 15, 2]，点阵屏的[13, 3, 4, 10, 6, 11, 15, 16]分别连接开发板的[10,16, 17, 7, 3, 8, 12, 13]。</p><p>这里需要注意，Uno R3开发板的A0<del>A5也可以做普通GPIO使用，编号分别为14</del>19。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164336.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164339.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   Roll   点阵屏流动显示*/</span><span class="token keyword">int</span> leds<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//点阵屏正极引脚</span><span class="token keyword">int</span> gnds<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//点阵屏负极引脚</span><span class="token comment" spellcheck="true">//字库</span><span class="token keyword">char</span> test<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x8A</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0xA2</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -0-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -1-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0x8A</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -2-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0xCC</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -3-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -4-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0xA2</span><span class="token punctuation">,</span> <span class="token number">0xA2</span><span class="token punctuation">,</span> <span class="token number">0xA2</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -5-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -6-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0xA0</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -7-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -8-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -9-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -A-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -B-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -C-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -D-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -E-</span>  <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// -F-</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">pinMode</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pinMode</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//负极引脚拉高，熄灭所有LED</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">ledclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//将点阵屏正极ladies，负极拉高，关断显示</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//字符显示</span><span class="token keyword">void</span> <span class="token function">ledShow</span><span class="token punctuation">(</span><span class="token keyword">char</span> num<span class="token punctuation">,</span> <span class="token keyword">char</span> dat<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dat <span class="token operator">&amp;</span> <span class="token number">0x80</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1 0 0 0 0 0 0 0</span>    dat <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">delayMicroseconds</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">ledclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> <span class="token number">120</span><span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//控制流动显示内容</span>  <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">200</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//循环显示达到延时效果</span>    <span class="token punctuation">{</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> c <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//8列循环扫描，达到点阵屏驱动效果</span>      <span class="token punctuation">{</span>        <span class="token function">ledShow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> test<span class="token punctuation">[</span>c <span class="token operator">+</span> a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164338.jpg" alt="程序下载"></p><h3 id="4-程序下载后，点阵屏从右往左流动显示。"><a href="#4-程序下载后，点阵屏从右往左流动显示。" class="headerlink" title="4. 程序下载后，点阵屏从右往左流动显示。"></a>4. 程序下载后，点阵屏从右往左流动显示。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164315.gif" alt="流动显示"></p><h3 id="5-我们对loop-部分的程序进行修改，来改变每次流动的列数。"><a href="#5-我们对loop-部分的程序进行修改，来改变每次流动的列数。" class="headerlink" title="5. 我们对loop()部分的程序进行修改，来改变每次流动的列数。"></a>5. 我们对loop()部分的程序进行修改，来改变每次流动的列数。</h3><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//控制流动显示内容</span>  <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">200</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//循环显示达到延时效果</span>    <span class="token punctuation">{</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> c <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//8列循环扫描，达到点阵屏驱动效果</span>      <span class="token punctuation">{</span>        <span class="token function">ledShow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> test<span class="token punctuation">[</span>c <span class="token operator">+</span> a<span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="6-当每次移动8列时，就会整屏覆盖翻页显示，效果如下："><a href="#6-当每次移动8列时，就会整屏覆盖翻页显示，效果如下：" class="headerlink" title="6. 当每次移动8列时，就会整屏覆盖翻页显示，效果如下："></a>6. 当每次移动8列时，就会整屏覆盖翻页显示，效果如下：</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401164240.gif" alt="翻页显示"></p><h2 id="3-实验分析"><a href="#3-实验分析" class="headerlink" title="3. 实验分析"></a>3. 实验分析</h2><ol><li>程序中定义了一个数组用于存储需要显示的字库，每8个表示一个字符，然后通过ledShow()函数来进行解析显示。使用for循环控制指定的列然后将传入的字符数据进行按位与，取出每一位进行操作。</li><li>在loop()中三重for循环，最里面控制8列扫描显示，中间for循环用于控制显示时间，最外层for循环用于控制流动位置。</li><li>依次移动需要显示的字符数据，就达到了流动显示效果。可以控制每次移动的间距，当每次移动8列就会实现整屏覆盖的效果。</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 点阵屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇20—心动点阵</title>
      <link href="/posts/e6ca.html"/>
      <url>/posts/e6ca.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163757.jpg" alt=""></p><p>本篇继续学习LED点阵屏的使用，实现心型跳动效果。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>8*8点阵屏</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>根据点阵屏管脚定义，点阵屏的[9, 14, 8, 12, 1, 7, 2, 5]分别连接开发板的[6,11, 5, 9, 14, 4, 15, 2]，这8个引脚为LED的正极；</p><p>点阵屏的[13, 3, 4, 10, 6, 11, 15, 16]分别连接开发板的[10,16, 17, 7, 3, 8, 12, 13]，这8个引脚为LED的负极。</p><p>这里需要注意，Uno R3开发板的A0<del>A5也可以做普通GPIO使用，编号分别为14</del>19。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163800.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163758.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   Heart   点阵屏心型跳动显示*/</span><span class="token keyword">int</span> leds<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//点阵屏正极引脚</span><span class="token keyword">int</span> gnds<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//点阵屏负极引脚</span><span class="token comment" spellcheck="true">//大“心型”的数据</span><span class="token keyword">int</span> table1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//小“心型”的数据</span><span class="token keyword">int</span> table2<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">pinMode</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pinMode</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//负极引脚拉高，熄灭所有LED</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">ledclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//将点阵屏正极ladies，负极拉高，关断显示</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//心型显示函数</span><span class="token keyword">void</span> <span class="token function">ledShow</span><span class="token punctuation">(</span><span class="token keyword">int</span> temp<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">delayMicroseconds</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">ledclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//利用for循环达到刷新延时的效果</span>  <span class="token punctuation">{</span>    <span class="token function">ledShow</span><span class="token punctuation">(</span>table1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//利用for循环达到刷新延时的效果</span>  <span class="token punctuation">{</span>    <span class="token function">ledShow</span><span class="token punctuation">(</span>table2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163759.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>点阵屏上心型在不断跳动。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163801.gif" alt="实验现象"></p><h2 id="4-实验分析"><a href="#4-实验分析" class="headerlink" title="4. 实验分析"></a>4. 实验分析</h2><p>程序中定义了两个二维数组，分别用来存储两个不同大小的心型显示数据，在显示函数中通过两个for循环来遍历数组。在loop()中没有使用delay()函数来做延时处理，因为与数码管类似，这种LED显示设备需要不断刷新，delay()函数使程序暂停等待延时会造成显示闪烁甚至熄灭的情况。使用for循环来控制显示的次数，进而控制显示时间来达到延时效果。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 点阵屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇19—点阵屏</title>
      <link href="/posts/dc39.html"/>
      <url>/posts/dc39.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163342.jpg" alt=""></p><p>将8个LED发光二极管封装在一起就组成了数码管，将更多的LED组合在一起就组成了点阵屏。本篇我们来认识点阵屏，通过Arduino的IO口直接驱动点阵屏来了解其驱动方式。</p><h2 id="1-点阵屏介绍"><a href="#1-点阵屏介绍" class="headerlink" title="1. 点阵屏介绍"></a>1. 点阵屏介绍</h2><p>LED点阵屏由LED发光二极管组成，通过控制LED亮灭来显示文字、图片、动画、视频等，被广泛应用于公共场合做信息展示，如广告屏、公告牌等。</p><p>LED点阵屏按照LED发光颜色可分为单色、双色、三色灯等，可显示红、黄、绿甚至是真彩色。根据LED的数量又分为4x4、8x8、16x16等不同类型。多色点阵屏工艺要求相对较高，需要考虑多种颜色混合时对色彩的影响。这里我们通过单色8x8点阵屏来了解其原理。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163345.jpg" alt="8x8点阵屏"></p><p>不同点阵屏封装不同，8x8点阵屏由8行8列共64个LED灯组成，其内部结构如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163346.jpg" alt="8x8内部结构"></p><p>每个LED放置在行线和列线的交叉点上，当对应的某一行电平拉高，某一列电拉低，则对应交叉点的LED就会点亮。</p><p>8x8点阵屏有16个管脚，将有丝印的一边朝下，逆时针编号为1<del>8，9</del>16。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163348.jpg" alt="8X8点阵管脚"></p><p>其对应内部管脚定义如下如所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163347.jpg" alt="点阵屏管脚定义"></p><p>比如我们要点亮第一行第一列LED灯，则对应将点阵屏的第9脚拉高，第13脚拉低，其他LED控制以此类推即可。</p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>8*8点阵屏</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>根据点阵屏管脚定义，点阵屏的[9, 14, 8, 12, 1, 7, 2, 5]分别连接开发板的[6,11, 5, 9, 14, 4, 15, 2]，这8个引脚为LED的正极；</p><p>点阵屏的[13, 3, 4, 10, 6, 11, 15, 16]分别连接开发板的[10,16, 17, 7, 3, 8, 12, 13]，这8个引脚为LED的负极。</p><p>这里需要注意，Uno R3开发板的A0<del>A5也可以做普通GPIO使用，编号分别为14</del>19。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163341.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163343.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * Matrix * 点阵屏显示驱动 */</span><span class="token keyword">int</span> leds<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//点阵屏正极引脚</span><span class="token keyword">int</span> gnds<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//点阵屏负极引脚</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">pinMode</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pinMode</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//负极引脚拉高，熄灭所有LED</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">ledopen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//将点阵屏正极拉高，负极拉低，开启显示</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">ledclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//将点阵屏正极ladies，负极拉高，关断显示</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//逐列扫描</span><span class="token keyword">void</span> <span class="token function">ledCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">ledclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//逐行扫描</span><span class="token keyword">void</span> <span class="token function">ledRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>      <span class="token function">digitalWrite</span><span class="token punctuation">(</span>gnds<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>leds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">ledclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">ledopen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//全部打开</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">ledclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//全部关闭</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">ledCol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//列扫描</span>  <span class="token function">ledRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//行扫描</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163344.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>LED点阵屏点亮然后熄灭，然后逐列点亮，逐行点亮。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163325.gif" alt="实验现象"></p><h2 id="5-实验分析"><a href="#5-实验分析" class="headerlink" title="5. 实验分析"></a>5. 实验分析</h2><p>LED点阵屏不过是多个LED组合在一起来驱动，基本的驱动方式是逐行扫描或者逐列扫描。通过两个for循环嵌套来进行操作，外部循环控制列，内部循环遍历行，或者外部循环控制行，内部循环遍历列，相对操作还是非常简单的。当逐行或者逐列扫描足够快的时候，人眼就会因为视觉暂存而看到同时点亮的效果。</p><p>当对多块点阵屏进行操作时，使用IO引脚直接驱动的方式就显得不切实际了，一方面这需要占用很多的IO口，另一方面IO驱动能力毕竟有限，所以点阵屏还有专门的驱动电路和IC芯片来满足更高的应用要求。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 点阵屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇18—数字时钟</title>
      <link href="/posts/b847.html"/>
      <url>/posts/b847.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162958.jpg" alt=""></p><p>Arduino不但有外部中断，还有定时器中断，不同Arduino开发板其定时器数量及性能也各不相同，这取决于开发板主控制器。Uno R3开发板有三个定时器，本篇通过使用定时器库「TimerOne」来更新数码管显示，制作一个数字时钟。</p><p>Arduino提供了丰富的库，关于定时器的库包括「TimerOne」、「MsTimer2」等，更多的支持库的信息可从官网获取<a href="https://playground.arduino.cc/Main/LibraryList" target="_blank" rel="noopener">Libraries for Arduino</a>。</p><h2 id="1-定时器库安装"><a href="#1-定时器库安装" class="headerlink" title="1. 定时器库安装"></a>1. 定时器库安装</h2><p>在IDE中点击「项目」—「加载库」—「管理库」，查找「TimerOne」进行安装。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163015.jpg" alt="安装库"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>四位共阴极数码管</li><li>4个220Ω限流电阻</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>根据四位数码管的引脚图，a,b,c,d,e,f,g,dp引脚分别连接开发板的数字引脚7，6，5，10，11，8，9，4。数码管的1，2，3，4引脚分别串联220Ω限流电阻，电阻另一端分别连接开发板的数字引脚2，3，12，13。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163040.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163023.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   SevTimer   使用定时器驱动四位数码管实现数字时钟显示*/</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"TimerOne.h"</span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"SevSeg.h"</span></span>SevSeg sevseg<span class="token punctuation">;</span><span class="token keyword">int</span> Fen <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> Miao <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>byte numDigits <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数码管位数</span>byte digitPins<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数码管公共极连接Arduino的引脚</span>byte segmentPins<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数码管a,b,c,d,e,f,g,dp对应引脚</span>byte hardwareConfig <span class="token operator">=</span> COMMON_CATHODE <span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 共阴极数码管</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  sevseg<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>hardwareConfig<span class="token punctuation">,</span> numDigits<span class="token punctuation">,</span> digitPins<span class="token punctuation">,</span> segmentPins<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//初始化数码管</span>  Timer1<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token number">1000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化定时器为1s</span>  Timer1<span class="token punctuation">.</span><span class="token function">attachInterrupt</span><span class="token punctuation">(</span> timerIsr <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置中断回调函数</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  sevseg<span class="token punctuation">.</span><span class="token function">setNumber</span><span class="token punctuation">(</span>Fen <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">+</span> Miao<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置要显示的数据，不显示小数点</span>  sevseg<span class="token punctuation">.</span><span class="token function">refreshDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 必须重复运行刷新数码管显示</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">timerIsr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//定时器中断处理函数</span><span class="token punctuation">{</span>  Miao<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>Miao <span class="token operator">></span> <span class="token number">59</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    Miao <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    Fen<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Fen <span class="token operator">></span> <span class="token number">59</span><span class="token punctuation">)</span>      Fen <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163018.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>数码管1秒计数一次，满60秒分钟加一，实现数字时钟效果。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401163030.gif" alt="实验现象"></p><h2 id="5-实验分析"><a href="#5-实验分析" class="headerlink" title="5. 实验分析"></a>5. 实验分析</h2><p>数码管驱动依旧使用「SevSeg」，具体使用方法在前面文章有所介绍。在setup()中使用 Timer1.initialize(1000000)来初始化定时器，括号内为定时周期，以微妙为单位，所以这里的1000000为1秒。然后使用Timer1.attachInterrupt( timerIsr )来设置中断回调函数。我们在程序中要实现timerIsr()函数，在里面实现分钟和秒数的控制。</p><p>有了定时器，有了数码管，我们可以很方便的实现一些跟时钟有关的制作，你可以结合数码管和蜂鸣器，来实现倒计时提示的制作。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 数码管 </tag>
            
            <tag> 时钟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32 IO模拟实现软件串口</title>
      <link href="/posts/9829.html"/>
      <url>/posts/9829.html</url>
      
        <content type="html"><![CDATA[<p>最近项目中STM32的串口资源紧张，于是使用IO口进行模拟串口，现进行整理记录。</p><h2 id="1-实现思路"><a href="#1-实现思路" class="headerlink" title="1. 实现思路"></a>1. 实现思路</h2><p>IO口模拟串口的思路也比较简单，一切按照串口协议进行操作即可。</p><p>对于发送，计算好不同波特率对应的延时时间进行数据发送。</p><p>对于接收，稍微复杂。通过外部中断检测接收管脚的下降沿，检测到起始信号后开启定时器，定时器按照波特率设定好时间，每隔一段时间进入定时器中断接收数据，完成一个字节后关闭定时器。</p><h2 id="2-测试Demo说明"><a href="#2-测试Demo说明" class="headerlink" title="2. 测试Demo说明"></a>2. 测试Demo说明</h2><ul><li>TXD : PC13</li><li>RXD : PB14</li><li>波特率：9600 ，1-8-N</li></ul><h2 id="3-Demo功能"><a href="#3-Demo功能" class="headerlink" title="3. Demo功能"></a>3. Demo功能</h2><p>接收11个数据，然后把接收到的数据发送出去。</p><h2 id="4-程序实现"><a href="#4-程序实现" class="headerlink" title="4. 程序实现"></a>4. 程序实现</h2><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">define</span> OI_TXD    PCout(13)</span><span class="token macro property">#<span class="token directive keyword">define</span> OI_RXD    PBin(14)</span><span class="token macro property">#<span class="token directive keyword">define</span> BuadRate_9600    100</span>u8 len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//接收计数</span>u8 USART_buf<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//接收缓冲区</span><span class="token keyword">enum</span><span class="token punctuation">{</span>    COM_START_BIT<span class="token punctuation">,</span>    COM_D0_BIT<span class="token punctuation">,</span>    COM_D1_BIT<span class="token punctuation">,</span>    COM_D2_BIT<span class="token punctuation">,</span>    COM_D3_BIT<span class="token punctuation">,</span>    COM_D4_BIT<span class="token punctuation">,</span>    COM_D5_BIT<span class="token punctuation">,</span>    COM_D6_BIT<span class="token punctuation">,</span>    COM_D7_BIT<span class="token punctuation">,</span>    COM_STOP_BIT<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span>u8 recvStat <span class="token operator">=</span> COM_STOP_BIT<span class="token punctuation">;</span>u8 recvData <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">IO_TXD</span><span class="token punctuation">(</span>u8 Data<span class="token punctuation">)</span><span class="token punctuation">{</span>    u8 i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    OI_TXD <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token function">delay_us</span><span class="token punctuation">(</span>BuadRate_9600<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>Data<span class="token operator">&amp;</span><span class="token number">0x01</span><span class="token punctuation">)</span>            OI_TXD <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>          <span class="token keyword">else</span>            OI_TXD <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>             <span class="token function">delay_us</span><span class="token punctuation">(</span>BuadRate_9600<span class="token punctuation">)</span><span class="token punctuation">;</span>        Data <span class="token operator">=</span> Data<span class="token operator">>></span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    OI_TXD <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token function">delay_us</span><span class="token punctuation">(</span>BuadRate_9600<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">USART_Send</span><span class="token punctuation">(</span>u8 <span class="token operator">*</span>buf<span class="token punctuation">,</span> u8 len<span class="token punctuation">)</span><span class="token punctuation">{</span>    u8 t<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">IO_TXD</span><span class="token punctuation">(</span>buf<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token keyword">void</span> <span class="token function">IOConfig</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    GPIO_InitTypeDef  GPIO_InitStructure<span class="token punctuation">;</span>    NVIC_InitTypeDef NVIC_InitStructure<span class="token punctuation">;</span>     EXTI_InitTypeDef EXTI_InitStruct<span class="token punctuation">;</span>  <span class="token function">RCC_APB2PeriphClockCmd</span><span class="token punctuation">(</span>RCC_APB2Periph_AFIO<span class="token operator">|</span>RCC_APB2Periph_GPIOB<span class="token operator">|</span>RCC_APB2Periph_GPIOC<span class="token punctuation">,</span> ENABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//使能PB,PC端口时钟 </span>     <span class="token comment" spellcheck="true">//SoftWare Serial TXD</span>    GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Pin <span class="token operator">=</span> GPIO_Pin_13<span class="token punctuation">;</span>          GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Mode <span class="token operator">=</span> GPIO_Mode_Out_PP<span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//推挽输出</span>  GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Speed <span class="token operator">=</span> GPIO_Speed_50MHz<span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//IO口速度为50MHz     </span>  <span class="token function">GPIO_Init</span><span class="token punctuation">(</span>GPIOC<span class="token punctuation">,</span> <span class="token operator">&amp;</span>GPIO_InitStructure<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token function">GPIO_SetBits</span><span class="token punctuation">(</span>GPIOC<span class="token punctuation">,</span>GPIO_Pin_13<span class="token punctuation">)</span><span class="token punctuation">;</span>                             <span class="token comment" spellcheck="true">//SoftWare Serial RXD</span>    GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Pin <span class="token operator">=</span> GPIO_Pin_14<span class="token punctuation">;</span>  GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Mode <span class="token operator">=</span> GPIO_Mode_IPU<span class="token punctuation">;</span>  GPIO_InitStructure<span class="token punctuation">.</span>GPIO_Speed <span class="token operator">=</span> GPIO_Speed_50MHz<span class="token punctuation">;</span>            <span class="token function">GPIO_Init</span><span class="token punctuation">(</span>GPIOB<span class="token punctuation">,</span> <span class="token operator">&amp;</span>GPIO_InitStructure<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">GPIO_EXTILineConfig</span><span class="token punctuation">(</span>GPIO_PortSourceGPIOB<span class="token punctuation">,</span> GPIO_PinSource14<span class="token punctuation">)</span><span class="token punctuation">;</span>    EXTI_InitStruct<span class="token punctuation">.</span>EXTI_Line <span class="token operator">=</span> EXTI_Line14<span class="token punctuation">;</span>    EXTI_InitStruct<span class="token punctuation">.</span>EXTI_Mode<span class="token operator">=</span>EXTI_Mode_Interrupt<span class="token punctuation">;</span>    EXTI_InitStruct<span class="token punctuation">.</span>EXTI_Trigger<span class="token operator">=</span>EXTI_Trigger_Falling<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//下降沿触发中断</span>    EXTI_InitStruct<span class="token punctuation">.</span>EXTI_LineCmd<span class="token operator">=</span>ENABLE<span class="token punctuation">;</span>    <span class="token function">EXTI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>EXTI_InitStruct<span class="token punctuation">)</span><span class="token punctuation">;</span>    NVIC_InitStructure<span class="token punctuation">.</span>NVIC_IRQChannel<span class="token operator">=</span> EXTI15_10_IRQn <span class="token punctuation">;</span>     NVIC_InitStructure<span class="token punctuation">.</span>NVIC_IRQChannelPreemptionPriority<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>     NVIC_InitStructure<span class="token punctuation">.</span>NVIC_IRQChannelSubPriority <span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>      NVIC_InitStructure<span class="token punctuation">.</span>NVIC_IRQChannelCmd<span class="token operator">=</span>ENABLE<span class="token punctuation">;</span>      <span class="token function">NVIC_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>NVIC_InitStructure<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">TIM4_Int_Init</span><span class="token punctuation">(</span>u16 arr<span class="token punctuation">,</span>u16 psc<span class="token punctuation">)</span><span class="token punctuation">{</span>  TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure<span class="token punctuation">;</span>    NVIC_InitTypeDef NVIC_InitStructure<span class="token punctuation">;</span>    <span class="token function">RCC_APB1PeriphClockCmd</span><span class="token punctuation">(</span>RCC_APB1Periph_TIM4<span class="token punctuation">,</span> ENABLE<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//时钟使能</span>    <span class="token comment" spellcheck="true">//定时器TIM4初始化</span>    TIM_TimeBaseStructure<span class="token punctuation">.</span>TIM_Period <span class="token operator">=</span> arr<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置在下一个更新事件装入活动的自动重装载寄存器周期的值    </span>    TIM_TimeBaseStructure<span class="token punctuation">.</span>TIM_Prescaler <span class="token operator">=</span>psc<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置用来作为TIMx时钟频率除数的预分频值</span>    TIM_TimeBaseStructure<span class="token punctuation">.</span>TIM_ClockDivision <span class="token operator">=</span> TIM_CKD_DIV1<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置时钟分割:TDTS = Tck_tim</span>    TIM_TimeBaseStructure<span class="token punctuation">.</span>TIM_CounterMode <span class="token operator">=</span> TIM_CounterMode_Up<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//TIM向上计数模式</span>    <span class="token function">TIM_TimeBaseInit</span><span class="token punctuation">(</span>TIM4<span class="token punctuation">,</span> <span class="token operator">&amp;</span>TIM_TimeBaseStructure<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//根据指定的参数初始化TIMx的时间基数单位</span>    <span class="token function">TIM_ClearITPendingBit</span><span class="token punctuation">(</span>TIM4<span class="token punctuation">,</span> TIM_FLAG_Update<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">TIM_ITConfig</span><span class="token punctuation">(</span>TIM4<span class="token punctuation">,</span>TIM_IT_Update<span class="token punctuation">,</span>ENABLE <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//使能指定的TIM3中断,允许更新中断</span>    <span class="token comment" spellcheck="true">//中断优先级NVIC设置</span>    NVIC_InitStructure<span class="token punctuation">.</span>NVIC_IRQChannel <span class="token operator">=</span> TIM4_IRQn<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//TIM4中断</span>    NVIC_InitStructure<span class="token punctuation">.</span>NVIC_IRQChannelPreemptionPriority <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//先占优先级1级</span>    NVIC_InitStructure<span class="token punctuation">.</span>NVIC_IRQChannelSubPriority <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//从优先级1级</span>    NVIC_InitStructure<span class="token punctuation">.</span>NVIC_IRQChannelCmd <span class="token operator">=</span> ENABLE<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//IRQ通道被使能</span>    <span class="token function">NVIC_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>NVIC_InitStructure<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//初始化NVIC寄存器             </span><span class="token punctuation">}</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token function">NVIC_PriorityGroupConfig</span><span class="token punctuation">(</span>NVIC_PriorityGroup_2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置中断优先级分组为组2：2位抢占优先级，2位响应优先级</span>     <span class="token function">delay_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">IOConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">TIM4_Int_Init</span><span class="token punctuation">(</span><span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">71</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//1M计数频率</span>  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token function">USART_Send</span><span class="token punctuation">(</span>USART_buf<span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">EXTI15_10_IRQHandler</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">EXTI_GetFlagStatus</span><span class="token punctuation">(</span>EXTI_Line14<span class="token punctuation">)</span> <span class="token operator">!=</span> RESET<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>OI_RXD <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>         <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>recvStat <span class="token operator">==</span> COM_STOP_BIT<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                recvStat <span class="token operator">=</span> COM_START_BIT<span class="token punctuation">;</span>                <span class="token function">TIM_Cmd</span><span class="token punctuation">(</span>TIM4<span class="token punctuation">,</span> ENABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token function">EXTI_ClearITPendingBit</span><span class="token punctuation">(</span>EXTI_Line14<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">TIM4_IRQHandler</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">TIM_GetFlagStatus</span><span class="token punctuation">(</span>TIM4<span class="token punctuation">,</span> TIM_FLAG_Update<span class="token punctuation">)</span> <span class="token operator">!=</span> RESET<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">TIM_ClearITPendingBit</span><span class="token punctuation">(</span>TIM4<span class="token punctuation">,</span> TIM_FLAG_Update<span class="token punctuation">)</span><span class="token punctuation">;</span>             recvStat<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>recvStat <span class="token operator">==</span> COM_STOP_BIT<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">TIM_Cmd</span><span class="token punctuation">(</span>TIM4<span class="token punctuation">,</span> DISABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>            USART_buf<span class="token punctuation">[</span>len<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> recvData<span class="token punctuation">;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>OI_RXD<span class="token punctuation">)</span>        <span class="token punctuation">{</span>            recvData <span class="token operator">|</span><span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>recvStat <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            recvData <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>recvStat <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>        <span class="token punctuation">}</span></code></pre><h2 id="5-Demo下载"><a href="#5-Demo下载" class="headerlink" title="5. Demo下载"></a>5. Demo下载</h2><p>Demo工程下载地址<a href="https://github.com/TonyIOT/SoftWareSerial.git" target="_blank" rel="noopener">github</a>。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 串口 </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇17—四位数码管的驱动</title>
      <link href="/posts/ddf7.html"/>
      <url>/posts/ddf7.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162619.jpg" alt=""></p><p>本篇介绍四位数码管的使用，通过数码管库驱动四位数码管从0开始累加显示数字。</p><h2 id="1-四位数码管介绍"><a href="#1-四位数码管介绍" class="headerlink" title="1. 四位数码管介绍"></a>1. 四位数码管介绍</h2><p>根据实际需要，把多个一位数码管封装在一起就成了多位数码管。常见的有两位、三位、四位、五位、六位等。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162626.jpg" alt="多位数码管"></p><p>数码管根据位数不同，其封装的引脚也各不相同。但其内部都是将单个数码管的段选线a,b,c,d,e,f,g,dp对应连接在一起，公共极则相互独立。使用时分别通过控制不同的位选线（即单个数码管的公共极）来控制单个数码管的显示。以人眼难以分辨的速度进行刷新显示，即可达到多个数码管同时显示的效果。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162623.jpg" alt="四位数码管"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>四位共阴极数码管</li><li>4个220Ω限流电阻</li></ul><p>四位数码管引脚分布如下图所示，其中1，2，3，4表示对应位数码管的公共极。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162630.jpg" alt="四位数码管引脚图"></p><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3.实验步骤"></a>3.实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>本次实验连线非常多，要注意不要接错。根据四位数码管的引脚图，a,b,c,d,e,f,g,dp引脚分别连接开发板的数字引脚7，6，5，10，11，8，9，4。数码管的1，2，3，4引脚分别串联220Ω限流电阻，电阻另一端分别连接开发板的数字引脚2，3，12，13。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162644.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162634.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * SevSegFour * 驱动四位数码管显示0到9999 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"SevSeg.h"</span></span>SevSeg sevseg<span class="token punctuation">;</span>byte numDigits <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数码管位数</span>byte digitPins<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数码管公共极连接Arduino的引脚</span>byte segmentPins<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数码管a,b,c,d,e,f,g,dp对应引脚</span>byte hardwareConfig <span class="token operator">=</span> COMMON_CATHODE <span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 共阴极数码管</span><span class="token keyword">int</span> numToShow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> delaycount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  sevseg<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>hardwareConfig<span class="token punctuation">,</span> numDigits<span class="token punctuation">,</span> digitPins<span class="token punctuation">,</span> segmentPins<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//初始化数码管</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  delaycount<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>delaycount  <span class="token operator">==</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//通过变量自加来达到延时效果，如果使用delay函数则会打断数码管显示</span>    delaycount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    numToShow<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>numToShow <span class="token operator">></span> <span class="token number">9999</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    numToShow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  sevseg<span class="token punctuation">.</span><span class="token function">setNumber</span><span class="token punctuation">(</span>numToShow<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置要显示的数据，不显示小数点</span>  sevseg<span class="token punctuation">.</span><span class="token function">refreshDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 必须重复运行刷新数码管显示</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162639.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>数码管从0开始累加显示数据。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162648.gif" alt="实验现象"></p><h2 id="5-实验分析"><a href="#5-实验分析" class="headerlink" title="5. 实验分析"></a>5. 实验分析</h2><p>程序中根据实验原理图，通过数码管库函数进行数码管初始化，不断对numToShow变量进行累加，然后对数码管进行设置数据、刷新显示的操作。在程序中我们没有使用delay()函数进行延时，而是通过不断累加delaycount变量，在其达到理想阈值时对numToShow变量进行累加。</p><p>因为数码管需要不断重复刷新数据才能保持显示，若使用delay()进行延时，则程序将停止进行等待，这段时间数码管得不到刷新，显示就会受到影响，数码管会变暗、闪烁甚至熄灭。更加理想的做法是通过定时器来对数码管进行刷新。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 数码管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇16—数码管库的使用</title>
      <link href="/posts/554d.html"/>
      <url>/posts/554d.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162320.jpg" alt=""></p><p>Arduino官方提供了丰富的驱动库来方便对外设进行操作，很多爱好者也在开源精神下提供了很多第三方库。本篇介绍数码管库的使用，通过读取电位器输入，使用数码管库驱动数码管显示对应数据。</p><p>SevSeg库是数码管驱动库，常用于对4位数码管的驱动，该库可从Arduino IDE管理库中搜索安装，也可从github中获取，<a href="https://github.com/DeanIsMe/SevSeg" target="_blank" rel="noopener">github地址</a>。</p><h2 id="1-数码管库安装"><a href="#1-数码管库安装" class="headerlink" title="1.数码管库安装"></a>1.数码管库安装</h2><h3 id="1-启动Arduino-IDE，点击「项目」—「加载库」—「管理库」。"><a href="#1-启动Arduino-IDE，点击「项目」—「加载库」—「管理库」。" class="headerlink" title="1. 启动Arduino IDE，点击「项目」—「加载库」—「管理库」。"></a>1. 启动Arduino IDE，点击「项目」—「加载库」—「管理库」。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162324.jpg" alt="管理库"></p><h3 id="2-查找「SevSeg」，可以找到两个库，我们选择第一个，进行安装。"><a href="#2-查找「SevSeg」，可以找到两个库，我们选择第一个，进行安装。" class="headerlink" title="2. 查找「SevSeg」，可以找到两个库，我们选择第一个，进行安装。"></a>2. 查找「SevSeg」，可以找到两个库，我们选择第一个，进行安装。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162328.jpg" alt="安装库"></p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>共阴极数码管</li><li>1个220Ω限流电阻</li><li>电位器</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>数码管的A,B,C,D,E,F,G,DP引脚分别接入开发板的数字管脚7，6，5，10，11，8，9，4。数码管公共端接限流电阻，电阻另一端接数字管脚3。电位器中间管脚接A0，两端分别接5V和GND。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162332.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162336.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * SevSeg * 使用数码管库驱动数码管，根据A0模拟输入显示对应数字 */</span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"SevSeg.h"</span></span>SevSeg sevseg<span class="token punctuation">;</span>byte numDigits <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数码管位数</span>byte digitPins<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数码管公共极连接Arduino的引脚</span>byte segmentPins<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数码管a,b,c,d,e,f,g,dp对应引脚</span>byte hardwareConfig <span class="token operator">=</span> COMMON_CATHODE <span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 共阴极数码管</span><span class="token keyword">int</span> readValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//保存读到的模拟值</span><span class="token keyword">int</span> showValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//需要显示的数据</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  sevseg<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span>hardwareConfig<span class="token punctuation">,</span> numDigits<span class="token punctuation">,</span> digitPins<span class="token punctuation">,</span> segmentPins<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//初始化数码管</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  readValue <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>A0<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//读取A0模拟口的数值（0-5V 对应0-1023取值）</span>  showValue <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>readValue<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1023</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将0-1023之间的数据映射成0到9之间的数据</span>  sevseg<span class="token punctuation">.</span><span class="token function">setNumber</span><span class="token punctuation">(</span>showValue<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数码管显示</span>  sevseg<span class="token punctuation">.</span><span class="token function">refreshDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 必须重复运行刷新数码管显示</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162340.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>随着电位器的转动，数码管显示0到9的数字。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401162345.gif" alt="实验现象"></p><h2 id="5-库函数介绍"><a href="#5-库函数介绍" class="headerlink" title="5. 库函数介绍"></a>5. 库函数介绍</h2><h3 id="1-sevseg-begin-hardwareConfig-numDigits-digitPins-segmentPins-函数："><a href="#1-sevseg-begin-hardwareConfig-numDigits-digitPins-segmentPins-函数：" class="headerlink" title="1. sevseg.begin(hardwareConfig, numDigits, digitPins, segmentPins)函数："></a>1. sevseg.begin(hardwareConfig, numDigits, digitPins, segmentPins)函数：</h3><ul><li><strong>hardwareConfig</strong>：使用的是共阳极数码管还是共阴极数码管。<ul><li><strong>COMMON_CATHODE</strong>：共阴极。</li><li><strong>COMMON_ANODE</strong>：共阳极。</li></ul></li><li><strong>numDigits</strong>：数码管位数，我们这里使用的是一位数码管，故其值设置为1。</li><li><strong>digitPins</strong>：数组形式，用来存储数码管公共极连接的引脚号。此库多用来驱动四位数码管，本实验中只用一位，故数组第一个成员为3(对应实际电路连接)，其他成员填入未使用的引脚即可。</li><li><strong>segmentPins</strong>：数组形式，用来存储数码管从a到dp所对应连接的引脚号。</li></ul><h3 id="2-sevseg-setNumber-numToShow-decPlaces-函数："><a href="#2-sevseg-setNumber-numToShow-decPlaces-函数：" class="headerlink" title="2. sevseg.setNumber(numToShow, decPlaces)函数："></a>2. sevseg.setNumber(numToShow, decPlaces)函数：</h3><ul><li><strong>numToShow</strong>：要显示的数据，可以为整数、浮点数。</li><li><strong>decPlaces</strong>：小数点显示的位置，从最低有效位开始计算，若省略或者设置为-1则表示不显示小数点。</li></ul><h3 id="3-sevseg-refreshDisplay-函数："><a href="#3-sevseg-refreshDisplay-函数：" class="headerlink" title="3. sevseg.refreshDisplay()函数："></a>3. sevseg.refreshDisplay()函数：</h3><p>此函数需要不断重复执行，反复刷新才能使数码管显示。若程序中有其他延时则会对显示产生影响。</p><h2 id="6-实验分析"><a href="#6-实验分析" class="headerlink" title="6. 实验分析"></a>6. 实验分析</h2><p>程序中使用SevSeg驱动库，根据实际电路连接进行库的初始化。在loop()函数中，读取A0模拟输入引脚的数据，通过map()函数重新把数据映射成数字0到9，然后使用sevseg.setNumber()函数进行数据设置，然后通过显示刷新函数进行刷新显示。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 数码管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇15—随机骰子</title>
      <link href="/posts/8d40.html"/>
      <url>/posts/8d40.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401161929.jpg" alt=""></p><p>上一篇介绍了数码管的使用，一位数码管可显示数字0到9。本篇使用random()函数产生随机数并在数码管上进行显示，制作一个随机骰子。</p><p>在Arduino中，random()函数用来产生伪随机数，可以传入一个区间，产生此区间内的随机数。通常情况下，在使用random()函数之前，需要使用randomSeed()来初始化随机数生成器，指定一个随机数种子。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>共阴极数码管</li><li>1个220Ω限流电阻</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>数码管的A,B,C,D,E,F,G,DP引脚分别接入开发板的数字管脚7，6，5，10，11，8，9，4。数码管公共端接限流电阻，电阻另一端接GND。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401161946.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401161935.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   Random   通过Random随机显示0到9的数字*/</span><span class="token comment" spellcheck="true">//设置控制各段的数字IO脚，具体几号引脚对应哪一段，来源为数码管官方引脚图。</span><span class="token keyword">int</span> pin_a <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_b <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_c <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_d <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_e <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_f <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_g <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_p <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token keyword">int</span> num<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//根据共阴极数码管段码表定义0~9显示的各段开关状态</span><span class="token keyword">int</span> numTable<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//1为点亮，0为关闭</span>  <span class="token comment" spellcheck="true">//a  b  c  d  e  f  g  dp</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//0</span>  <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//1</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//2</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//3</span>  <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//4</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//5</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//6</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//7</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//8</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//9</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">11</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token function">pinMode</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置4～11引脚为输出模式</span>  <span class="token punctuation">}</span>  <span class="token function">randomSeed</span><span class="token punctuation">(</span><span class="token function">analogRead</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//根据索引显示数字</span><span class="token keyword">void</span> <span class="token function">showNum</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_a<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置a 引脚的电平</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_b<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置b 引脚的电平</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_c<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置c 引脚的电平</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_d<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置d 引脚的电平</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_e<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置e 引脚的电平</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_f<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置f 引脚的电平</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_g<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置g 引脚的电平</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_p<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置dp引脚的电平</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  num <span class="token operator">=</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//产生随机数</span>  <span class="token function">showNum</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//显示随机数</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401161941.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>随机显示0到9之间的数字。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401161952.gif" alt="实验现象"></p><h2 id="4-函数介绍"><a href="#4-函数介绍" class="headerlink" title="4. 函数介绍"></a>4. 函数介绍</h2><p><strong>random()</strong></p><ul><li>描述：生成伪随机数。</li><li>函数原型：<ul><li><strong>random(max)</strong></li><li><strong>random(min,max)</strong></li></ul></li><li>参数：<ul><li>min: 随机数区间下限值，且包括在内。此参数可选，省略则从0开始。</li><li>max: 随机数区间上限值，且不包括在内。</li></ul></li><li>返回值：min和max-1之间的随机数。</li></ul><p><strong>randomSeed()</strong></p><ul><li>描述：初始化随机数生成器。</li><li>函数原型：<strong>randomSeed(seed)</strong></li><li>参数：用于初始化伪随机序列的数字，随机数种子。</li><li>返回值：没有。</li></ul><h2 id="5-实验分析"><a href="#5-实验分析" class="headerlink" title="5. 实验分析"></a>5. 实验分析</h2><p>程序中通过randomSeed()函数来初始化随机数生成器。当模拟管脚0悬空时，使用analogRead(0)读取到的是不确定的模拟噪声，用它来做随机种子，可获取到更加理想的随机数。在使用random()函数时，参数中区间上限是不包括在内的。比如想生成[10,20]之间的随机数，则应该这样写：random(10,21)。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 数码管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇14—跳动的数码管</title>
      <link href="/posts/c280.html"/>
      <url>/posts/c280.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401160937.jpg" alt=""></p><p>本篇介绍数码管显示器件，通过控制一位共阴极数码管动态显示数字0到9来了解数码管的使用。</p><h2 id="1-数码管介绍"><a href="#1-数码管介绍" class="headerlink" title="1. 数码管介绍"></a>1. 数码管介绍</h2><p>数码管，又称LED数码管，是常见的用来显示数字的电子器件。通常由八段发光二极管封装在一起组成“8”字形状，外加一个小数点。数码管每一段都是一个独立的LED，通过控制相应段LED的亮灭使其组成相应数字形状来显示数字。</p><p>数码管的8个LED并联在一起，根据公共管脚的不同，分为共阳极数码管和共阴极数码管两种。其区别就是公共管脚是LED灯的正极还是负极。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401161233.jpg" alt="数码管内部结构"></p><p>如上图，数码管8个段分别命名为A,B,C,D,E,F,G,DP，其封装共10个引脚，其中上下方正中间的是公共极，其他引脚分别对应8个LED的另一端。</p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>共阴极数码管</li><li>1个220Ω限流电阻</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401161439.jpg" alt="数码管显示"></p><p>那么如何让数码管来显示数字呢？比如显示数字0，我们只需要点亮A,B,C,D,E,F段LED，熄灭G,DP段LED即可。</p><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>数码管的A,B,C,D,E,F,G,DP引脚分别接入开发板的数字管脚7，6，5，10，11，8，9，4。数码管公共端接限流电阻，电阻另一端接GND。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401161605.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401161755.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*NixieTube控制共阴极数码管显示数字0到9*/</span><span class="token comment" spellcheck="true">//设置控制各段的数字IO脚，具体几号引脚对应哪一段，来源为数码管官方引脚图。</span><span class="token keyword">int</span> pin_a <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_b <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_c <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_d <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_e <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_f <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_g <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token keyword">int</span> pin_p <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//根据共阴极数码管段码表定义0~9显示的各段开关状态</span><span class="token keyword">int</span> numTable<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//1为点亮，0为关闭</span><span class="token comment" spellcheck="true">//a  b  c  d  e  f  g  dp</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//0</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//1</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//2</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//3</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//4</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//5</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//6</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//7</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//8</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token comment" spellcheck="true">//9</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">11</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">pinMode</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置4～11引脚为输出模式</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//以此显示数字0到9</span><span class="token punctuation">{</span><span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_a<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置a 引脚的电平</span><span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_b<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置b 引脚的电平</span><span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_c<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置c 引脚的电平</span><span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_d<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置d 引脚的电平</span><span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_e<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置e 引脚的电平</span><span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_f<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置f 引脚的电平</span><span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_g<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置g 引脚的电平</span><span class="token function">digitalWrite</span><span class="token punctuation">(</span>pin_p<span class="token punctuation">,</span> numTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置dp引脚的电平</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401161831.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>数码管循环显示数字0到9。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401161837.gif" alt="实验现象"></p><h2 id="4-实验分析"><a href="#4-实验分析" class="headerlink" title="4. 实验分析"></a>4. 实验分析</h2><p>程序中定义了一个二位数组用来存储0到9的段码显示。然后在loop中通过for()循环遍历显示0到9，每个数字分别读取对应的段码表来控制相应段LED的亮灭。</p><p>根据使用场所和需求的不同，LED被封装成不同类型的数码管，但其基本原理都是相同的，都需要控制每一个LED的亮灭最终拼凑成需要显示的数字、字母甚至是汉字。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 数码管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇13—外部中断</title>
      <link href="/posts/4366.html"/>
      <url>/posts/4366.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155651.jpg" alt=""></p><p>本篇介绍Arduino外部中断的使用，通过外部中断检测震动开关的触发来控制LED灯亮灭。</p><h2 id="1-中断介绍"><a href="#1-中断介绍" class="headerlink" title="1. 中断介绍"></a>1. 中断介绍</h2><p>我们已经知道，Arduino程序是在loop()中不断的循环的。在程序的运行中，我们时常需要监控一些事件的发生，比如对某一传感器的返回数据进行解析。使用轮询的方式检测，效率比较低，而且随着程序功能增加，轮询到指定功能时需要等待的时间变长。而使用中断方式检测，可以到达实时检测的效果。</p><p>中断程序可以看作是一段独立于主程序之外的程序，当中断触发时，控制器会暂停当前正在运行的主程序，而跳转去运行中断程序，中断程序运行完后，会再回到之前主程序暂停的位置，继续运行主程序。如此便可做到实时响应处理事件的效果。</p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>1个LED灯</li><li>1个220Ω限流电阻</li><li>1个震动开关</li></ul><p>震动开关，即震动传感器，根据其结构的不同又分为弹簧开关和滚珠开关。</p><ul><li><p>弹簧开关，其内部由一根中心金属导电脚和环绕在其外部的弹簧导电脚组成。弹簧震动时会接触到中心导电脚，形成短路闭合状态；</p></li><li><p>滚珠开关，其内部包含有一颗金属滚珠，当震动时滚珠滚动短路两个导电脚，形成短路闭合状态。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155720.jpg" alt="震动开关"></p><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>直插式LED灯负极接开发板GND，正极接220Ω限流电阻，电阻另一端接开发板数字9引脚。震动开关一端接开发板GND，另一端接数字引脚2。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155733.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155748.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   ShakeSwitch   中断检测振动传感器，控制LED灯亮灭*/</span><span class="token keyword">int</span> SensorLED <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//定义LED为数字引脚9</span><span class="token keyword">int</span> SensorINPUT <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//连接震动开关到中断0，也就是数字引脚2</span><span class="token keyword">char</span> state <span class="token operator">=</span> LOW<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>SensorLED<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//LED为输出模式</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>SensorINPUT<span class="token punctuation">,</span> INPUT_PULLUP<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//震动开关为输入模式</span>  <span class="token comment" spellcheck="true">//下降沿触发，触发中断0，调用blink函数</span>  <span class="token function">attachInterrupt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> blink<span class="token punctuation">,</span> FALLING<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">==</span> HIGH<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 如果state为HIGH</span>    state <span class="token operator">=</span> LOW<span class="token punctuation">;</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>SensorLED<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 亮灯</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//延时500ms</span>  <span class="token punctuation">}</span>  <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>SensorLED<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 否则，关灯</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">blink</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token comment" spellcheck="true">//中断函数blink()</span>  state <span class="token operator">=</span> <span class="token operator">!</span>state<span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">//一旦中断触发，state状态反转</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155808.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>触发震动后，LED灯点亮一段时间后熄灭。再次触发震动再次点亮。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155822.gif" alt="实验现象"></p><h2 id="5-函数介绍"><a href="#5-函数介绍" class="headerlink" title="5. 函数介绍"></a>5. 函数介绍</h2><p><strong>attachInterrupt()</strong></p><ul><li>描述：外部中断配置函数。</li><li>函数原型：<strong>attachInterrupt(interrupt, ISR, mode)</strong></li><li>参数：<ul><li>interrupt: 中断号。不同Arduino开发板中断号不同。Uno R3有两个外部中断，分别为数字管脚2(中断0)和数字管脚3(中断1)。</li><li>ISR: 中断处理函数。此函数不带参数，没有返回值。</li><li>mode: 中断触发方式。<ul><li><strong>LOW</strong>: 低电平触发。</li><li><strong>CHANGE</strong>:管脚状态改变触发。</li><li><strong>RISING</strong>:上升沿触发。</li><li><strong>FALLING</strong>:下降沿触发。</li></ul></li></ul></li><li>返回值：无。</li></ul><h2 id="6-实验分析"><a href="#6-实验分析" class="headerlink" title="6. 实验分析"></a>6. 实验分析</h2><p>通过attachInterrupt()函数注册数字管脚2为外部中断，触发方式为下降沿触发。中断处理函数blink()中每触发一次翻转一次state的状态。loop()函数中通过state状态来控制LED灯亮灭。</p><p>中断是非常实用的功能，它释放了CPU资源来做更多的事情。很多处理器、控制器都有中断功能，更高级的还包括中断优先级「多个中断同时触发时处理先后问题」和中断嵌套「中断中的中断」。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 中断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇12—火焰报警器</title>
      <link href="/posts/ede5.html"/>
      <url>/posts/ede5.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155436.jpg" alt=""></p><p>本篇介绍火焰传感器，通过火焰传感器感知周围环境是否存在明火，控制蜂鸣器对环境火焰进行报警提示。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>1个有源蜂鸣器</li><li>1个10KΩ电阻</li><li>1个火焰传感器</li></ul><p>火焰传感器（即红外接收三极管）是一种对火焰特别敏感的传感器。其利用红外线对火焰的敏感特性，用特制的红外线接收管来检测火焰，然后将火焰的亮度转化成电平信号供控制器处理。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155505.jpg" alt="火焰传感器"></p><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>火焰传感器的负极(短脚)接到5V引脚，正极(长脚)连接10KΩ的电阻，电阻的另一端连接GND。传感器与电阻连接在一起并接入到开发板模拟输入A0引脚。蜂鸣器正极接开发板数字引脚8，负极接GND。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155520.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155535.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * Flame * 火焰传感器检测到火焰后，控制蜂鸣器报警 */</span><span class="token keyword">int</span> beep <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义蜂鸣器接口为数字8 接口</span><span class="token keyword">int</span> flameVal <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//存储火焰传感器数据</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>beep<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//定义beep 为输出接口</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  flameVal <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>A0<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//读取火焰传感器的模拟值</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>flameVal <span class="token operator">>=</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//当模拟值大于200时蜂鸣器鸣响，阈值根据实际测试进行修改</span>  <span class="token punctuation">{</span>     <span class="token function">digitalWrite</span><span class="token punctuation">(</span>beep<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//</span>  <span class="token punctuation">}</span>  <span class="token keyword">else</span>  <span class="token punctuation">{</span>     <span class="token function">digitalWrite</span><span class="token punctuation">(</span>beep<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155554.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>当有火焰靠近时，蜂鸣器鸣响，当无火焰时，蜂鸣器停止鸣响。</p><h2 id="5-实验分析"><a href="#5-实验分析" class="headerlink" title="5. 实验分析"></a>5. 实验分析</h2><p>通过读取火焰传感器的模拟值，根据设定的阈值进行比较，进而控制蜂鸣器鸣响。这个实验跟上一篇光控灯实验非常相似，都是通过特定传感器将光信号转换成高低变化的电平信号供控制器进行处理。</p><p>很多时候，对于输出模拟量的传感器都需要一个阈值，通过阈值比较进行实际的控制逻辑，阈值的选择需要根据实际情况进行反复调整，直到满足实际功能需求。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 传感器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇11—光控灯</title>
      <link href="/posts/4db6.html"/>
      <url>/posts/4db6.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401154938.jpg" alt=""></p><p>本篇介绍光敏电阻，通过模拟输入采集环境光强来控制LED灯亮度，做一个无需人为干预的自动控制设备。</p><p>传感器是一种检测装置，能感受并采集到被测量的信息，在当下物联网、智能家居中占据重要地位。一切智能化、自动化设备、各种云计算大数据分析中最基础的就是数据，数据从何而来，绝大多数都来自传感器。其中光敏电阻可算是最简单的传感器之一了。</p><p>光敏电阻是一种电阻值随照射光强度增加而下降的电阻，基于其内部光电效应，光照越强电阻值越小，光照越弱，电阻值越大。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155110.jpg" alt="光敏电阻"></p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>1个LED灯</li><li>1个220Ω限流电阻</li><li>1个光敏电阻</li><li>1个1K普通电阻</li></ul><p>我们将光敏电阻作为一个电阻跟一个普通电阻串联，根据串联分压的方法，通过analogRead() 读取其电压。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155136.jpg" alt="串联分压"></p><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>直插LED灯正极连接限流电阻，电阻另一端连接开发板第10引脚，LED灯负极接开发板GND。光敏电阻一端接GND,电阻一端接5V，光敏电阻和普通电阻相接，然后接入A0引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155150.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155203.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   AutoLed   通过光敏电阻检测环境光，进而控制LED灯亮度*/</span><span class="token keyword">int</span> ledPin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> sensorValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//保存读到的传感器模拟值</span><span class="token keyword">int</span> ledValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//保存LED灯占空比</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//数字口要选择带~号的具有pwm功能的输出口</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  sensorValue <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>A0<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//读取A0模拟口的数值</span>  ledValue <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>sensorValue<span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将400到800之间的数据映射成0到200之间的数据</span>  <span class="token function">analogWrite</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> ledValue<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//PWM控制LED灯亮度</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155224.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>遮挡光敏电阻，LED灯变亮，无遮挡下，LED灯亮度变暗。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401155241.gif" alt="实验现象"></p><h2 id="4-实验分析"><a href="#4-实验分析" class="headerlink" title="4. 实验分析"></a>4. 实验分析</h2><p>通过analogRead()读取光敏电阻与普通电阻串联分压后的电压数据，使用map()函数做重新映射，然后使用analogWrite()函数改变LED灯的亮度。</p><p>根据串联分压，光敏电阻上的电压值为R1/(R1+R2) * 5V。</p><p>通过测试发现遮挡和不遮挡的情况下，模拟输入的范围大概在400~800之间，所以map()函数里面区间为[400,800]，由于电源波动或外界干扰等原因，输出的数据可能也会受到一定的影响，你得到的区间可能有变化，需要多次调整测试来达到理想效果。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> Led </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派笔记05—Xrdp实现Windows远程登陆树莓派桌面</title>
      <link href="/posts/dad9.html"/>
      <url>/posts/dad9.html</url>
      
        <content type="html"><![CDATA[<p>给树莓派搭配显示器和键鼠后，它就是台电脑了。如果没有显示器，你也可以借助软件通过SSH远程登陆，这种方式是不会显示树莓派桌面的。</p><p>通过屏幕利用键鼠或者通过SSH登陆树莓派，对其安装相关软件后，可使用Windows自带的远程桌面软件来远程访问树莓派桌面应用。</p><h4 id="1-安装Xrdp，执行如下命令："><a href="#1-安装Xrdp，执行如下命令：" class="headerlink" title="1. 安装Xrdp，执行如下命令："></a>1. 安装Xrdp，执行如下命令：</h4><pre class=" language-C"><code class="language-C">sudo apt-get install xrdp</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401200603.jpg" alt="安装Xrdp"></p><h4 id="2-安装VNC服务，执行如下命令："><a href="#2-安装VNC服务，执行如下命令：" class="headerlink" title="2. 安装VNC服务，执行如下命令："></a>2. 安装VNC服务，执行如下命令：</h4><pre class=" language-C"><code class="language-C">sudo apt-get install tightvncserver</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401200605.jpg" alt="安装VNC服务"></p><h4 id="3-启动Xrdp服务，执行如下命令："><a href="#3-启动Xrdp服务，执行如下命令：" class="headerlink" title="3. 启动Xrdp服务，执行如下命令："></a>3. 启动Xrdp服务，执行如下命令：</h4><pre class=" language-C"><code class="language-C">sudo /etc/init.d/xrdp start</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401200604.jpg" alt="启动Xrdp服务"></p><h4 id="4-将Xrdp服务添加到系统默认启动服务中。"><a href="#4-将Xrdp服务添加到系统默认启动服务中。" class="headerlink" title="4. 将Xrdp服务添加到系统默认启动服务中。"></a>4. 将Xrdp服务添加到系统默认启动服务中。</h4><pre class=" language-C"><code class="language-C">sudo update-rc.d xrdp defaults</code></pre><h4 id="5-打开Windows远程桌面连接，输入你的树莓派IP地址，点击连接。"><a href="#5-打开Windows远程桌面连接，输入你的树莓派IP地址，点击连接。" class="headerlink" title="5. 打开Windows远程桌面连接，输入你的树莓派IP地址，点击连接。"></a>5. 打开Windows远程桌面连接，输入你的树莓派IP地址，点击连接。</h4><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401200606.jpg" alt="远程桌面"></p><h4 id="6-输入用户名和密码进行登陆。树莓派默认用户名：pi，默认密码：raspberry。"><a href="#6-输入用户名和密码进行登陆。树莓派默认用户名：pi，默认密码：raspberry。" class="headerlink" title="6. 输入用户名和密码进行登陆。树莓派默认用户名：pi，默认密码：raspberry。"></a>6. 输入用户名和密码进行登陆。树莓派默认用户名：pi，默认密码：raspberry。</h4><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401200607.jpg" alt="输入用户名密码"></p><h4 id="7-登陆成功，可以把树莓派放在角落里远程操作啦。"><a href="#7-登陆成功，可以把树莓派放在角落里远程操作啦。" class="headerlink" title="7. 登陆成功，可以把树莓派放在角落里远程操作啦。"></a>7. 登陆成功，可以把树莓派放在角落里远程操作啦。</h4><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401200602.jpg" alt="登陆成功"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派笔记04—树莓派更换更新源</title>
      <link href="/posts/21f3.html"/>
      <url>/posts/21f3.html</url>
      
        <content type="html"><![CDATA[<p>树莓派系统安装后默认使用国外的镜像源来更新软件，由于不可描述原因，国内访问速度非常慢，因此需要换成国内源。树莓派官方提供了一个<a href="http://www.raspbian.org/RaspbianMirrors" target="_blank" rel="noopener">更新源列表</a>，在这里我们使用中科大的软件源和系统源。</p><h4 id="1-登陆到树莓派。你可以通过屏幕键鼠直接打开终端或者通过SSH登陆到树莓派。"><a href="#1-登陆到树莓派。你可以通过屏幕键鼠直接打开终端或者通过SSH登陆到树莓派。" class="headerlink" title="1. 登陆到树莓派。你可以通过屏幕键鼠直接打开终端或者通过SSH登陆到树莓派。"></a>1. 登陆到树莓派。你可以通过屏幕键鼠直接打开终端或者通过SSH登陆到树莓派。</h4><h4 id="2-备份源文件。执行如下命令："><a href="#2-备份源文件。执行如下命令：" class="headerlink" title="2. 备份源文件。执行如下命令："></a>2. 备份源文件。执行如下命令：</h4><pre class=" language-C"><code class="language-C">sudo cp /etc/apt/sources.list /etc/apt/sources.list.baksudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401200136.jpg" alt="备份源文件"></p><h4 id="3-修改软件更新源，执行如下命令："><a href="#3-修改软件更新源，执行如下命令：" class="headerlink" title="3. 修改软件更新源，执行如下命令："></a>3. 修改软件更新源，执行如下命令：</h4><pre class=" language-C"><code class="language-C">sudo nano /etc/apt/sources.list</code></pre><h4 id="4-将第一行修改成中科大的软件源地址，「Ctrl-O」进行保存，然后回车，「Ctrl-X」退出。"><a href="#4-将第一行修改成中科大的软件源地址，「Ctrl-O」进行保存，然后回车，「Ctrl-X」退出。" class="headerlink" title="4. 将第一行修改成中科大的软件源地址，「Ctrl+O」进行保存，然后回车，「Ctrl+X」退出。"></a>4. 将第一行修改成中科大的软件源地址，「Ctrl+O」进行保存，然后回车，「Ctrl+X」退出。</h4><pre class=" language-C"><code class="language-C">deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401200138.jpg" alt="修改软件源"></p><h4 id="5-修改系统更新源，执行如下命令："><a href="#5-修改系统更新源，执行如下命令：" class="headerlink" title="5. 修改系统更新源，执行如下命令："></a>5. 修改系统更新源，执行如下命令：</h4><pre class=" language-C"><code class="language-C">sudo nano /etc/apt/sources.list.d/raspi.list</code></pre><h4 id="6-将第一行修改成中科大的系统源地址，「Ctrl-O」进行保存，然后回车，「Ctrl-X」退出。"><a href="#6-将第一行修改成中科大的系统源地址，「Ctrl-O」进行保存，然后回车，「Ctrl-X」退出。" class="headerlink" title="6. 将第一行修改成中科大的系统源地址，「Ctrl+O」进行保存，然后回车，「Ctrl+X」退出。"></a>6. 将第一行修改成中科大的系统源地址，「Ctrl+O」进行保存，然后回车，「Ctrl+X」退出。</h4><pre class=" language-C"><code class="language-C">deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ stretch main ui</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401200139.jpg" alt="修改系统源"></p><h4 id="7-同步更新源，执行如下命令："><a href="#7-同步更新源，执行如下命令：" class="headerlink" title="7. 同步更新源，执行如下命令："></a>7. 同步更新源，执行如下命令：</h4><pre class=" language-C"><code class="language-C">sudo apt-get update</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401200140.jpg" alt="同步更新源"></p><h4 id="8-更新升级以安装软件包，这个过程耗时较长。"><a href="#8-更新升级以安装软件包，这个过程耗时较长。" class="headerlink" title="8. 更新升级以安装软件包，这个过程耗时较长。"></a>8. 更新升级以安装软件包，这个过程耗时较长。</h4><pre class=" language-C"><code class="language-C">sudo apt-get upgrade</code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401200137.jpg" alt="软件升级"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派笔记03—树莓派系统安装</title>
      <link href="/posts/7038.html"/>
      <url>/posts/7038.html</url>
      
        <content type="html"><![CDATA[<p>树莓派上可以运行多种操作系统，除去官方操作系统外，还支持很多第三方操作系统。具体可登陆<a href="https://www.raspberrypi.org/downloads/" target="_blank" rel="noopener">树莓派官网</a>查看。本篇安装当前使用最广的Raspbian官方操作系统。</p><h2 id="1-系统下载"><a href="#1-系统下载" class="headerlink" title="1. 系统下载"></a>1. 系统下载</h2><p>Raspbian预装了用于教育、编程和一般用途的软件，如Python、Scratch、Java等。登陆<a href="https://www.raspberrypi.org/downloads/raspbian/" target="_blank" rel="noopener">官网</a>进行下载。在这里我们下载左侧带可视化图形桌面的版本。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195150.jpg" alt="系统下载"></p><h2 id="2-烧写镜像"><a href="#2-烧写镜像" class="headerlink" title="2. 烧写镜像"></a>2. 烧写镜像</h2><ol><li>对下载好的系统压缩包进行解压缩，得到img镜像文件。</li><li>使用读卡器将准备好的Micro SD卡插入电脑。</li><li>Windows系统下使用<a href="http://nchc.dl.sourceforge.net/project/win32diskimager/Archive/Win32DiskImager-0.9.5-install.exe" target="_blank" rel="noopener">Win32 Disk Imager</a>工具进行镜像烧写。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195152.jpg" alt="烧写镜像"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195149.jpg" alt="烧写完成"></p><h2 id="3-启动树莓派"><a href="#3-启动树莓派" class="headerlink" title="3. 启动树莓派"></a>3. 启动树莓派</h2><h3 id="有显示器的情况"><a href="#有显示器的情况" class="headerlink" title="有显示器的情况"></a>有显示器的情况</h3><p>将烧写好镜像的SD卡插入树莓派，将键鼠和显示器连接到树莓派，给树莓派上电。待系统运行后进入桌面。第一次登陆桌面显示配置向导，自动引导用户设置开机密码、WiFi、本地化等。</p><ol><li><p>点击Next根据向导进行基本配置。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195151.jpg" alt="向导配置"></p></li><li><p>设置国家。点击Next下一步。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195153.jpg" alt="设置国家"></p></li><li><p>设置用户密码。初始的用户名：pi，密码：raspberry。可以自行设置用户密码，点击Next进入下一步。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195154.jpg" alt="设置密码"></p></li><li><p>选择WiFi并输入密码，点击Next下一步。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195155.jpg" alt="选择WiFi"></p></li><li><p>检查更新。点击Next下一步。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195156.jpg" alt="检查更新"></p></li><li><p>配置完成，进行重启。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195151.jpg" alt="配置完成"></p></li></ol><h3 id="没有显示器的情况"><a href="#没有显示器的情况" class="headerlink" title="没有显示器的情况"></a>没有显示器的情况</h3><p>如果没有显示器，我们可以通过SSH的方式来远程登陆树莓派。</p><ol><li><p>开启SSH。之前的Raspbian系统默认是开启SSH的，后来官方为了安全考录，将其设置成默认关闭状态了。在SD卡的boot根目录下新建一个名为SSH的空文件，注意不能有扩展名！</p><p> <img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195144.jpg" alt="新建SSH"></p></li><li><p>配置WiFi。在boot根目录下新建名为wpa_supplicant.conf的文件，里面内容编辑如下：</p></li></ol><pre class=" language-c"><code class="language-c">country<span class="token operator">=</span>GBctrl_interface<span class="token operator">=</span>DIR<span class="token operator">=</span><span class="token operator">/</span>var<span class="token operator">/</span>run<span class="token operator">/</span>wpa_supplicant GROUP<span class="token operator">=</span>netdevupdate_config<span class="token operator">=</span><span class="token number">1</span>network<span class="token operator">=</span><span class="token punctuation">{</span>ssid<span class="token operator">=</span><span class="token string">"替换成你的WiFi名"</span>psk<span class="token operator">=</span><span class="token string">"替换成你的WiFi密码"</span>priority<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195145.jpg" alt="配置WiFi"></p><ol start="3"><li><p>将SD卡插入树莓派，给树莓派上电启动。进入路由器查看树莓派分配到的IP地址，这个很重要，SSH需要根据IP地址远程登陆。</p><p> <img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195146.jpg" alt="查看IP地址"></p></li><li><p>使用Xshell或者Putty登陆树莓派。树莓派默认用户名：pi，默认登陆密码：raspberry。</p><p> <img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195147.jpg" alt="输入用户名"></p></li><li><p>登陆成功。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401195148.jpg" alt="登陆成功"></p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> Raspbian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇10—电位器控制LED灯</title>
      <link href="/posts/474.html"/>
      <url>/posts/474.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401154145.jpg" alt=""></p><p>本篇介绍Arduino模拟输入功能，通过读取电位器输入的电压值来控制LED灯的亮度。</p><p>模拟输入引脚是带有ADC（Analog-to-Digital Converter，模数转换器）功能的引脚。它可以将外部输入的模拟信号转换为芯片运算时可以识别的数字信号，从而实现读入模拟值的功能。</p><p>Arduino 模拟输入功能有10位精度，即可以将0～5V的电压信号转换为0～1024的整数形式表示。</p><p>我们通过使用analogRead() 函数读取电位器输入的电压值，然后通过analogWrite()函数来控制LED灯亮度。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>1个LED灯</li><li>1个220Ω限流电阻</li><li>1个电位器</li></ul><p>电位器是一个可调的电阻，其原理如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401154222.jpg" alt="电位器原理图"></p><p>通过旋转旋钮改变2号脚位置，从而改变2号脚到两端的阻值。实验中将1脚和3脚分别接到开发板的5V的GND，再通过模拟输入引脚A0来读取电位器2号脚分得的电压，其范围在0V和5V之间。</p><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>直插LED灯正极连接限流电阻，电阻另一端连接开发板第10引脚，LED灯负极接开发板GND。电位器1号脚和3号脚分别连接开发板5V和GND，2号脚连接开发板A0引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401154309.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401154324.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   AnalogRead   通过电位器改变LED灯亮度*/</span><span class="token keyword">int</span> ledPin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">int</span> readValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//保存读到的模拟值</span><span class="token keyword">int</span> ledValue <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//保存LED灯占空比</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//数字口要选择带~号的具有pwm功能的输出口</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  readValue <span class="token operator">=</span> <span class="token function">analogRead</span><span class="token punctuation">(</span>A0<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//读取A0模拟口的数值（0-5V 对应 0-1204取值）</span>  ledValue <span class="token operator">=</span> <span class="token function">map</span><span class="token punctuation">(</span>readValue<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将0到1024之间的数据映射成0到255之间的数据</span>  <span class="token function">analogWrite</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> ledValue<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//PWM最大取值255  </span><span class="token punctuation">}</span>    </code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401154345.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>通过旋转电位器旋钮，LED灯亮度改变。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401154805.gif" alt="实验现象"></p><h2 id="4-函数介绍"><a href="#4-函数介绍" class="headerlink" title="4. 函数介绍"></a>4. 函数介绍</h2><p><strong>analogRead()</strong></p><ul><li>描述：读取指定模拟引脚的值。</li><li>函数原型：<strong>analogRead(pin)</strong></li><li>参数：模拟输入引脚。</li><li>返回值：0到1024之间的整数。</li></ul><p><strong>map()</strong></p><ul><li>描述：将数据从一个范围映射到另一个范围。</li><li>函数原型：<strong>map(value, fromLow, fromHigh, toLow, toHigh)</strong></li><li>参数：<ul><li>value: 要映射的数据</li><li>fromLow: 当前范围的下限值。</li><li>formHigh: 当前范围的上限值。</li><li>toLow: 目标范围的下限值。</li><li>toHigh: 目标范围的上限值。</li></ul></li><li>返回值：重新映射后的数据。</li></ul><h2 id="5-实验分析"><a href="#5-实验分析" class="headerlink" title="5. 实验分析"></a>5. 实验分析</h2><p>程序中通过analogRead()函数来读取模拟输入值，这个输入值的范围是0到1024之间，然后通过analogWrite()函数来改变LED灯占空比，占空比的范围是0到255之间。通过使用map()函数将范围做了重新映射。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> Led </tag>
            
            <tag> 电位器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇09—会呼吸的灯</title>
      <link href="/posts/a373.html"/>
      <url>/posts/a373.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401153632.jpg" alt=""></p><p>本篇使用Arduino模拟输出功能，通过PWM脉宽调制来控制LED灯亮度，使其呈现呼吸灯效果。</p><h2 id="1-模拟信号"><a href="#1-模拟信号" class="headerlink" title="1. 模拟信号"></a>1. 模拟信号</h2><p>数字信号是以0、1表示的电平不连续变化的信号，而模拟信号则是用连续变化的物理量来表示信息的，信号随着时间连续变化。在我们生活中接触到的大多数都是模拟信号，例如声音、光照、温度的变化等。</p><p>在我们的Uno R3开发板上，第3、5、6、9、10、11引脚具有PWM(Pulse Width Modulation脉冲宽度调制)功能。</p><p>通过使用analogWrtie()函数，在指定的引脚上通过高低电平的不断转换输出一个周期固定的方波，通过改变高低电平在每个周期中所占的比例（占空比），进而得到不同的电压输出。</p><p>当一个周期内高电平出现时间长一些时，输出电压就会高一些，LED灯更亮一些。当高电平出现的时间短一些时，输出电压就会低一些，LED灯亮度则会暗一些。</p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>1个LED灯</li><li>1个220Ω限流电阻</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>直插LED灯正极连接限流电阻，电阻另一端连接开发板第3引脚，LED灯负极接开发板GND。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401153702.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401153718.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * Breath * 通过模拟输出PWM控制LED灯，改变其亮度，达到呼吸效果 */</span><span class="token keyword">int</span> ledPin <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span>OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> a<span class="token operator">&lt;=</span><span class="token number">255</span><span class="token punctuation">;</span>a<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//循环语句，控制PWM亮度的增加</span>  <span class="token punctuation">{</span>    <span class="token function">analogWrite</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                             <span class="token comment" spellcheck="true">//当前亮度级别维持的时间,单位毫秒            </span>  <span class="token punctuation">}</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">;</span> a<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span>a<span class="token operator">--</span><span class="token punctuation">)</span>             <span class="token comment" spellcheck="true">//循环语句，控制PWM亮度减小</span>  <span class="token punctuation">{</span>    <span class="token function">analogWrite</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                             <span class="token comment" spellcheck="true">//当前亮度的维持的时间,单位毫秒  </span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401153736.jpg" alt="程序下载"></p><h2 id="4-实验现象"><a href="#4-实验现象" class="headerlink" title="4. 实验现象"></a>4. 实验现象</h2><p>LED灯由亮变暗，又由暗变量。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401153753.gif" alt="实验现象"></p><h2 id="5-函数介绍"><a href="#5-函数介绍" class="headerlink" title="5. 函数介绍"></a>5. 函数介绍</h2><p><strong>analogWrite()</strong></p><ul><li>描述：在指定引脚输出指定占空比的PWM方波。</li><li>函数原型：<strong>analogWrite(pin, value)</strong></li><li>参数：<ul><li>pin:输出引脚。</li><li>value:占空比。介于0和255之间。</li></ul></li><li>返回值：没有。</li></ul><h2 id="6-实验分析"><a href="#6-实验分析" class="headerlink" title="6. 实验分析"></a>6. 实验分析</h2><p>程序中使用analogWrite()函数，通过两个for循环，逐渐改变输出PWM占空比，进而改变LED灯的亮度。两个for循环中都有延时语句，是为了让我们肉眼能观察到亮度调节的效果。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> Led </tag>
            
            <tag> PWM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇08—播放音乐</title>
      <link href="/posts/badd.html"/>
      <url>/posts/badd.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401152854.jpg" alt=""></p><p>本篇介绍电子产品中的发声器件—蜂鸣器，通过控制蜂鸣器播放「葫芦娃」，带你回归美好童年。</p><h2 id="1-了解蜂鸣器"><a href="#1-了解蜂鸣器" class="headerlink" title="1. 了解蜂鸣器"></a>1. 了解蜂鸣器</h2><p>蜂鸣器是一种电子发声元器件，可以发出”beep”的声音。采用直流电压供电，广泛应用于计算机、打印机、复印机、报警器、电子玩具、汽车电子设备、电话机、定时器等电子产品中作发声器件。</p><p>蜂鸣器分为有源蜂鸣器和无源蜂鸣器两种。</p><ul><li>有源蜂鸣器： 内部带有震荡源，只要一通电就会发出固定频率的声音。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401153158.jpg" alt="有源蜂鸣器"></p><ul><li>无源蜂鸣器：内部不带震荡源，需要使用2KHz到5KHz的脉冲信号驱动发声，声音频率可变。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401153216.JPG" alt="无源蜂鸣器"></p><p>从外观上来看两种蜂鸣器形状相似，有源蜂鸣器底部有密封，无源蜂鸣器底部可看到电路板。两种蜂鸣器都标注有正负极。</p><h2 id="2-实验材料"><a href="#2-实验材料" class="headerlink" title="2. 实验材料"></a>2. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>有源蜂鸣器</li><li>无源蜂鸣器</li></ul><h2 id="3-实验步骤"><a href="#3-实验步骤" class="headerlink" title="3. 实验步骤"></a>3. 实验步骤</h2><h3 id="1-根据原理图搭建电路。"><a href="#1-根据原理图搭建电路。" class="headerlink" title="1. 根据原理图搭建电路。"></a>1. 根据原理图搭建电路。</h3><p>蜂鸣器正极接开发板数字引脚8，负极接开发板GND，连接非常简单。</p><p>电路原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401153231.jpg" alt="电路原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401153347.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * BUZZER1 * 有源蜂鸣器控制 */</span><span class="token keyword">int</span> buzzer <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置控制蜂鸣器的数字IO脚</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>buzzer<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置数字IO脚模式，OUTPUT为输出</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>buzzer<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//发声音</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//延时300ms</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>buzzer<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//不发声音</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//延时300ms</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401153409.jpg" alt="程序下载"></p><h3 id="4-下载后有源蜂鸣器发出声音频率固定的声音。"><a href="#4-下载后有源蜂鸣器发出声音频率固定的声音。" class="headerlink" title="4. 下载后有源蜂鸣器发出声音频率固定的声音。"></a>4. 下载后有源蜂鸣器发出声音频率固定的声音。</h3><h3 id="5-将有源蜂鸣器替换成无源蜂鸣器，拷贝如下代码进行保存并下载。"><a href="#5-将有源蜂鸣器替换成无源蜂鸣器，拷贝如下代码进行保存并下载。" class="headerlink" title="5. 将有源蜂鸣器替换成无源蜂鸣器，拷贝如下代码进行保存并下载。"></a>5. 将有源蜂鸣器替换成无源蜂鸣器，拷贝如下代码进行保存并下载。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   BUZZER2   使用无源蜂鸣器播放《葫芦娃》*/</span><span class="token comment" spellcheck="true">//对应音符和频率值</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_D0 -1</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_D1 294</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_D2 330</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_D3 350</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_D4 393</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_D5 441</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_D6 495</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_D7 556</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DL1 147</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DL2 165</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DL3 175</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DL4 196</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DL5 221</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DL6 248</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DL7 278</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DH1 589</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DH2 661</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DH3 700</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DH4 786</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DH5 882</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DH6 990</span><span class="token macro property">#<span class="token directive keyword">define</span> NOTE_DH7 112</span><span class="token macro property">#<span class="token directive keyword">define</span> WHOLE 1</span><span class="token macro property">#<span class="token directive keyword">define</span> HALF 0.5</span><span class="token macro property">#<span class="token directive keyword">define</span> QUARTER 0.25</span><span class="token macro property">#<span class="token directive keyword">define</span> EIGHTH 0.25</span><span class="token macro property">#<span class="token directive keyword">define</span> SIXTEENTH 0.625</span><span class="token comment" spellcheck="true">//整首曲子的音符部分</span><span class="token keyword">int</span> tune<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  NOTE_DH1<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span>  NOTE_DH1<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_DH1<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span>  NOTE_D6<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span>  NOTE_DH1<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_DH1<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span>  NOTE_D1<span class="token punctuation">,</span> NOTE_D1<span class="token punctuation">,</span> NOTE_D3<span class="token punctuation">,</span>  NOTE_D1<span class="token punctuation">,</span> NOTE_D1<span class="token punctuation">,</span> NOTE_D3<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span>  NOTE_D6<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span>  NOTE_D5<span class="token punctuation">,</span> NOTE_D1<span class="token punctuation">,</span> NOTE_D3<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span>  NOTE_DH1<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span>  NOTE_D5<span class="token punctuation">,</span> NOTE_D1<span class="token punctuation">,</span> NOTE_D2<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span>  NOTE_D7<span class="token punctuation">,</span> NOTE_D7<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D3<span class="token punctuation">,</span>  NOTE_D5<span class="token punctuation">,</span>  NOTE_DH1<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span>  NOTE_D0<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D1<span class="token punctuation">,</span> NOTE_D3<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span>  NOTE_DH1<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span>  NOTE_D0<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D1<span class="token punctuation">,</span> NOTE_D2<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span>  NOTE_D3<span class="token punctuation">,</span> NOTE_D3<span class="token punctuation">,</span> NOTE_D1<span class="token punctuation">,</span> NOTE_DL6<span class="token punctuation">,</span>  NOTE_D1<span class="token punctuation">,</span>  NOTE_D3<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span>  NOTE_D3<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span> NOTE_D6<span class="token punctuation">,</span>  NOTE_DH1<span class="token punctuation">,</span> NOTE_D0<span class="token punctuation">,</span> NOTE_D7<span class="token punctuation">,</span> NOTE_D5<span class="token punctuation">,</span>  NOTE_D6<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//曲子的节拍，即音符持续时间</span><span class="token keyword">float</span> duration<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">{</span>  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span> <span class="token operator">+</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.5</span> <span class="token operator">+</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.5</span> <span class="token operator">+</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span> <span class="token operator">+</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.5</span> <span class="token operator">+</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.5</span> <span class="token operator">+</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> length<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义一个变量用来表示共有多少个音符</span><span class="token keyword">int</span> tonePin <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//蜂鸣器的pin</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>tonePin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置蜂鸣器的pin为输出模式</span>  length <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>tune<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>tune<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//这里用了一个sizeof函数，查出数组里有多少个音符</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//循环音符的次数</span>  <span class="token punctuation">{</span>    <span class="token function">tone</span><span class="token punctuation">(</span>tonePin<span class="token punctuation">,</span> tune<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//依次播放tune数组元素，即每个音符</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">400</span> <span class="token operator">*</span> duration<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//每个音符持续的时间，即节拍duration，400是调整时间的越大，曲子速度越慢，越小曲子速度越快</span>    <span class="token function">noTone</span><span class="token punctuation">(</span>tonePin<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//停止当前音符，进入下一音符</span>  <span class="token punctuation">}</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//等待5秒后，循环重新开始</span><span class="token punctuation">}</span></code></pre><h3 id="6-下载完毕后，无源蜂鸣器就会播放「葫芦娃」神曲了。"><a href="#6-下载完毕后，无源蜂鸣器就会播放「葫芦娃」神曲了。" class="headerlink" title="6. 下载完毕后，无源蜂鸣器就会播放「葫芦娃」神曲了。"></a>6. 下载完毕后，无源蜂鸣器就会播放「葫芦娃」神曲了。</h3><h2 id="4-函数介绍"><a href="#4-函数介绍" class="headerlink" title="4. 函数介绍"></a>4. 函数介绍</h2><p><strong>tone()</strong></p><ul><li>描述：在指定引脚产生指定频率的方波，可用于蜂鸣器或扬声器播放音调。</li><li>函数原型：<ul><li><strong>tone(pin, frequency)</strong></li><li><strong>tone(pin, frequency, duration)</strong></li></ul></li><li>参数：<ul><li>pin：产生音调的引脚。</li><li>音调频率，单位赫兹。</li><li>音调持续时间(毫秒单位)，此参数可选。</li></ul></li><li>返回值：没有</li></ul><p><strong>noTone()</strong></p><ul><li>描述：停止产生方波。</li><li>函数原型： <strong>noTone(pin)</strong></li><li>参数：需要停止产生音调的引脚。</li><li>返回值：没有。</li></ul><p><strong>noTone(pin)用来停止由tone(pin, frequency)产生的音调。</strong></p><h2 id="5-程序分析"><a href="#5-程序分析" class="headerlink" title="5. 程序分析"></a>5. 程序分析</h2><p>有源蜂鸣器程序比较简单，通过控制数字I/O引脚输出高低电平来让有源蜂鸣器发声。</p><p>无源蜂鸣器播放「葫芦娃」程序中，定义了跟乐理相关的知识，音符需要对应频率，拍子就是每个音符播放时间。还可以根据不同简谱来演奏出不同的曲子。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> 蜂鸣器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇07—按键控制LED灯</title>
      <link href="/posts/f5bc.html"/>
      <url>/posts/f5bc.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401152342.jpg" alt=""></p><p>前面介绍了Arduino数字I/O，通过控制数字引脚输出来控制LED灯亮灭。本篇将介绍数字I/O的输入功能，通过检测按键状态来控制LED灯亮灭，把LED的亮灭变成人为可控制的。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>1个LED灯</li><li>1个220Ω电阻</li><li>1个轻触按键</li></ul><p>实验中我们用到了轻触按键，常见的有2脚按键和4脚按键，其内部结构如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401151716.jpg" alt="按键内部结构"></p><p>当按下按键时，按键两端接通，当放开时，两端再次断开。</p><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路"><a href="#1-根据原理图搭建电路" class="headerlink" title="1. 根据原理图搭建电路"></a>1. 根据原理图搭建电路</h3><p>直插式LED灯负极接开发板GND，正极接220Ω限流电阻，电阻另一端接开发板数字9引脚。按键一端接开发板GND，另一端接数字引脚2。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401151735.jpg" alt="实验原理图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401151755.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * Digital_Button * 通过按键控制LED灯亮灭 */</span><span class="token keyword">int</span> buttonPin <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// 按键的管脚定义</span><span class="token keyword">int</span> ledPin <span class="token operator">=</span>  <span class="token number">9</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// LED灯管脚定义</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//设置LED管脚输出模式</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>buttonPin<span class="token punctuation">,</span> INPUT_PULLUP<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置按键管脚上拉输入模式</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">digitalRead</span><span class="token punctuation">(</span>buttonPin<span class="token punctuation">)</span> <span class="token operator">==</span> LOW<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 若按键被按下</span>    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//等待跳过按键抖动的不稳定过程</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">digitalRead</span><span class="token punctuation">(</span>buttonPin<span class="token punctuation">)</span> <span class="token operator">==</span> LOW<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 若按键被按下</span>    <span class="token punctuation">{</span>            <span class="token function">digitalWrite</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 点亮LED灯</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">else</span> <span class="token punctuation">{</span>       <span class="token function">digitalWrite</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 熄灭LED灯</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="http://cdn.tonycode.top/image/03.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>按下按键，LED灯点亮。放开按键，LED灯熄灭。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401151831.gif" alt="实验现象"></p><h2 id="4-函数介绍"><a href="#4-函数介绍" class="headerlink" title="4. 函数介绍"></a>4. 函数介绍</h2><p><strong>digitalRead()</strong></p><ul><li>描述：读取指定数字引脚的值</li><li>函数原型：<strong>digitalRead(pin)</strong></li><li>参数：要读取的数字引脚编号</li><li>返回值：HIGH(1)或LOW(0)</li></ul><h2 id="5-总结分析"><a href="#5-总结分析" class="headerlink" title="5. 总结分析"></a>5. 总结分析</h2><p>通过digitalRead()函数来读取数字I/O引脚状态，然后根据状态去点亮或者熄灭LED灯。需要注意：</p><ul><li>由于Arduino上电后，数字I/O管脚处于悬空状态，此时通过digitalRead()读到的是一个不稳定的值(可能是高，也可能是低)。所以通过pinMode()函数设置按键引脚为上拉输入模式。即使用内部上拉电阻，按键未按下时，引脚将为高电平，按键按下为低电平。</li></ul><ul><li>按键在按下的过程中，有一段接触未接触的不稳定过程，即按键的抖动。在判断按键状态时，通过delay()延时跳过抖动的不稳定状态，即软件上进行消抖。</li></ul><ul><li>可以不使用内部上拉电阻，在电路上添加按键的上拉电阻或下拉电阻，可达到相同效果。</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> Led </tag>
            
            <tag> 按键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派笔记02—树莓派硬件环境准备</title>
      <link href="/posts/58fa.html"/>
      <url>/posts/58fa.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401194808.jpg" alt=""></p><p>在开始玩转树莓派之前，我们需要了解下树莓派的硬件配置以及所需要的配件。跟电脑PC机类似，树莓派也需要必要的输入输出设备才能工作。</p><h2 id="1-树莓派3B"><a href="#1-树莓派3B" class="headerlink" title="1. 树莓派3B+"></a>1. 树莓派3B+</h2><p>2018年3月14日，树莓派基金会正式发布新版树莓派3B+，升级后的处理器拥有有利于散热的金属外壳封装，并改进了其网络功能，全新的Raspberry Pi 3B +的各方面性能和指标都超越其上一代产品Raspberry Pi 3B。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401194452.jpg" alt="树莓派硬件配置"></p><p>具体参数如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401194455.jpg" alt="3B+硬件参数"></p><h2 id="2-配件准备"><a href="#2-配件准备" class="headerlink" title="2.配件准备"></a>2.配件准备</h2><p>树莓派本身只是一个主机，要运行起来，必须拥有相关配件。这包括电源 、Micro SD卡、显示器、键鼠等。</p><h3 id="电源"><a href="#电源" class="headerlink" title="电源"></a>电源</h3><p>树莓派的供电接口就是普通的Micro USB。但需要注意的是，不要用电脑的USB直接给树莓派供电，电流太小会影响其运行。官方推荐使用独立电源，电压5V，电流2.5A。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401194803.jpg" alt="官方电源"></p><h3 id="Micro-SD卡"><a href="#Micro-SD卡" class="headerlink" title="Micro SD卡"></a>Micro SD卡</h3><p>树莓派本身不带闪存，系统需要安装在存储卡中。Micro SD卡最小容量8G，推荐使用16G或者更高容量的卡，选择Class10，以保证兼容性和读写速度。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401194456.jpg" alt="Micro SD卡"></p><h3 id="显示器"><a href="#显示器" class="headerlink" title="显示器"></a>显示器</h3><p>树莓派有HDMI高清输出口，普通显示器或者电视机都可以通过HDMI来连接。不过显示器只有在安装系统时需要，后面可以通过SSH登陆了。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401194457.jpg" alt="显示器"></p><h3 id="键鼠"><a href="#键鼠" class="headerlink" title="键鼠"></a>键鼠</h3><p>任何标准USB键盘和鼠标都可以与树莓派一起使用。你只需要将他们插入树莓派的USB接口，即插即用，无需任何额外的驱动程序，树莓派在启动时自动识别它们。你也可以选择蓝牙键鼠，使用方便。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401194458.jpg" alt="微型键鼠"></p><p>现在你已经准备好了所需要的配件。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401194459.gif" alt="外设接入"></p><p>下一步我们就可以给树莓派安装系统了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派笔记01—35美元的Linux超级计算机</title>
      <link href="/posts/f02c.html"/>
      <url>/posts/f02c.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401193726.jpg" alt=""></p><p>普及编程，服务大众是树莓派的一个理想，它打造了一个廉价、简洁、好玩、高效并能充分发挥创造力的开发平台，它的售价只有35美元，这大概是性价比最高的Linux计算机了吧。发挥你的想象，创作你的创作，人人都应该拥有一台树莓派。</p><h2 id="什么是树莓派（Raspberry-Pi）"><a href="#什么是树莓派（Raspberry-Pi）" class="headerlink" title="什么是树莓派（Raspberry Pi）"></a>什么是树莓派（Raspberry Pi）</h2><p>Raspberry Pi(中文名为「树莓派」,简写为 RPi/RasPi)是一种只有信用卡大小的卡片式电脑，其系统基于 Linux。</p><p>树莓派由注册于英国的慈善组织「Raspberry Pi 基金会」研发，最初的设计目标是用较为廉价的硬件和开源软件为儿童提供一个计算机教育平台。但其优秀的扩展性和易于开发的特性，使其不仅仅用于儿童教育，更是成为了极客们的玩具。树莓派被开发出了千千万万种玩法，并且普通人也可以轻松实现。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401193728.jpg" alt="目前最新版本：3B+"></p><h2 id="树莓派能做什么"><a href="#树莓派能做什么" class="headerlink" title="树莓派能做什么"></a>树莓派能做什么</h2><p>你可以在树莓派上安装摄像头、氢气球和传感器让它上天，去探索宇宙。你可以搭建私人气象站，智能家居控制中心又或者是做成摄像监控系统。</p><p>如果你只是想用于学习，那么接上显示器和键鼠就是一台 Linux 电脑了。你可以运行所有Linux下的程序，你可以用来运行你的Python、你的Shell，来学习Linux系统编程，无需虚拟机。</p><p>你也可以选择连接WiFi丢在墙角当作一台服务器，可以部署你的博客、你的网站、你的私有云。还有那些游戏机、机器人、3D打印机更是不在话下。除了不能拿来吃，它能干的还有很多很多。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401193730.jpg" alt="网友的灵感"></p><h2 id="树莓派种类"><a href="#树莓派种类" class="headerlink" title="树莓派种类"></a>树莓派种类</h2><p>树莓派是全球范围内销售量最大的 mini 单板机电脑，其前后发布版本如下表所示：</p><table><thead><tr><th>发布时间</th><th align="center">版本型号</th></tr></thead><tbody><tr><td>2011-12</td><td align="center">Raspberry Pi Model B</td></tr><tr><td>2014-07</td><td align="center">Raspberry Pi Model B+</td></tr><tr><td>2014-11</td><td align="center">Raspberry Pi Model A+</td></tr><tr><td>2015-02</td><td align="center">Raspberry Pi 2 Model B</td></tr><tr><td>2015-11</td><td align="center">Raspberry Pi Zero</td></tr><tr><td>2016-02</td><td align="center">Raspberry Pi 3 Model B</td></tr><tr><td>2017-02</td><td align="center">Raspberry Pi Zero W</td></tr><tr><td>2018-03</td><td align="center">Raspberry Pi 3 Model B+</td></tr></tbody></table><p>树莓派在硬件性能上不断提升，价格依然保持不变，绝对良心的加量不加价，而且软件硬件兼容性很好，这使得你在3B上开发的程序完全可以在Zero上运行而不需要过多的修改。</p><p>一张树莓派的全家福，你拥有多少呢？</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401193724.jpg" alt="树莓派全家福"></p><p>普及编程，服务大众。开源的力量，不是说我们可以免费享用他人的成果，而是说集合全世界的力量。这种力量也是推动树莓派兴起的重要原因。开源，将DIY（Do it yourself）变成了DIT（Do it together），使得树莓派有着无限可能。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇06——流动的LED灯</title>
      <link href="/posts/6a8f.html"/>
      <url>/posts/6a8f.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401150812.jpg" alt=""></p><p>上一篇介绍了Arduino数字I/O引脚及相关函数，并点亮了板载LED灯。本篇将使用面包板搭建电路，多个LED灯配合显示流动效果。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li><li>面包板及配套连接线</li><li>6个LED灯</li><li>6个220Ω电阻</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-根据原理图搭建电路"><a href="#1-根据原理图搭建电路" class="headerlink" title="1. 根据原理图搭建电路"></a>1. 根据原理图搭建电路</h3><p>直插式LED灯有两个引脚，长引脚为正极，短引脚为负极。LED灯点亮就是电流从正极流入，从负极流出。6个LED灯的负极连接到开发板的GND引脚，正极分别连接220Ω限流电阻连接到开发板的数字I/O引脚。</p><p>实验原理图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401150851.jpg" alt="电路连接图"></p><p>实物连接图如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401150914.jpg" alt="实物连接图"></p><h3 id="2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#2-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>2. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* * Led_Flash * 依次点亮1~6号LED灯，依次熄灭6~1号LED灯，如此循环 */</span><span class="token keyword">int</span> delayTime <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span><span class="token keyword">int</span> ledPin<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>ledPin <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> ledPin <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span> ledPin<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//依次设置1~6个数字引脚为输出模式</span>  <span class="token punctuation">{</span>     <span class="token function">pinMode</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置第ledPin个引脚为输出模式</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>ledPin <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> ledPin <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span> ledPin<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//每隔delayTime依次点亮1~6引脚相连的led灯</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//点亮ledPin引脚相连的led灯</span>    <span class="token function">delay</span><span class="token punctuation">(</span>delayTime<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//延时delayTime</span>  <span class="token punctuation">}</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>ledPin <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span> ledPin <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> ledPin<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//每隔delayTime依次熄灭6~1引脚相连的led灯</span>  <span class="token punctuation">{</span>    <span class="token function">digitalWrite</span><span class="token punctuation">(</span>ledPin<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//熄灭ledPin引脚相连的led灯</span>    <span class="token function">delay</span><span class="token punctuation">(</span>delayTime<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//延时delayTime</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。"><a href="#3-连接开发板，设置好对应端口号和开发板类型，进行程序下载。" class="headerlink" title="3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。"></a>3. 连接开发板，设置好对应端口号和开发板类型，进行程序下载。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401150940.jpg" alt="程序下载"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>LED灯依次点亮，依次熄灭，达到流动效果。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401150957.gif" alt="流水灯效果"></p><h2 id="4-程序分析"><a href="#4-程序分析" class="headerlink" title="4. 程序分析"></a>4. 程序分析</h2><p>在setup部分通过for循环将1<del>6号引脚设置为输出模式。在loop部分，通过两个for循环依次点亮1</del>6号LED灯，依次熄灭6~1号LED灯，使用的依然是digitalWrite函数。</p><p>延时时间定义为200，你可以改变它来控制流动速度。还可以通过修改程序中引脚的输出顺序来尝试更多不同的点亮LED的方式。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> Arduino </tag>
            
            <tag> Led </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇05——LED照亮你的美</title>
      <link href="/posts/7938.html"/>
      <url>/posts/7938.html</url>
      
        <content type="html"><![CDATA[<p>本篇主要介绍Arduino数字引脚及相关函数，通过数字I/O输出控制板载LED灯亮灭状态（数字引脚13）。</p><p>数字信号是以0、1表示的电平不连续变化的信号，也就是以二进制的形式表示的信号。在Arduino中数字信号通过高低电平来表示，高电平则为数字信号1，低电平则为数字信号0 ，其实在计算机中也只有0和1两种信号。</p><p>Arduino开发板上每一个带有数字编号的引脚，都是数字引脚，包括标有”A”编号的模拟输入引脚。可以通过这些引脚来实现数字信号的输入输出。</p><h2 id="1-实验材料"><a href="#1-实验材料" class="headerlink" title="1. 实验材料"></a>1. 实验材料</h2><ul><li>Uno R3开发板</li><li>配套USB数据线</li></ul><h2 id="2-实验步骤"><a href="#2-实验步骤" class="headerlink" title="2. 实验步骤"></a>2. 实验步骤</h2><h3 id="1-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"><a href="#1-新建sketch，拷贝如下代码替换自动生成的代码并进行保存。" class="headerlink" title="1. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。"></a>1. 新建sketch，拷贝如下代码替换自动生成的代码并进行保存。</h3><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">/*   Blink   等待一秒钟，点亮LED，再等待一秒钟，熄灭LED，如此循环*/</span><span class="token comment" spellcheck="true">//在大多数Arduino控制板上13号引脚都连接了一个标有"L"的LED灯</span><span class="token keyword">int</span> led <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//给13号引脚连接的设备起一个别名"led"</span><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">pinMode</span><span class="token punctuation">(</span>led<span class="token punctuation">,</span> OUTPUT<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将"led"引脚设置为输出状态</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>led<span class="token punctuation">,</span>  HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//引脚输出高电平1,点亮LED</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//等待1s</span>  <span class="token function">digitalWrite</span><span class="token punctuation">(</span>led<span class="token punctuation">,</span> LOW<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//引脚输出低电平0,熄灭LED</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//等待1s</span><span class="token punctuation">}</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401145936.jpg" alt="保存程序"></p><h3 id="2-通过USB数据线连接Uno-R3到电脑。在IDE中设置好对应端口号和开发板类型。"><a href="#2-通过USB数据线连接Uno-R3到电脑。在IDE中设置好对应端口号和开发板类型。" class="headerlink" title="2. 通过USB数据线连接Uno R3到电脑。在IDE中设置好对应端口号和开发板类型。"></a>2. 通过USB数据线连接Uno R3到电脑。在IDE中设置好对应端口号和开发板类型。</h3><h3 id="3-下载程序到开发板。"><a href="#3-下载程序到开发板。" class="headerlink" title="3. 下载程序到开发板。"></a>3. 下载程序到开发板。</h3><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401145941.jpg" alt="上传程序"></p><h2 id="3-实验现象"><a href="#3-实验现象" class="headerlink" title="3. 实验现象"></a>3. 实验现象</h2><p>可观察到板载LED灯间断闪烁。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401145945.gif" alt="LED闪烁"></p><h2 id="4-函数介绍"><a href="#4-函数介绍" class="headerlink" title="4. 函数介绍"></a>4. 函数介绍</h2><p><strong>pinMode()</strong>    </p><ul><li>描述：将指定引脚配置为输入或者输出模式</li><li>函数原型：<strong>pinMode(pin, mode)</strong></li><li>参数：<ul><li>pin:要设置其模式的引脚编号</li><li>mode: INPUT(输入模式), OUTPUT(输出模式), INPUT_PULLUP(上拉输入模式)</li></ul></li><li>返回值: 无返回值</li></ul><p><strong>digitalWrite()</strong>    </p><ul><li>描述：将数字HIGH或LOW值写入数字引脚</li><li>函数原型：<strong>digitalWrite(pin, value)</strong></li><li>参数：<ul><li>pin:要设置其输出的引脚编号</li><li>value:HIGH(1), LOW(0)</li></ul></li><li>返回值: 无返回值</li></ul><p> <strong>delay()</strong>    </p><ul><li>描述：将程序暂停给定参数的时间量（以毫秒为单位）</li><li>函数原型：<strong>delay(ms)</strong></li><li>参数：ms 暂停的毫秒数</li><li>返回值: 无返回值</li></ul><p>程序首先通过pinMode设置13引脚为输出模式，然后在loop里面通过digitalWrite来改变引脚的输出电平，HIGH输出高电平即为当前Arduino的工作电压5V，LOW输出低电平即为0V。delay函数暂停1s让我们可以清晰看到闪烁状态。你也可以减小等待时间，LED就会闪烁的更快了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> Arduino </tag>
            
            <tag> Led </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门04——Hello World</title>
      <link href="/posts/c12a.html"/>
      <url>/posts/c12a.html</url>
      
        <content type="html"><![CDATA[<p>在介绍了Arduino开发的软硬件环境之后，本篇开启Arduino编程第一行代码——Hello World。</p><h2 id="程序下载"><a href="#程序下载" class="headerlink" title="程序下载"></a>程序下载</h2><p><strong>1. 连接开发板到电脑。</strong> 将UNO R3开发板通过数据线连接到电脑。打开设备管理器查看驱动是否正常，并记住端口号，在步骤2中需要选择具体端口号。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401144537.jpg" alt="查看端口号"></p><p>若未找到设备端口，可能驱动未安装成功，右键带叹号的未识别设备，进行自动搜索安装程序软件即可。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401144543.jpg" alt="安装驱动"></p><p><strong>2. 新建sketch，设置端口和开发板类型。</strong>  启动Arduino IDE，在新打开的草图中「<strong>Ctrl+S</strong>」保存程序草图，名称最好为英文。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401144546.jpg" alt="保存草图"></p><p>点击<strong>工具</strong>选项，开发板类型选择「Arduino/Genunio Uno」,端口号选择上一步骤电脑识别到的端口号。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401144550.jpg" alt="选择端口号和开发板类型"></p><p><strong>3. 上传程序。</strong> 复制以下代码到代码区。</p><pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// put your setup code here, to run once:</span>  Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//初始化串口并设置波特率为9600</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// put your main code here, to run repeatedly:</span>  Serial<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//打印Hello World!并回车换行</span>  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//延时等待1s</span><span class="token punctuation">}</span></code></pre><p>点击<strong>上传</strong>按钮，IDE会对程序进行验证，若无错误则进行上传，即将程序下载到开发板。下载完成后IDE下方显示「<strong>上传完成</strong>」。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401144553.jpg" alt="程序上传"></p><p><strong>4. 观察串口打印信息。</strong>点击右侧<strong>串口监视器</strong>按钮进入串口监视器，将会看到Hello World每隔一秒种打印一次。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401144557.jpg" alt="串口监视器"></p><h2 id="程序介绍"><a href="#程序介绍" class="headerlink" title="程序介绍"></a>程序介绍</h2><p>每次新建一个sketch时，IDE会自动生成两部分代码：</p><pre class=" language-C"><code class="language-C">void setup() {  // put your setup code here, to run once:}void loop() {  // put your main code here, to run repeatedly:}</code></pre><p>其中setup函数里面添加的程序只执行一次，一般为初始化语句。而loop函数里的程序语句将循环执行。</p><p>本程序中在setup部分添加了串口初始化语句：</p><pre class=" language-c"><code class="language-c">Serial<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token number">9600</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//初始化串口并设置波特率为9600</span></code></pre><p>在loop部分添加每间隔1s时间打印一次「Hello World!」的代码：</p><pre class=" language-C"><code class="language-C">Serial.println("Hello World!"); //打印Hello World!并回车换行delay(1000); //延时等待1s</code></pre><p>以上就是Arduino编程第一行代码，你已经会使用串口打印Hello World了。Arduino编程就是这么简单，动手试一下吧。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> Arduino </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇03—UNO R3开发板介绍</title>
      <link href="/posts/e28b.html"/>
      <url>/posts/e28b.html</url>
      
        <content type="html"><![CDATA[<p>工欲善其事，必先利其器。上一篇讲解了Arduino开发的软件环境，本文将介绍Arduino开发的硬件环境，即Arduino UNO R3开发板。</p><h2 id="UNO-R3开发板"><a href="#UNO-R3开发板" class="headerlink" title="UNO R3开发板"></a>UNO R3开发板</h2><p>Arduino生态中包括多种开发板、模块、扩展板。其中UNO R3是最适合入门且功能齐全使用量最多的Arduino开发板。以下就是官方正版Arduino UNO R3开发板本尊的庐山真面目。<a href="https://store.arduino.cc/usa/arduino-uno-rev3" target="_blank" rel="noopener">关于UNO R3官网的介绍。</a></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401144209.jpg" alt="Uno R3"></p><p>Arduino Uno是一款基于ATmega328P的微控制器板。它有14个数字输入/输出引脚(其中6个可用作PWM输出)，6个模拟输入，16MHz晶振时钟，USB连接，电源插孔，ICSP接头和复位按钮。只需要通过USB数据线连接电脑就能供电、程序下载和数据通讯。</p><p>UNO R3硬件资源配置如下：</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401144227.jpg" alt="硬件配置"></p><h3 id="重要的引脚介绍"><a href="#重要的引脚介绍" class="headerlink" title="重要的引脚介绍"></a>重要的引脚介绍</h3><ul><li><strong>Power 引脚:</strong> 开发板可提供3.3V和5V电压输出，Vin引脚可用于从外部电源为开发板供电。</li><li><strong>Analog In引脚：</strong> 模拟输入引脚，开发板可读取外部模拟信号，A0~A5为模拟输入引脚。</li><li><strong>Digital 引脚：</strong>UNO R3拥有14个数字I/O引脚，其中6个可用于PWM(脉宽调制)输出。数字引脚用于读取逻辑值(0或1)，或者作为数字输出引脚来驱动外部模块。标有”~”的引脚可产生PWM。</li><li><strong>TX和RX引脚：</strong> 标有TX(发送)和RX(接收)的两个引脚用于串口通讯。其中标有TX和RX的LED灯连接相应引脚，在串口通讯时会以不同速度闪烁。</li><li><strong>13引脚：</strong>开发板标记第13引脚，连接板载LED灯，可通过控制13引脚来控制LED灯亮灭。一般拿到开发板上电板载灯都会闪烁，可辅助检测开发板是否正常。</li></ul><h2 id="国产UNO-R3开发板"><a href="#国产UNO-R3开发板" class="headerlink" title="国产UNO R3开发板"></a>国产UNO R3开发板</h2><p>虽然UNO R3使用量大，但价格上对比国内其他类型开发板没有明显优势。官网售价22刀，某宝正版售价也得近百元。所以国产性价比更高的UNO R3开发板应运而生。Arduino从来都抱着开源的态度，公开一切设计原理图和程序，所以在不影响编程和使用的情况下，国产UNO也是不错的选择。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401144249.jpg" alt="国产"></p><h2 id="入门开发套件"><a href="#入门开发套件" class="headerlink" title="入门开发套件"></a>入门开发套件</h2><p>对于Arduino的学习，单纯的有软件环境和开发板是不够的，必须配套相应的外部元器件、传感器才能进行编程实验。比如需要通过电位器元件来改变模拟输入电压，从而让开发板进行读取，开发板读取后控制LED灯的亮度。</p><p>市面上入门开发套件种类繁多，大家都在标榜自己的套件有多少种传感器元器件，多么的豪华高大上。其实对于初学者，重要的是学习Arduino编程，从这点上来说套件不在于多，只要能辅助学习UNO R3开发板所有资源就够了。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401144305.jpg" alt="入门套件"></p><p>关于Arduino UNO R3开发板的讲解就到这里，从下一篇开始我们来真正学习Arduino编程。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> Arduino </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门篇02—开发环境介绍</title>
      <link href="/posts/ea4f.html"/>
      <url>/posts/ea4f.html</url>
      
        <content type="html"><![CDATA[<p>工欲善其事，必先利其器。本文主要介绍Arduino开发环境IDE的安装及功能介绍。</p><h2 id="Arduino-IDE安装"><a href="#Arduino-IDE安装" class="headerlink" title="Arduino IDE安装"></a>Arduino IDE安装</h2><p>从官网下载IDE开发环境，<a href="https://www.arduino.cc/en/Main/Software" target="_blank" rel="noopener">IDE下载地址</a> 。笔者使用Win10系统，点击 <strong>Windows ZIP file for non admin install</strong>选项。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401142228.jpg" alt="IDE下载"></p><p>点击<strong>JUST DOWNLOAD</strong>进行下载。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401142301.jpg" alt="下载"></p><p>下载完毕后解压文件夹，双击<strong>arduino.exe</strong>运行软件。Arduino IDE依赖Java开发环境，需要PC机安装Java的JDK并进行变量配置。如果双击启动失败，可能是PC机无JDK支持。</p><h2 id="IDE软件介绍"><a href="#IDE软件介绍" class="headerlink" title="IDE软件介绍"></a>IDE软件介绍</h2><p>启动IDE，进入初始化界面，打开软件会发现这个开发环境非常简洁。</p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401142402.jpg" alt="启动IDE"></p><p>界面大致分为四个部分：</p><ul><li>菜单栏。包含文件菜单、编辑菜单、程序菜单、工具菜单和帮助菜单；</li><li>工具栏。包含编译、上传、新建程序(sketch)、打开程序(sketch)、保存程序(sketch)和串口监视器(Serial Monitor)；</li><li>编辑区。程序代码编写区域；</li><li>状态区。显示程序编译和上传等信息。</li></ul><p>几个常用功能介绍：</p><ul><li>点击<strong>文件</strong>-&gt;<strong>首选项</strong> (快捷键<strong>Ctrl+，</strong>)进入软件设置界面，可在此界面设置编辑器语言、编辑器字体大小、显示行号、代码折叠等。通过设置编辑器语言可进行中英文切换，还有很多其他外文。设置完毕后点击确认(好/OK)，部分设置需要重启软件生效。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401142437.jpg" alt="首选项"></p><ul><li>点击<strong>文件</strong>-&gt;<strong>示例</strong>可打开环境内置示例程序。环境自带非常多的例程，包括基础、数字、模拟、通讯、显示等。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401142507.jpg" alt="示例"></p><ul><li>点击<strong>项目</strong>，会发现工具栏中的图标编译、上传也包含在其中。点击<strong>加载库</strong>，选择列表中的库文件后，编辑区自动添加相关的头文件。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401142556.jpg" alt="加载库"></p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401142613.jpg" alt="加载后效果"></p><ul><li>点击<strong>项目</strong>-&gt;<strong>加载库</strong>-&gt;<strong>管理库</strong>，可搜索安装网络中各种支持库，选中需要安装的库点击安装即可在线下载安装，非常方便。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401142632.jpg" alt="管理库"></p><ul><li>点击<strong>工具</strong>-&gt;<strong>开发板</strong> ，可进行不同开发板的选择，列表包含了大部分Arduino开发板，可通过<strong>开发板管理器</strong>添加开发板选项。点击<strong>端口</strong> 进行端口号选择。此外<strong>工具</strong>选项还包含为开发板烧录引导程序的相关选项。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401142653.jpg" alt="选择开发板"></p><ul><li>点击<strong>帮助</strong>，在列表中点击相应选项可进入官网相关内容的介绍。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401142753.jpg" alt="帮助"></p><ul><li>点击<strong>工具栏</strong>中的<strong>串口监视器</strong>，可启动IDE自带的串口监视窗口，此工具用于串口通讯，非常方便，后续学习经常用到此功能。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401143446.jpg" alt="串口监视器"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> Arduino </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arduino基础入门01—Arduino介绍</title>
      <link href="/posts/c40.html"/>
      <url>/posts/c40.html</url>
      
        <content type="html"><![CDATA[<p>欢迎来到Arduino的世界，本文主要介绍Arduino的优势，开发所涉及的硬件分类，开发语言及开发环境的下载。可登陆<a href="https://www.arduino.cc/" target="_blank" rel="noopener">Arduino官网</a>学习了解更多Arduino信息。</p><h2 id="什么是Arduino"><a href="#什么是Arduino" class="headerlink" title="什么是Arduino"></a>什么是Arduino</h2><p>Arduino 是一款便捷灵活、方便上手的开源电子原型平台，包含硬件（各种型号的arduino板）和软件（arduino IDE)，她适用于艺术家、设计师、爱好者和对于“互动”有兴趣的朋友们。  </p><p>Arduino能通过各种各样的传感器来感知环境，通过控制灯光、马达和其他的装置来反馈、影响环境。板子上的微控制器可以通过Arduino的编程语言来编写程序，编译成二进制文件，烧录进微控制器。  </p><p> 对Arduino的编程是利用 Arduino编程语言 (基于 Wiring)和Arduino开发环境(based on Processing)来实现的。基于Arduino的项目，可以只包含Arduino，也可以包含Arduino和其他一些在PC上运行的软件，他们之间进行通信 (比如 Flash, Processing, MaxMSP)来实现。  </p><p>你可以自己动手制作，也可以购买成品套装。Arduino所使用到的软件都可以免费下载。硬件参考设计 (CAD 文件)也是遵循availableopen-source协议, 你可以非常自由地根据要求去修改他们。  </p><h2 id="Arduino的优势"><a href="#Arduino的优势" class="headerlink" title="Arduino的优势"></a>Arduino的优势</h2><p>目前市场上还有许多其他的单片机和单片机平台，例如51单片机、STM32单片机等。但他们对于普通开发者来说门槛相对较高，需要有一定编程和硬件相关基础，内部寄存器较为繁杂，主流开发环境Keil配置相对麻烦，特别是对于STM32的开发，即使使用官方库也少不了环境配置，还有就是开发环境是收费的。  </p><p>Arduino不但简化了使用单片机工作的流程，同时还为教师、学生以及兴趣爱好者提供了一些其他系统不具备的优势:  </p><ul><li><strong>便宜</strong>。相比于其他单片机平台而言，Arduino生态的各种开发板性价比相对较高。  </li><li><strong>跨平台</strong>。Arduino软件（IDE）能在Windows、Mac OS X和Linux操作系统中运行，而大多数其他单片机系统仅限于在Windows操作系统中运行。  </li><li><strong>开发环境简单</strong>。Arduino的编程环境易于初学者使用，同时对高级用户来讲也足够灵活，其安装和操作都非常简单。  </li><li><strong>开源可扩展</strong>。Arduino软件硬件都是开源的，开发者可以对软件库进行扩展，也可以下载到千千万万的软件库来实现自己的功能。Arduino允许开发者对硬件电路进行修改和扩展来满足不同的需求。  </li></ul><h2 id="Arduino开发板类型"><a href="#Arduino开发板类型" class="headerlink" title="Arduino开发板类型"></a>Arduino开发板类型</h2><p>Arduino生态包括多种开发板、模块、扩展板、工具和配件。官方将其大致分为五类：入门级、网络版、物联网版、教育版、可穿戴版。具体可从官网查看<a href="https://www.arduino.cc/en/Main/Products" target="_blank" rel="noopener">Arduino开发板类型。</a>  </p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401134931.jpg" alt="Arduino开发板类型"></p><p>其中入门级开发板易于使用。建议初学者使用入门级如Arduino UNO R3。  </p><p>  <img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401134957.jpg" alt="入门级开发板"></p><h2 id="Arduino开发语言"><a href="#Arduino开发语言" class="headerlink" title="Arduino开发语言"></a>Arduino开发语言</h2><p>Arduino使用C/C++编写程序，虽然C++兼容C语言，但这是两种语言，C语言是一种面向过程的编程语言，C++是一种面向对象的编程语言。早期的Arduino核心库使用C语言编写，后来引进了面向对象的思想，目前最新的Arduino核心库采用C与C++混合编写而成。  </p><p>通常我们说的Arduino语言，是指Arduino核心库文件提供的各种应用程序编程接口（Application Programming Interface，简称API）的集合。这些API是对更底层的单片机支持库进行二次封装所形成的。例如，使用AVR单片机的Arduino的核心库是对AVR-Libc（基于GCC的AVR支持库）的二次封装。  </p><p>传统开发方式中，需要通过配置多个寄存器来实现相应功能，而在Arduino中，繁杂的寄存器被封装成简单的API，能进行直观控制，增强程序的可读性的同时也提高了开发效率。</p><h2 id="Arduino开发环境"><a href="#Arduino开发环境" class="headerlink" title="Arduino开发环境"></a>Arduino开发环境</h2><p>Arduino开发环境IDE可从官网进行下载，支持Windows、Mac OS X、Linux不同平台，对应PC平台进行下载。<a href="https://www.arduino.cc/en/Main/Software" target="_blank" rel="noopener">IDE下载地址</a><br>当前最新版本为1.8.5。我的电脑为Windows系统，Windows版本有三种下载方式，选择一种下载即可。  </p><p><img src="https://cdn.jsdelivr.net/gh/TonyIOT/cdn@1.1/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/TonyIOT/Picgo/images/20200401135041.jpg" alt="IDE下载"></p><p>关于IDE软件的介绍将在下一节中详细介绍。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Arduino </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Uno </tag>
            
            <tag> Arduino </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
